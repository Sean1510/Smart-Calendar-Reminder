Smart Calendar Reminder 2 (347 actions, 122 KB)
"WFQuickActionSurfaces": [],
"WFWorkflowClientVersion": "3303.0.4",
"WFWorkflowHasOutputFallback": false,
"WFWorkflowHasShortcutInputVariables": true,
"WFWorkflowIcon": {
   "WFWorkflowIconStartColor": 431817727,
   "WFWorkflowIconGlyphNumber": 61701
},
"WFWorkflowImportQuestions": [],
"WFWorkflowInputContentItemClasses": [],
"WFWorkflowMinimumClientVersion": 3010,
"WFWorkflowMinimumClientVersionString": "3010",
"WFWorkflowOutputContentItemClasses": [],
"WFWorkflowTypes": []


〔0〕 If 〔Shortcut Input〕 does not have any value

〔1〕 Comment
Input has no value: for setup and update

〔2〕 Comment
Inspired by [Schedule Shortcut or Alarm] but designed to work smarter for my needs! Instead of manually inputting each trigger or alarm, this shortcut leverages my Calendar as the ultimate data source. It automatically scans for upcoming events, then:

• Speaks out the event details
• Sets a tailored alarm—accounting for travel and prep time—right when you need it

No more early, forgettable reminders. It keeps your schedule perfectly in sync. Give it a try and let your Calendar do the heavy lifting!

〔3〕 Dictionary　» 4 5 7 9 10 11 12 21
{  "Name": "Smart Calendar Reminder",
   "Version": "1.1",
   "RH ID": "21959",
   "Icons": {
      "Update": "iVBORw0KGgoAAAANSUhEUgAAAD4AAAA+CAYAAABzwahEAAABYWlDQ1BrQ0dDb2xvclNwYWNlRGlzcGxheVAzAAAokWNgYFJJLCjIYWFgYMjNKykKcndSiIiMUmB/yMAOhLwMYgwKicnFBY4BAT5AJQwwGhV8u8bACKIv64LMOiU1tUm1XsDXYqbw1YuvRJsw1aMArpTU4mQg/QeIU5MLikoYGBhTgGzl8pICELsDyBYpAjoKyJ4DYqdD2BtA7CQI+whYTUiQM5B9A8hWSM5IBJrB+API1klCEk9HYkPtBQFul8zigpzESoUAYwKuJQOUpFaUgGjn/ILKosz0jBIFR2AopSp45iXr6SgYGRiaMzCAwhyi+nMgOCwZxc4gxJrvMzDY7v////9uhJjXfgaGjUCdXDsRYhoWDAyC3AwMJ3YWJBYlgoWYgZgpLY2B4dNyBgbeSAYG4QtAPdHFacZGYHlGHicGBtZ7//9/VmNgYJ/MwPB3wv//vxf9//93MVDzHQaGA3kAFSFl7jXH0fsAAADkZVhJZk1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHwAAAHIBMgACAAAAFAAAAJKHaQAEAAAAAQAAAKYAAAAAAAABLAAAAAEAAAEsAAAAAUFkb2JlIFBob3Rvc2hvcCAyMS4wIChXaW5kb3dzKQAAMjAyMTowOTowNCAyMTozOTozNgAAA5AEAAIAAAAUAAAA0KACAAQAAAABAAAAPqADAAQAAAABAAAAPgAAAAAyMDIwOjAzOjE2IDE1OjM1OjUyANZzMsEAAAAJcEhZcwAALiMAAC4jAXilP3YAAAOYaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA2LjAuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5BZG9iZSBQaG90b3Nob3AgMjEuMCAoV2luZG93cyk8L3htcDpDcmVhdG9yVG9vbD4KICAgICAgICAgPHhtcDpNb2RpZnlEYXRlPjIwMjEtMDktMDRUMjE6Mzk6MzY8L3htcDpNb2RpZnlEYXRlPgogICAgICAgICA8eG1wOkNyZWF0ZURhdGU+MjAyMC0wMy0xNlQxNTozNTo1MjwveG1wOkNyZWF0ZURhdGU+CiAgICAgICAgIDx0aWZmOlJlc29sdXRpb25Vbml0PjI8L3RpZmY6UmVzb2x1dGlvblVuaXQ+CiAgICAgICAgIDx0aWZmOlhSZXNvbHV0aW9uPjMwMDwvdGlmZjpYUmVzb2x1dGlvbj4KICAgICAgICAgPHRpZmY6WVJlc29sdXRpb24+MzAwPC90aWZmOllSZXNvbHV0aW9uPgogICAgICAgICA8dGlmZjpPcmllbnRhdGlvbj4xPC90aWZmOk9yaWVudGF0aW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFhEaW1lbnNpb24+NjI8L2V4aWY6UGl4ZWxYRGltZW5zaW9uPgogICAgICAgICA8ZXhpZjpQaXhlbFlEaW1lbnNpb24+NjI8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KPiAUJQAABPJJREFUaAXtmM1vG0UYxmd21x84jkMcJ9cIECck7tx7gyJABHFoRBInaWlonbRRJQ5IHDmkgSSQyEnsJkItEkKAIlVc4co/UCnAoRRFlZ11/JU69X7xvOt1lBripI09lmDGWs+uPbszv+d5552xGZNFKiAVkApIBaQCUgGpgFRAKiAVkApIBaQC/z8FHg7PdmWGLoc7Ra50ouPd+NSwplZ2lJCzk7nw4WgnxsBFd6rHr4xFg8EUY9DcspltGCxXqVzsv5NcFTkWoY5nxj+KR0OhFFMI2mKObTGFc9YbCCaz71+a+E+C6xcT8f5weN2Ftm3GEGsUbrbjMBXwPX7fava9CWHwQhzXL8/Eo11dgFYZbAYxR4UwdwXgzERN8BG/fzX7bnxchPNtB9enpscR3kechs8AvX9vm93f/s09VxTOLAhC8N3+wJoI+LaC61evj0fD3WtMhdOeu4ht9ue9bTNf2GWFQo799fsfpoXPVK4wE2FPc75L9a1l3hmLt9P5toHrV65NILzXDuc0JTSA6fn8J7lc5qFP1ZiG0N8r6HqxUPy4Csc1QFte2AN+PfNW++DbAq4nZieikciqO6ddpz3oyqOpL79OzmmqT+NIbRygiqL6f/1la3nfsEbIcQ0CWV7CC6nquv72yFg7nG85uH6NoLsBjUcTNNUMTpdLV2PJheWhV14LMQfIBI2D6sGXXg3FvlnZLFar8XqiM7057+daKvNm6+FbCp6duT4ZDZPTdWgkMgrvEkEvLrnORSKMI5kB+/CoOzrw7Vr6kWGMuc57c54SXlBRU5nXWwvfMvAcoGOR55NMrUOjdhigC4nYyhc1aI9QARQd3Kvr4FT3fbd+a98yAV+b8yQCwQc0JaW/8cHo0bZnOW8JuD4zO9rb0whNThcTsa8WFo8OMIILAuaIClrGyP3Q0QY4HwD8gWWO1pzHOu/BIxmmd8+PDDc0f6bLM4Nnb9zoRjinmKZ5SxY57YZ3IrY0/wR0fYS0dNVdV2lT8w90xmLfpzcqlnUITwnPB5Gw05vPnZvsqT/rWeszgyuVEFdVlbIUc9drxHcuX5iOLcz9KzQNlFxW4LjrPEQ4rgz8mN6oOtYIQfspQtAHWqulQPn4m457WMPnZ35A39KnRcOxL5X39lgxn2d6IT/Vt3hzoaGfJy4VrtYch9skQLMS++HW5mPbvFA2jUzJMPZsh88O3r2z1+ye03zXvNfTPAFt+ufnkrl9HrWtam/s85vLJ91G87s2x2shz7qa39G/tXlbMc2XNY2/OHB3I9289em+xcRsTRlc+eyULkTg9oGb2KhnB2HsMOvEQfT9dLt4YqOnaNAy8FP3ibSuHHhOu9AOC+IluogHByHNa3o5yIcK1utOlJbM8acZOK3jbnIjeHeu03ImvnTMcdqjw3DMb2zvgjgEl46Auxmd1n0USm74A849F/nWGXDauWETQ8wKJ8/FJzfhc5wx+nWGPZgLj+6xjWvcq4twXjh4yTQ4sjnyWm0TQ/9HVCyzFvciiL0+OhLq2KRTqQ2BJjwTv6QJd1wJGQhuxDlldYKn3x0Bv3DHhYM/xk8rpLNiEH82BnCAvIy3kheBwirh4C/8vHFgc3W6YFYfFM3qDkRI9G+lhYMLU7ixowdDQ8/tnJ/sREJvHIq8lgpIBaQCUgGpgFRAKiAVkApIBaQCUgGpgGgF/gYis7Q8r5hdXgAAAABJRU5ErkJggg==",
      "Skip": "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",
      "Not Now": "iVBORw0KGgoAAAANSUhEUgAAAD4AAAA+CAYAAABzwahEAAABYWlDQ1BrQ0dDb2xvclNwYWNlRGlzcGxheVAzAAAokWNgYFJJLCjIYWFgYMjNKykKcndSiIiMUmB/yMAOhLwMYgwKicnFBY4BAT5AJQwwGhV8u8bACKIv64LMOiU1tUm1XsDXYqbw1YuvRJsw1aMArpTU4mQg/QeIU5MLikoYGBhTgGzl8pICELsDyBYpAjoKyJ4DYqdD2BtA7CQI+whYTUiQM5B9A8hWSM5IBJrB+API1klCEk9HYkPtBQFul8zigpzESoUAYwKuJQOUpFaUgGjn/ILKosz0jBIFR2AopSp45iXr6SgYGRiaMzCAwhyi+nMgOCwZxc4gxJrvMzDY7v////9uhJjXfgaGjUCdXDsRYhoWDAyC3AwMJ3YWJBYlgoWYgZgpLY2B4dNyBgbeSAYG4QtAPdHFacZGYHlGHicGBtZ7//9/VmNgYJ/MwPB3wv//vxf9//93MVDzHQaGA3kAFSFl7jXH0fsAAADkZVhJZk1NACoAAAAIAAcBEgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHwAAAHIBMgACAAAAFAAAAJKHaQAEAAAAAQAAAKYAAAAAAAABLAAAAAEAAAEsAAAAAUFkb2JlIFBob3Rvc2hvcCAyMS4wIChXaW5kb3dzKQAAMjAyMDowMzoxNiAxNToyODowNgAAA5AEAAIAAAAUAAAA0KACAAQAAAABAAAAPqADAAQAAAABAAAAPgAAAAAyMDIwOjAzOjE2IDE1OjI4OjA2AMhh/aMAAAAJcEhZcwAALiMAAC4jAXilP3YAAAJVaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA2LjAuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgICAgICAgICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iPgogICAgICAgICA8eG1wOkNyZWF0ZURhdGU+MjAyMC0wMy0xNlQxNToyODowNjwveG1wOkNyZWF0ZURhdGU+CiAgICAgICAgIDx4bXA6Q3JlYXRvclRvb2w+QWRvYmUgUGhvdG9zaG9wIDIxLjAgKFdpbmRvd3MpPC94bXA6Q3JlYXRvclRvb2w+CiAgICAgICAgIDx4bXA6TW9kaWZ5RGF0ZT4yMDIwLTAzLTE2VDE1OjI4OjA2PC94bXA6TW9kaWZ5RGF0ZT4KICAgICAgICAgPHRpZmY6T3JpZW50YXRpb24+MTwvdGlmZjpPcmllbnRhdGlvbj4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+Ch8J5twAAASuSURBVGgF7ZhdaFxFFMdn7kdM2wTZxFoChWIjYkBNW5eA1EoKii1iIFYo+LF3K2nSR8EHWz9ehIIPPuiT/bDYDYRCEUSt5EEkIC1YjZZ+2SqEWAzWhXRL7bbc3Xtnxv+5yTXZEPBKZvZphiUny86de37/c87MuZcxO6wCVgGrgFXAKmAVsApYBawCVgGrgFXAKmAVsApYBawCRhTgule989YLXaEndkihLq49+OXkStYv7+7rjYXs8Xx3Yt2Js+WVrLX0Wq3gBF3zxKXc2vYOdrfGbt4J93W899XhpTfN8v36i/mCYupYm+961UhcdX2vXye8k8WJrHNCr74jgQ4jxnyX5dpXH6q8O7Av6/XpvJldjweALrkO925HggH+YRXL/vR3HVYruBTORVYNGaM8imVic+2tH1feeX4kq7MEzbk67mCNSEjmwv4dxVEcx1ezrpFlnlZwqumb1foIi8Xcvedtrq31UOXAf8PP7NoUMAZoXI3aTqBjoRgTamj95+fOZwHKOkdrjac3rbz93HBudevhxHMJxyl8sKj5kY6DXx9J5y221wY3BQA+7nLOYqWYBytgOeMBoEcXz9XxvxFwcqyyf+dwbg3g56FTm8C/P94Af23wsYArjvSegyV4CWjFnWCDAWjyzxg4LX7jzZ17O1a1HEmhU1up1oc7Pxg/SnOmBwDNEWm4QhEm6CTSnAUbvrigPdJ0TxpGwekGN954dii3quUoR+QV0j2xALwVRnsql/+oO64zRklBpUwbGVWGUjzYeMocdFPAE/jXnxm6F/A4nrDZo35hw1rE/vrtT8GkdAl2caQ3nrpsLNLkDw3sJ+ZH54fffHLrbjhUr8eMS8kinM18LrQu7d4cGUBHl5ISkTYPTcRNAacbdX707bHbYS0IazFTgBQ46gREUICOJRpcKV9+cPyK8UiTLzS8OdOkv5FEmctkx5aAl4g61T0yHdb4dtMA2bSIz+7dVrzHcUY9YMbo6ijqDB8BcI7NHPhjvzz9UKHBO4NfmgI++9q2ou84n1JdJ/UN6DrqHKkuAI0uTTEHKY9P6dL25sAbB5/dszXAMbUAPQ/POH81qskC7fKU5KgCijzyQTUF3mhhzQZPFDh3SnQ+p+c0WSVF8b7R70uUyef7uwO0pejPFxoYFALVfrH3u6lkjomMNwZefqWv4HB3GWhVvH9sDjoFOvdUd9KnN7astAWo4mZD8EbAyy/1YZPiJWpUkoYFbSg9eKD/Lnad+GHZKBI8Ao2HlMbsQCIYgdcOfn13HunNEemF1KXeG8dVsevk8tD/Rn5rd6DwLL70WogYbDk9pfWM1wo+M7i51/XdH+G4v/jRUiBl15/8adlIp9CpnQQ8uvqGyMc4AR2u8ltOT2t7Jte6q3OX9axxHT95iQASsijUICs0wefPTJVQFEU638k5KpU21/GYdHrod11DK7hXjyboxSDekdGjZYQuPOj6bPJ/p2j+zO8l8AY4AeI212XVWPzqCzmhC5rW0ZrqtGB54JF1cYu/XQl2ZaWvi35+8oFeijRBP3p2WuvrZfLVDquAVcAqYBWwClgFrAJWAauAVcAqYBWwClgFrAJWAauAAQX+AYUgO5ZuoSfPAAAAAElFTkSuQmCC"
   }
}

〔4〕 Get Contents of URL https://routinehub.co/api/v1/shortcuts/〔3 Dictionary.RH ID〕/versions/latest 　➔ RH Server　» 6 8 11 16 20

〔5〕 Get File at Path 〔3 Dictionary.Name〕/Skip.txt from Folder　»
• File: {  "fileLocation": {
      "crossDeviceItemID": "docs.icloud.com:com.apple.CloudDocs/documents/95d6214c39557e3de40d802073a860c04f3aed5b",
      "fileProviderDomainID": "com.apple.CloudDocs.iCloudDriveFileProvider/38059A1C-DC76-4B89-B62F-250A61DBFC73",
      "appContainerBundleIdentifier": "com.apple.shortcuts",
      "relativeSubpath": "",
      "WFFileLocationType": "Shortcuts"
   },
   "filename": "Documents",
   "displayName": "Shortcuts"
}
• FileErrorIfNotFound: false
• ShowFilePicker: false
• GetFolderContents: true

〔6〕 If 〔5 File as Text〕 is not 〔4 RH Server as Dictionary.Version〕

〔7〕 Get Dictionary Value for Version in 〔3 Dictionary〕　»

〔8〕 If 〔7 Dictionary Value as Text〕 is not 〔4 RH Server as Dictionary.Version〕

〔9〕 Base64 Decode 〔3 Dictionary.Icons.Update〕

〔10〕 Show Alert A new version of 〔3 Dictionary.Name〕 is available to download!

〔11〕 Text　» 14
⬆️ Update ⬆️

A new version of 〔3 Dictionary.Name〕 is available to download!

〔3 Dictionary.Version〕 ↗ 〔4 RH Server as Dictionary.Version〕   —   〔4 RH Server as Dictionary.Release〕

〔4 RH Server as Dictionary.Notes〕

〔12〕 Text　»
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Update;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Update〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Skip;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Skip〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Not Now;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Not Now〕
END:VCARD

〔13〕 Set Name of 〔12 Text〕 to updateprompt.vcf　»

〔14〕 Choose from List 〔13 Renamed Item as Contact〕　» 15 19
• ChooseFromListActionPrompt: 〔11 Text〕

〔15〕 If 〔14 Chosen Item as Text〕 is Update

〔16〕 Open URL 〔4 RH Server as Dictionary.URL〕
• Show-WFInput: true

〔17〕 Stop This Shortcut

〔18〕 End If

〔19〕 If 〔14 Chosen Item as Text〕 is Skip

〔20〕 Save File 〔4 RH Server as Dictionary.Version〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔? Dictionary.Name〕/Skip.txt

〔21〕 Show Alert This version of 〔3 Dictionary.Name〕 has been skipped!
• AlertActionTitle: ✅ Done ✅
• AlertActionCancelButtonShown: false

〔22〕 End If

〔23〕 End If　▵8

〔24〕 End If　▵6

〔25〕 Dictionary 　➔ menus　»
{  "mainMenu": {
      "Setup": {
         "title": "Setup",
         "sub": "Find easy to follow instructions for setting up the required automations",
         "icon": ""
      }
   }
}

〔26〕 Get Dictionary from 〔25 menus.mainMenu〕　»

〔27〕 Repeat with Each in 〔26 Dictionary〕

〔28〕 Get Dictionary All Values in 〔Repeat Item as Dictionary〕 　➔ Options　»
• DictionaryKey: 〔Repeat Item as Dictionary’s Keys〕.title

〔29〕 Repeat[2] with Each in 〔28 Options as Dictionary〕

〔30〕 Text
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:〔Repeat Item 2 as Dictionary.title〕;
ORG:〔Repeat Item 2 as Dictionary.sub〕;
PHOTO;ENCODING=b:〔Repeat Item 2 as Dictionary.icon〕;
END:VCARD

〔31〕 End Repeat[2] with Each

〔32〕 End Repeat with Each　»

〔33〕 Text　»
〔32 Repeat Results〕

〔34〕 Set Name of 〔33 Text〕 to mainMenu.vcf　»

〔35〕 Get Contacts from 〔34 Renamed Item〕　»

〔36〕 Choose from List 〔35 Contacts〕　»
• ChooseFromListActionPrompt: ☀️Welcome to Smart Calendar Reminder☀️

〔37〕 If 〔36 Selected Item’s Name〕 is Setup

〔38〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• FileErrorIfNotFound: false

〔39〕 If 〔38 File’s File Size〕 does not have any value

〔40〕 Comment
All the information is stored in iCloud. The shortcut isn’t collecting anything.

〔41〕 Text　»
Choose Travel Time Calculation Method

1️⃣ Notes 🗓️ / Current 📍\u000D
Uses the address in the Calendar event Notes if available (routing via Notes if you're not already there), otherwise calculates directly from your current location to the event.\u000D
\u000D
2️⃣ Notes 🗓️ / Home 🏡\u000D
Uses the Notes address if available (same as 1️⃣), but if Notes are empty, routes via your home address if you're not already there, or directly from home if you are.\u000D
\u000D

〔42〕 Choose from Menu
• MenuPrompt: 〔41 Text〕
• MenuItems: [1️⃣ Notes 🗓️ / Current 📍,
2️⃣ Notes 🗓️ / Home 🏡]

〔43〕 Menu Item 1️⃣ Notes 🗓️ / Current 📍

〔44〕 Dictionary　»
{  "state": "\"\"",
   "street": "\"\"",
   "city": "\"\"",
   "country": "\"\"",
   "postcode": "\"\""
}

〔45〕 Set Variable HomeAddress to 〔44 Dictionary〕

〔46〕 Menu Item 2️⃣ Notes 🗓️ / Home 🏡

〔47〕 Text　»
Please provide your home address for accurate travel time calculations via Apple Maps.

〔48〕 Text　»
<!DOCTYPE html>
<html>
<head>
    <title>Address Collector</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Modern CSS styling */
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .form-container {
            max-width: 500px;
            margin: 20px auto;
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #34495e;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 0; /* Equal left/right margins */
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
            box-sizing: border-box; /* Ensures padding doesn't affect width */
        }

        input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.2);
        }

        button {
            background: #3498db;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #2980b9;
        }

        /* New success message styling */
        .success-message {
            display: none;
            background: #e8f5e9;
            color: #2e7d32;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            text-align: center;
        }

        .success-message.show {
            display: block;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>〔47 Text〕</h2>
        <form id="addressForm">
            <div class="form-group">
                <label>Street Address</label>
                <input type="text" id="street" placeholder="" required>
            </div>

            <div class="form-group">
                <label>City</label>
                <input type="text" id="city" placeholder="" required>
            </div>

            <div class="form-group">
                <label>State/Province</label>
                <input type="text" id="state" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Country/Region</label>
                <input type="text" id="country" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Postal Code</label>
                <input type="text" id="postcode" placeholder="" required>
            </div>

            <button type="button" onclick="sendToShortcut()">Submit Address</button>
        </form>

        <!-- Success message container -->
        <div class="success-message" id="successMessage">
            <p>Data collected successfully!</p>
        </div>
    </div>

<script>
function sendToShortcut() {
  const addressData = {
    street: document.getElementById('street').value,
    city: document.getElementById('city').value,
    state: document.getElementById('state').value,
    country: document.getElementById('country').value,
    postcode: document.getElementById('postcode').value
  };
\u{space}\u{space}
  // Copy data to clipboard
  navigator.clipboard.writeText(JSON.stringify(addressData));
\u{space}\u{space}
  // Show success message and hide form
  document.getElementById('addressForm').style.display = 'none';
  document.getElementById('successMessage').classList.add('show');
}
</script>
</body>
</html>

〔49〕 Set Name of 〔48 Text〕 to Address.html　»

〔50〕 Show Web View at 〔49 Renamed Item〕

〔51〕 Get Clipboard　»

〔52〕 Get Dictionary from 〔51 Clipboard〕　»

〔53〕 Set Variable HomeAddress to 〔52 Dictionary〕

〔54〕 End Menu　▵46

〔55〕 List　» 57
[🚙Driving,
🚶‍♀️Walking,
🚊Transit,
🚵‍♀️Biking]

〔56〕 Text　»
Select Travel Method (It will apply to all the events)

〔57〕 Choose from List 〔55 List〕 　➔ Travel Method Selected　»
• ChooseFromListActionPrompt: 〔56 Text〕

〔58〕 Set Variable TravelMethod to 〔57 Travel Method Selected〕

〔59〕 Text　»
Besides travel time, how many Extra Minutes Needed (e.g., '15 mins buffer')

〔60〕 Ask for Number Input 　➔ Extra Time Needed　»
• AskActionPrompt: 〔59 Text〕
• AskActionAllowsNegativeNumbers: false
• AskActionAllowsDecimalNumbers: false

〔61〕 Set Variable ExtraTime to 〔60 Extra Time Needed〕

〔62〕 Dictionary　»
{  "HomeAddress": "〔HomeAddress as Dictionary〕",
   "TravelMethod": "〔TravelMethod〕",
   "ExtraTime": "〔ExtraTime〕"
}

〔63〕 Save File 〔62 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/aboutme.txt

〔64〕 End If　▵39

〔65〕 Otherwise　▵37

〔66〕 End If

〔67〕 Otherwise　▵0

〔68〕 If 〔Shortcut Input as Number〕 is 1

〔69〕 Comment
Find all calendar events in the next day and set alarm automatically. Recommend set up automation at 12:00 am daily.

This is useful\u{space}

〔70〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• File: 〔Shortcut Input〕

〔71〕 Get Dictionary from 〔70 File〕　» 72 73 74

〔72〕 Set Variable HomeAddress to 〔71 Dictionary.HomeAddress〕

〔73〕 Set Variable HomeAddress to 〔71 Dictionary.TravelMethod〕

〔74〕 Set Variable ExtraTime to 〔71 Dictionary.ExtraTime〕

〔75〕 Find Calendar Events All Calendar Events where　» 76 77
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 1 days
Is All Day
Canceled is {"Bool":{"Value":false,"WFSerializationType":"WFBooleanSubstitutableState"}}

〔76〕 If 〔75 Calendar Events〕 has any value

〔77〕 Repeat with Each in 〔75 Calendar Events〕

〔78〕 If 〔Repeat Item’s Location〕 has any value

〔79〕 Get Current Location　» 88 94 110
• Accuracy: Best

〔80〕 If All are true　〔Repeat Item’s Notes〕 has any value　〔Repeat Item’s Notes〕 begins with {　〔Repeat Item’s Notes〕 ends with }

〔81〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔82〕 Get Dictionary from 〔Repeat Item’s Notes〕　» 83 84 85 86 87 94 97

〔83〕 Set Variable Street to 〔82 Dictionary.street〕

〔84〕 Set Variable City to 〔82 Dictionary.city〕

〔85〕 Set Variable State to 〔82 Dictionary.state〕

〔86〕 Set Variable Region to 〔82 Dictionary.country〕

〔87〕 Set Variable ZIP Code to 〔82 Dictionary.postcode〕

〔88〕 If All are true　〔79 Current Location’s Street〕 is 〔Street〕　〔79 Current Location’s City〕 is 〔City〕　〔79 Current Location’s State〕 is 〔State〕　〔79 Current Location’s Country〕 is 〔Region〕　〔79 Current Location’s ZIP Code〕 is 〔ZIP Code〕

〔89〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔90〕 Number 0　»

〔91〕 Set Variable CurrentToDeparture to 〔90 Number〕

〔92〕 Otherwise

〔93〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔94〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔79 Current Location〕
• Destination: 〔82 Dictionary〕

〔95〕 Set Variable CurrentToDeparture to 〔94 Travel Time〕

〔96〕 End If

〔97〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔82 Dictionary〕
• Destination: 〔Repeat Item’s Location〕

〔98〕 Calculate 〔97 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔99〕 Set Variable TravelTime to 〔98 Calculation Result〕

〔100〕 Otherwise　▵80

〔101〕 Comment
CALENDER EVENT NOTES IS BLANK

〔102〕 Get Dictionary from 〔HomeAddress〕　» 103 104 105 106 107

〔103〕 Get Dictionary Value for street in 〔102 Dictionary〕 　➔ street　» 108 110

〔104〕 Get Dictionary Value for city in 〔102 Dictionary〕 　➔ city　» 108 110

〔105〕 Get Dictionary Value for state in 〔102 Dictionary〕 　➔ state　» 108 110

〔106〕 Get Dictionary Value for country in 〔102 Dictionary〕 　➔ country　» 108 110

〔107〕 Get Dictionary Value for postcode in 〔102 Dictionary〕 　➔ postcode　» 108 110

〔108〕 If All are true　〔103 street〕 has any value　〔104 city〕 has any value　〔105 state〕 has any value　〔106 country〕 has any value　〔107 postcode〕 has any value

〔109〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔110〕 If All are true　〔79 Current Location’s Street〕 is 〔103 street〕　〔79 Current Location’s City〕 is 〔104 city〕　〔79 Current Location’s State〕 is 〔105 state〕　〔79 Current Location’s Country〕 is 〔106 country〕　〔79 Current Location’s ZIP Code〕 is 〔107 postcode〕

〔111〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔112〕 Number 0　»

〔113〕 Set Variable CurrentToDeparture to 〔112 Number〕

〔114〕 Otherwise

〔115〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔116〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔117〕 Set Variable CurrentToDeparture to 〔116 Travel Time〕

〔118〕 End If

〔119〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔Repeat Item’s Location〕

〔120〕 Calculate 〔119 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔121〕 Set Variable TravelTime to 〔120 Calculation Result〕

〔122〕 Otherwise　▵108

〔123〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔124〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔Repeat Item’s Location〕

〔125〕 Set Variable TravelTime to 〔124 Travel Time〕

〔126〕 End If

〔127〕 End If　▵100

〔128〕 Otherwise　▵78

〔129〕 Number 0　»

〔130〕 Set Variable TravelTime to 〔129 Number〕

〔131〕 End If

〔132〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔133〕 Adjust Subtract Date 〔Repeat Item’s Start Date〕　» 134 137 139 141 143 146 152 155 161 164 276
• Duration: 〔132 Calculation Result〕 min

〔134〕 Dictionary　» 143 147 153 155
{  "Event": "🗓️〔Repeat Item〕",
   "From": "〔Repeat Item’s Start Date〕",
   "To": "〔Repeat Item’s End Date〕",
   "Location": "〔Repeat Item’s Location〕",
   "AlarmTime": "〔133 Adjusted Date〕"
}

〔135〕 Date Current Date　» 136 137 141 276

〔136〕 Adjust Add Date 〔135 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"dd MMM yyyy"}〕 　➔ 1 day　» 140 150
• Duration: "1" days

〔137〕 If 〔133 Adjusted Date〕 > 〔135 Date〕

〔138〕 Comment
the supposed alrm date did not pass

〔139〕 Adjust Add Date 〔133 Adjusted Date〕　» 140 150
• Duration: "" days

〔140〕 If 〔139 Adjusted Date〕 is 〔136 1 day〕

〔141〕 If All are true　〔133 Adjusted Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕 is 〔135 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕　〔133 Adjusted Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕 is 〔135 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕

〔142〕 Comment
since this will be triggered at 12:00 am each day, when the supposed alarm time is 12:00 in the next day, you can set alarm now

〔143〕 Add Alarm for 〔133 Adjusted Date〕 called 〔134 Dictionary〕

〔144〕 Otherwise

〔145〕 Comment
when the time is other than 12:00 am of then next day, you cannot set alarm yet. If set, it will be today. For example, triggering time 2025-4-8 12:00 am, the supposed alarm time is 2025-4-9 08:00 am, if you set an alarm at 08:00 at 2025-4-8 12:00 am, it will alarm at 2025-4-8 08:00 am instead. So we need to record the supposed alarm time and trigger next day.

〔146〕 Set Variable SupposedAlarmTime to 〔133 Adjusted Date〕

〔147〕 Set Variable Event to 〔134 Dictionary〕

〔148〕 End If

〔149〕 Otherwise　▵140

〔150〕 If 〔139 Adjusted Date〕 > 〔136 1 day〕

〔151〕 Comment
likewise, we need to record the supposed alarm time and trigger next day.

〔152〕 Set Variable SupposedAlarmTime to 〔133 Adjusted Date〕

〔153〕 Set Variable Event to 〔134 Dictionary〕

〔154〕 Otherwise

〔155〕 Add Alarm for 〔133 Adjusted Date〕 called 〔134 Dictionary〕

〔156〕 End If

〔157〕 End If　▵149

〔158〕 Otherwise　▵137

〔159〕 Comment
the supposed alarm time passed

〔160〕 If 〔Repeat Item’s Location〕 has any value

〔161〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 at 〔Repeat Item〕 which  was supposed to get ready at 〔133 Adjusted Date〕. Please check.

〔162〕 Set Variable Text to 〔161 Text〕

〔163〕 Otherwise

〔164〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 which  was supposed to get ready at 〔133 Adjusted Date〕. Please check.

〔165〕 Set Variable Text to 〔164 Text〕

〔166〕 End If

〔167〕 Show Alert 〔Text〕

〔168〕 Show Notification 〔Text〕

〔169〕 Speak Text
• Text: 〔Text〕

〔170〕 End If　▵158

〔171〕 Dictionary　»
{  "Supposed Alarm Time": "〔SupposedAlarmTime〕",
   "Event": "〔Event〕"
}

〔172〕 Append 〔171 Dictionary〕 to Text File
• FilePath: SmartCalendarReminder/Future Alarms.txt

〔173〕 End Repeat with Each　▵77

〔174〕 End If　▵76

〔175〕 Get File at Path SmartCalendarReminder/Future Alarm.txt from Folder　»
• FileErrorIfNotFound: false
• File: 〔Shortcut Input〕

〔176〕 Split Text 〔175 File〕 by New Lines　»

〔177〕 Repeat with Each in 〔176 Split Text〕

〔178〕 Get Dictionary from 〔Repeat Item〕　» 179 181

〔179〕 Get Dates from 〔178 Dictionary’s Keys〕　» 180 181

〔180〕 If 〔179 Dates〕 is today

〔181〕 Add Alarm for 〔179 Dates〕 called 〔178 Dictionary’s Values〕

〔182〕 End If

〔183〕 End Repeat with Each　▵177

〔184〕 Otherwise　▵68

〔185〕 If 〔Shortcut Input as Number〕 is 2

〔186〕 Comment
when input is 1 set up alarm for next 24 hours, at that time (recommended at 12:00 am) the travel time is not as accurate as recently. So, suggest to check up event in next 1 hour.

〔187〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• File: 〔Shortcut Input〕

〔188〕 Get Dictionary from 〔187 File〕　» 189 190 191

〔189〕 Set Variable HomeAddress to 〔188 Dictionary.HomeAddress〕

〔190〕 Set Variable HomeAddress to 〔188 Dictionary.TravelMethod〕

〔191〕 Set Variable ExtraTime to 〔188 Dictionary.ExtraTime〕

〔192〕 Find Calendar Events All Calendar Events where　» 193 194 286
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 1 hours
Is All Day
Canceled is {"Bool":{"Value":false,"WFSerializationType":"WFBooleanSubstitutableState"}}

〔193〕 If 〔192 Calendar Events〕 has any value

〔194〕 Repeat with Each in 〔192 Calendar Events〕

〔195〕 If 〔Repeat Item’s Location〕 has any value

〔196〕 Get Current Location　» 205 211 227
• Accuracy: Best

〔197〕 If All are true　〔Repeat Item’s Notes〕 has any value　〔Repeat Item’s Notes〕 begins with {　〔Repeat Item’s Notes〕 ends with }

〔198〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔199〕 Get Dictionary from 〔Repeat Item’s Notes〕　» 200 201 202 203 204 211 214

〔200〕 Set Variable Street to 〔199 Dictionary.street〕

〔201〕 Set Variable City to 〔199 Dictionary.city〕

〔202〕 Set Variable State to 〔199 Dictionary.state〕

〔203〕 Set Variable Region to 〔199 Dictionary.country〕

〔204〕 Set Variable ZIP Code to 〔199 Dictionary.postcode〕

〔205〕 If All are true　〔196 Current Location’s Street〕 is 〔Street〕　〔196 Current Location’s City〕 is 〔City〕　〔196 Current Location’s State〕 is 〔State〕　〔196 Current Location’s Country〕 is 〔Region〕　〔196 Current Location’s ZIP Code〕 is 〔ZIP Code〕

〔206〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔207〕 Number 0　»

〔208〕 Set Variable CurrentToDeparture to 〔207 Number〕

〔209〕 Otherwise

〔210〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔211〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔196 Current Location〕
• Destination: 〔199 Dictionary〕

〔212〕 Set Variable CurrentToDeparture to 〔211 Travel Time〕

〔213〕 End If

〔214〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔199 Dictionary〕
• Destination: 〔Repeat Item’s Location〕

〔215〕 Calculate 〔214 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔216〕 Set Variable TravelTime to 〔215 Calculation Result〕

〔217〕 Otherwise　▵197

〔218〕 Comment
CALENDER EVENT NOTES IS BLANK

〔219〕 Get Dictionary from 〔HomeAddress〕　» 220 221 222 223 224

〔220〕 Get Dictionary Value for street in 〔219 Dictionary〕 　➔ street　» 225 227

〔221〕 Get Dictionary Value for city in 〔219 Dictionary〕 　➔ city　» 225 227

〔222〕 Get Dictionary Value for state in 〔219 Dictionary〕 　➔ state　» 225 227

〔223〕 Get Dictionary Value for country in 〔219 Dictionary〕 　➔ country　» 225 227

〔224〕 Get Dictionary Value for postcode in 〔219 Dictionary〕 　➔ postcode　» 225 227

〔225〕 If All are true　〔220 street〕 has any value　〔221 city〕 has any value　〔222 state〕 has any value　〔223 country〕 has any value　〔224 postcode〕 has any value

〔226〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔227〕 If All are true　〔196 Current Location’s Street〕 is 〔220 street〕　〔196 Current Location’s City〕 is 〔221 city〕　〔196 Current Location’s State〕 is 〔222 state〕　〔196 Current Location’s Country〕 is 〔223 country〕　〔196 Current Location’s ZIP Code〕 is 〔224 postcode〕

〔228〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔229〕 Number 0　»

〔230〕 Set Variable CurrentToDeparture to 〔229 Number〕

〔231〕 Otherwise

〔232〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔233〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔234〕 Set Variable CurrentToDeparture to 〔233 Travel Time〕

〔235〕 End If

〔236〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔Repeat Item’s Location〕

〔237〕 Calculate 〔236 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔238〕 Set Variable TravelTime to 〔237 Calculation Result〕

〔239〕 Otherwise　▵225

〔240〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔241〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔Repeat Item’s Location〕

〔242〕 Set Variable TravelTime to 〔241 Travel Time〕

〔243〕 End If

〔244〕 End If　▵217

〔245〕 Otherwise　▵195

〔246〕 Number 0　»

〔247〕 Set Variable TravelTime to 〔246 Number〕

〔248〕 End If

〔249〕 Find Alarm All Alarm　» 250 251
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔250〕 If 〔249 Alarms〕 has any value

〔251〕 Repeat[2] with Each in 〔249 Alarms〕

〔252〕 Get Dictionary from 〔Repeat Item 2’s label〕　» 253 254 255 256

〔253〕 Get Dictionary Value for Event in 〔252 Dictionary〕 　➔ Event　» 257

〔254〕 Get Dictionary Value for From in 〔252 Dictionary〕 　➔ From　» 257

〔255〕 Get Dictionary Value for To in 〔252 Dictionary〕 　➔ To　» 257

〔256〕 Get Dictionary Value for Location in 〔252 Dictionary〕 　➔ Location　»

〔257〕 If All are true　〔253 Event’s Name〕 is 〔Repeat Item〕　〔254 From’s Name〕 is 〔Repeat Item’s Start Date〕　〔255 To’s Name〕 is 〔Repeat Item’s End Date〕　〔256 Location’s Name〕 is 〔Repeat Item’s Location〕

〔258〕 Delete Alarms
• entities: 〔Repeat Item 2〕

〔259〕 End If

〔260〕 End Repeat[2] with Each　▵251

〔261〕 End If　▵250

〔262〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔263〕 Adjust Subtract Date 〔Repeat Item’s Start Date〕　» 265 267 270 280 281
• Duration: 〔262 Calculation Result〕 min

〔264〕 Date Current Date　»

〔265〕 If 〔263 Adjusted Date〕 < 〔264 Date〕

〔266〕 If 〔Repeat Item’s Location〕 has any value

〔267〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 at 〔Repeat Item’s Location〕  which  was supposed to get ready at 〔263 Adjusted Date〕. Please check.

〔268〕 Set Variable Text to 〔267 Text〕

〔269〕 Otherwise

〔270〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 which  was supposed to get ready at 〔263 Adjusted Date〕. Please check.

〔271〕 Set Variable Text to 〔270 Text〕

〔272〕 End If

〔273〕 Show Alert 〔Text〕

〔274〕 Show Notification 〔Text〕

〔275〕 Speak Text
• Text: 〔Text〕

〔276〕 If 〔133 Adjusted Date〕 > 〔135 Date〕

〔277〕 Otherwise

〔278〕 End If

〔279〕 Otherwise　▵265

〔280〕 Dictionary　»
{  "Location": "〔Repeat Item’s Location〕",
   "Event": "🗓️〔Repeat Item〕",
   "From": "〔Repeat Item’s Start Date〕",
   "To": "〔Repeat Item’s End Date〕",
   "AlarmTime": "〔263 Adjusted Date〕"
}

〔281〕 Add Alarm for 〔263 Adjusted Date〕 called 〔280 Dictionary〕

〔282〕 End If

〔283〕 End Repeat with Each　▵194

〔284〕 Number 3　»

〔285〕 Repeat 〔284 Number〕 Times

〔286〕 Repeat[2] with Each in 〔192 Calendar Events〕

〔287〕 Format Date 〔Repeat Item 2’s Start Date〕　» 290 293
• DateFormatStyle: None

〔288〕 Format Date 〔Repeat Item 2’s End Date〕　» 290 293
• DateFormatStyle: None

〔289〕 If 〔Repeat Item 2’s Location〕 has any value

〔290〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔287 Formatted Date〕 to 〔288 Formatted Date〕 at 〔Repeat Item 2’s Location〕

〔291〕 Set Variable Text to 〔290 Text〕

〔292〕 Otherwise

〔293〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔287 Formatted Date〕 to 〔288 Formatted Date〕

〔294〕 Set Variable Text to 〔293 Text〕

〔295〕 End If

〔296〕 Speak Text
• Text: 〔Text〕

〔297〕 Wait 1 seconds

〔298〕 End Repeat[2] with Each　▵286

〔299〕 End Repeat Times　▵285

〔300〕 End If　▵193

〔301〕 Otherwise　▵185

〔302〕 If 〔Shortcut Input as Number〕 is 3

〔303〕 Comment
will be triggered when an alarm goes off

〔304〕 Dictionary　»
{  "stop": "no" }

〔305〕 Save File 〔304 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/stopflag.txt

〔306〕 Date Current Date　» 324

〔307〕 Find Alarm All Alarm　» 308 316
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔308〕 If 〔307 Alarms〕 has any value

〔309〕 Number 10000　»

〔310〕 Repeat 〔309 Number〕 Times

〔311〕 Get File at Path SmartCalendarReminder/stopflag.txt from Folder　»
• FileErrorIfNotFound: false
• File: 〔Shortcut Input〕

〔312〕 Get Dictionary from 〔311 File〕　»

〔313〕 If 〔312 Dictionary’s Values〕 is yes

〔314〕 Stop This Shortcut

〔315〕 End If

〔316〕 Repeat[2] with Each in 〔307 Alarms〕

〔317〕 Get Dictionary from 〔Repeat Item 2’s label〕　» 318 320 322 327 328 331

〔318〕 Get Dictionary Value for From in 〔317 Dictionary〕　»

〔319〕 Get Dates from 〔318 Dictionary Value〕 　➔ From　» 325

〔320〕 Get Dictionary Value for To in 〔317 Dictionary〕　»

〔321〕 Get Dates from 〔320 Dictionary Value〕 　➔ To　» 326

〔322〕 Get Dictionary Value for AlarmTime in 〔317 Dictionary〕　»

〔323〕 Get Dates from 〔322 Dictionary Value〕 　➔ AlarmTime　»

〔324〕 If All are true　〔323 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕 is 〔306 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕　〔323 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕 is 〔306 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕

〔325〕 Format Date 〔319 From’s Time〕　» 328 331

〔326〕 Format Date 〔321 To’s Time〕 　➔ Dictionary (Location)　» 328 331

〔327〕 If 〔317 Dictionary.Location〕 has any value

〔328〕 Text　»
Prepare for 〔317 Dictionary.Event〕 from 〔325 Formatted Date〕 to 〔326 Dictionary (Location)〕 at 〔317 Dictionary.Location〕

〔329〕 Set Variable Text to 〔328 Text〕

〔330〕 Otherwise

〔331〕 Text　»
Prepare for 〔317 Dictionary.Event〕 from 〔325 Formatted Date〕 to 〔326 Dictionary (Location)〕

〔332〕 Set Variable Text to 〔331 Text〕

〔333〕 End If

〔334〕 Speak Text
• Text: 〔Text〕

〔335〕 End If　▵324

〔336〕 End Repeat[2] with Each　▵316

〔337〕 End Repeat Times　▵310

〔338〕 End If　▵308

〔339〕 Otherwise　▵302

〔340〕 Comment
input is 4, will be triggered when an alarm is stopped ->  stop repeating speaking text

〔341〕 Dictionary　»
{  "stop": "yes" }

〔342〕 Save File 〔341 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/stopflag.txt

〔343〕 End If

〔344〕 End If　▵301

〔345〕 End If　▵184

〔346〕 End If　▵67