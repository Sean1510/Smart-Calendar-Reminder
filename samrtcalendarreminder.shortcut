Smart Calendar Reminder 2 (348 actions, 125 KB)
"WFQuickActionSurfaces": [],
"WFWorkflowClientVersion": "3303.0.4",
"WFWorkflowHasOutputFallback": false,
"WFWorkflowHasShortcutInputVariables": true,
"WFWorkflowIcon": {
   "WFWorkflowIconStartColor": 431817727,
   "WFWorkflowIconGlyphNumber": 61701
},
"WFWorkflowImportQuestions": [],
"WFWorkflowInputContentItemClasses": [],
"WFWorkflowMinimumClientVersion": 3010,
"WFWorkflowMinimumClientVersionString": "3010",
"WFWorkflowOutputContentItemClasses": [],
"WFWorkflowTypes": []


〔0〕 If 〔Shortcut Input〕 does not have any value

〔1〕 Comment
Input has no value: for setup and update

〔2〕 Comment
Inspired by [Schedule Shortcut or Alarm] but designed to work smarter for my needs! Instead of manually inputting each trigger or alarm, this shortcut leverages my Calendar as the ultimate data source. It automatically scans for upcoming events, then:

• Speaks out the event details
• Sets a tailored alarm—accounting for travel and prep time—right when you need it

No more early, forgettable reminders. It keeps your schedule perfectly in sync. Give it a try and let your Calendar do the heavy lifting!

〔3〕 Dictionary　» 4 5 7 9 10 11 12 21
{  "Name": "Smart Calendar Reminder",
   "Version": "1.1",
   "RH ID": "21959",
   "Icons": {
      "Update": "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",
      "Skip": "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",
      "Not Now": "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"
   }
}

〔4〕 Get Contents of URL https://routinehub.co/api/v1/shortcuts/〔3 Dictionary.RH ID〕/versions/latest 　➔ RH Server　» 6 8 11 16 20

〔5〕 Get File at Path 〔3 Dictionary.Name〕/Skip.txt from Folder　»
• File: {  "fileLocation": {
      "crossDeviceItemID": "docs.icloud.com:com.apple.CloudDocs/documents/95d6214c39557e3de40d802073a860c04f3aed5b",
      "fileProviderDomainID": "com.apple.CloudDocs.iCloudDriveFileProvider/38059A1C-DC76-4B89-B62F-250A61DBFC73",
      "appContainerBundleIdentifier": "com.apple.shortcuts",
      "relativeSubpath": "",
      "WFFileLocationType": "Shortcuts"
   },
   "filename": "Documents",
   "displayName": "Shortcuts"
}
• FileErrorIfNotFound: false
• ShowFilePicker: false
• GetFolderContents: true

〔6〕 If 〔5 File as Text〕 is not 〔4 RH Server as Dictionary.Version〕

〔7〕 Get Dictionary Value for Version in 〔3 Dictionary〕　»

〔8〕 If 〔7 Dictionary Value as Text〕 is not 〔4 RH Server as Dictionary.Version〕

〔9〕 Base64 Decode 〔3 Dictionary.Icons.Update〕

〔10〕 Show Alert A new version of 〔3 Dictionary.Name〕 is available to download!

〔11〕 Text　» 14
⬆️ Update ⬆️

A new version of 〔3 Dictionary.Name〕 is available to download!

〔3 Dictionary.Version〕 ↗ 〔4 RH Server as Dictionary.Version〕   —   〔4 RH Server as Dictionary.Release〕

〔4 RH Server as Dictionary.Notes〕

〔12〕 Text　»
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Update;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Update〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Skip;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Skip〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Not Now;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Not Now〕
END:VCARD

〔13〕 Set Name of 〔12 Text〕 to updateprompt.vcf　»

〔14〕 Choose from List 〔13 Renamed Item as Contact〕　» 15 19
• ChooseFromListActionPrompt: 〔11 Text〕

〔15〕 If 〔14 Chosen Item as Text〕 is Update

〔16〕 Open URL 〔4 RH Server as Dictionary.URL〕
• Show-WFInput: true

〔17〕 Stop This Shortcut

〔18〕 End If

〔19〕 If 〔14 Chosen Item as Text〕 is Skip

〔20〕 Save File 〔4 RH Server as Dictionary.Version〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔? Dictionary.Name〕/Skip.txt

〔21〕 Show Alert This version of 〔3 Dictionary.Name〕 has been skipped!
• AlertActionTitle: ✅ Done ✅
• AlertActionCancelButtonShown: false

〔22〕 End If

〔23〕 End If　▵8

〔24〕 End If　▵6

〔25〕 Dictionary 　➔ menus　»
{  "mainMenu": {
      "Setup": {
         "title": "Setup",
         "sub": "Find easy to follow instructions for setting up the required automations",
         "icon": ""
      }
   }
}

〔26〕 Get Dictionary from 〔25 menus.mainMenu〕　»

〔27〕 Repeat with Each in 〔26 Dictionary〕

〔28〕 Get Dictionary All Values in 〔Repeat Item as Dictionary〕 　➔ Options　»
• DictionaryKey: 〔Repeat Item as Dictionary’s Keys〕.title

〔29〕 Repeat[2] with Each in 〔28 Options as Dictionary〕

〔30〕 Text
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:〔Repeat Item 2 as Dictionary.title〕;
ORG:〔Repeat Item 2 as Dictionary.sub〕;
PHOTO;ENCODING=b:〔Repeat Item 2 as Dictionary.icon〕;
END:VCARD

〔31〕 End Repeat[2] with Each

〔32〕 End Repeat with Each　»

〔33〕 Text　»
〔32 Repeat Results〕

〔34〕 Set Name of 〔33 Text〕 to mainMenu.vcf　»

〔35〕 Get Contacts from 〔34 Renamed Item〕　»

〔36〕 Choose from List 〔35 Contacts〕　»
• ChooseFromListActionPrompt: ☀️Welcome to Smart Calendar Reminder☀️

〔37〕 If 〔36 Selected Item’s Name〕 is Setup

〔38〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• FileErrorIfNotFound: false

〔39〕 If 〔38 File’s File Size〕 does not have any value

〔40〕 Comment
All the information is stored in iCloud. The shortcut isn’t collecting anything.

〔41〕 Text　»
Choose Travel Time Calculation Method

1️⃣ Notes 🗓️ / Current 📍\u000D
Uses the address in the Calendar event Notes if available (routing via Notes if you're not already there), otherwise calculates directly from your current location to the event.\u000D
\u000D
2️⃣ Notes 🗓️ / Home 🏡\u000D
Uses the Notes address if available (same as 1️⃣), but if Notes are empty, routes via your home address if you're not already there, or directly from home if you are.\u000D
\u000D

〔42〕 Choose from Menu
• MenuPrompt: 〔41 Text〕
• MenuItems: [1️⃣ Notes 🗓️ / Current 📍,
2️⃣ Notes 🗓️ / Home 🏡]

〔43〕 Menu Item 1️⃣ Notes 🗓️ / Current 📍

〔44〕 Dictionary　»
{  "state": "\"\"",
   "street": "\"\"",
   "city": "\"\"",
   "country": "\"\"",
   "postcode": "\"\""
}

〔45〕 Set Variable HomeAddress to 〔44 Dictionary〕

〔46〕 Menu Item 2️⃣ Notes 🗓️ / Home 🏡

〔47〕 Text　»
Please provide your home address for accurate travel time calculations via Apple Maps.

〔48〕 Text　»
<!DOCTYPE html>
<html>
<head>
    <title>Address Collector</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Modern CSS styling */
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .form-container {
            max-width: 500px;
            margin: 20px auto;
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #34495e;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 0; /* Equal left/right margins */
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
            box-sizing: border-box; /* Ensures padding doesn't affect width */
        }

        input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.2);
        }

        button {
            background: #3498db;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #2980b9;
        }

        /* New success message styling */
        .success-message {
            display: none;
            background: #e8f5e9;
            color: #2e7d32;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            text-align: center;
        }

        .success-message.show {
            display: block;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>〔47 Text〕</h2>
        <form id="addressForm">
            <div class="form-group">
                <label>Street Address</label>
                <input type="text" id="street" placeholder="" required>
            </div>

            <div class="form-group">
                <label>City</label>
                <input type="text" id="city" placeholder="" required>
            </div>

            <div class="form-group">
                <label>State/Province</label>
                <input type="text" id="state" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Country/Region</label>
                <input type="text" id="country" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Postal Code</label>
                <input type="text" id="postcode" placeholder="" required>
            </div>

            <button type="button" onclick="sendToShortcut()">Submit Address</button>
        </form>

        <!-- Success message container -->
        <div class="success-message" id="successMessage">
            <p>Data collected successfully!</p>
        </div>
    </div>

<script>
function sendToShortcut() {
  const addressData = {
    street: document.getElementById('street').value,
    city: document.getElementById('city').value,
    state: document.getElementById('state').value,
    country: document.getElementById('country').value,
    postcode: document.getElementById('postcode').value
  };
\u{space}\u{space}
  // Copy data to clipboard
  navigator.clipboard.writeText(JSON.stringify(addressData));
\u{space}\u{space}
  // Show success message and hide form
  document.getElementById('addressForm').style.display = 'none';
  document.getElementById('successMessage').classList.add('show');
}
</script>
</body>
</html>

〔49〕 Set Name of 〔48 Text〕 to Address.html　»

〔50〕 Show Web View at 〔49 Renamed Item〕

〔51〕 Get Clipboard　»

〔52〕 Get Dictionary from 〔51 Clipboard〕　»

〔53〕 Set Variable HomeAddress to 〔52 Dictionary〕

〔54〕 End Menu　▵46

〔55〕 List　» 57
[🚙Driving,
🚶‍♀️Walking,
🚊Transit,
🚵‍♀️Biking]

〔56〕 Text　»
Select Travel Method (It will apply to all the events)

〔57〕 Choose from List 〔55 List〕 　➔ Travel Method Selected　»
• ChooseFromListActionPrompt: 〔56 Text〕

〔58〕 Set Variable TravelMethod to 〔57 Travel Method Selected〕

〔59〕 Text　»
Besides travel time, how many Extra Minutes Needed (e.g., '15 mins buffer')

〔60〕 Ask for Number Input 　➔ Extra Time Needed　»
• AskActionPrompt: 〔59 Text〕
• AskActionAllowsNegativeNumbers: false
• AskActionAllowsDecimalNumbers: false

〔61〕 Set Variable ExtraTime to 〔60 Extra Time Needed〕

〔62〕 Dictionary　»
{  "HomeAddress": "〔HomeAddress as Dictionary〕",
   "TravelMethod": "〔TravelMethod〕",
   "ExtraTime": "〔ExtraTime〕"
}

〔63〕 Save File 〔62 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/aboutme.txt

〔64〕 End If　▵39

〔65〕 Otherwise　▵37

〔66〕 End If

〔67〕 Otherwise　▵0

〔68〕 If 〔Shortcut Input as Number〕 is 1

〔69〕 Comment
Find all calendar events in the next day and set alarm automatically. Recommend set up automation at 12:00 am daily.

This is useful because in next step we will find calendar event in the next 1 hour and set up automation to trigger each hour. But in some cases it cann’t set alarm. e.g. an event start date is 09:45am, tranvel time + extra time is 50, so the sopposed alarm time should be 08:55am, at 08:00 this event will not be triggered because it’s not in the next an hour; at 09:00 this event is triggered but the supposed alarm time has aleady passed.

So this one can handle the scenario above.

If some travel take more than one day, you may to adjust the search crteria, e.g. change form 1 day to 2\u{space}

〔70〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• File: 〔Shortcut Input〕

〔71〕 Get Dictionary from 〔70 File〕　» 72 73 74

〔72〕 Set Variable HomeAddress to 〔71 Dictionary.HomeAddress〕

〔73〕 Set Variable TravelMethod to 〔71 Dictionary.TravelMethod〕

〔74〕 Set Variable ExtraTime to 〔71 Dictionary.ExtraTime〕

〔75〕 Find Calendar Events All Calendar Events where　» 76 77
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 1 days
Is All Day
Canceled is {"Bool":{"Value":false,"WFSerializationType":"WFBooleanSubstitutableState"}}

〔76〕 If 〔75 Calendar Events〕 has any value

〔77〕 Repeat with Each in 〔75 Calendar Events〕

〔78〕 If 〔Repeat Item as CalendarEvent’s Location〕 has any value

〔79〕 Get Current Location　» 89 95 111
• Accuracy: Best

〔80〕 Comment
Since apple calendar event does has departure field, if you need to set a specific departure, you need to input the departure in the Notes of the event, using format below:

{
“Street”: “your departure street of the specific event”,
“City”: “your departure city of the specific event”,
“State”: “your departure state of the specific event”,
“Country”: “your departure country of the specific event”,
“Postcode”: “your departure postcode of the specific event”
}

For my own experience it’s seldomn used.

〔81〕 If All are true　〔Repeat Item’s Notes〕 has any value　〔Repeat Item’s Notes〕 begins with {　〔Repeat Item’s Notes〕 ends with }

〔82〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔83〕 Get Dictionary from 〔Repeat Item’s Notes〕 　➔ Notes Address Dictionary　» 84 85 86 87 88 95 98

〔84〕 Set Variable Calendar_Notes_Street to 〔83 Notes Address Dictionary.Street〕

〔85〕 Set Variable Calendar_Notes_City to 〔83 Notes Address Dictionary.City〕

〔86〕 Set Variable Calendar_Notes_State to 〔83 Notes Address Dictionary.State〕

〔87〕 Set Variable Calendar_Notes_Region to 〔83 Notes Address Dictionary.Country〕

〔88〕 Set Variable Calendar_Notes_ZIP Code to 〔83 Notes Address Dictionary.Postcode〕

〔89〕 If All are true　〔79 Current Location’s Street〕 is 〔Calendar_Notes_Street〕　〔79 Current Location’s City〕 is 〔Calendar_Notes_City〕　〔79 Current Location’s State〕 is 〔Calendar_Notes_State〕　〔79 Current Location’s Country〕 is 〔Calendar_Notes_Region〕　〔79 Current Location’s ZIP Code〕 is 〔Calendar_Notes_ZIP Code〕

〔90〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔91〕 Number 0　»

〔92〕 Set Variable CurrentToDeparture to 〔91 Number〕

〔93〕 Otherwise

〔94〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔95〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔79 Current Location〕
• Destination: 〔83 Notes Address Dictionary〕

〔96〕 Set Variable CurrentToDeparture to 〔95 Travel Time〕

〔97〕 End If

〔98〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔83 Notes Address Dictionary〕
• Destination: 〔Repeat Item’s Location〕

〔99〕 Calculate 〔98 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔100〕 Set Variable TravelTime to 〔99 Calculation Result〕

〔101〕 Otherwise　▵81

〔102〕 Comment
CALENDER EVENT NOTES IS BLANK

〔103〕 Get Dictionary from 〔HomeAddress〕 　➔ Home Address Dictionary　» 104 105 106 107 108

〔104〕 Get Dictionary Value for street in 〔103 Home Address Dictionary〕 　➔ home_Street　» 109 111

〔105〕 Get Dictionary Value for city in 〔103 Home Address Dictionary〕 　➔ home_City　» 109 111

〔106〕 Get Dictionary Value for state in 〔103 Home Address Dictionary〕 　➔ home_State　» 109 111

〔107〕 Get Dictionary Value for country in 〔103 Home Address Dictionary〕 　➔ home_Country　» 109 111

〔108〕 Get Dictionary Value for postcode in 〔103 Home Address Dictionary〕 　➔ home_Postcode　» 109 111

〔109〕 If All are true　〔104 home_Street〕 has any value　〔105 home_City〕 has any value　〔106 home_State〕 has any value　〔107 home_Country〕 has any value　〔108 home_Postcode〕 has any value

〔110〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔111〕 If All are true　〔79 Current Location’s Street〕 is 〔104 home_Street〕　〔79 Current Location’s City〕 is 〔105 home_City〕　〔79 Current Location’s State〕 is 〔106 home_State〕　〔79 Current Location’s Country〕 is 〔107 home_Country〕　〔79 Current Location’s ZIP Code〕 is 〔108 home_Postcode〕

〔112〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔113〕 Number 0　»

〔114〕 Set Variable CurrentToDeparture to 〔113 Number〕

〔115〕 Otherwise

〔116〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔117〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔118〕 Set Variable CurrentToDeparture to 〔117 Travel Time〕

〔119〕 End If

〔120〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔Repeat Item’s Location〕

〔121〕 Calculate 〔120 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔122〕 Set Variable TravelTime to 〔121 Calculation Result〕

〔123〕 Otherwise　▵109

〔124〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔125〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔Repeat Item’s Location〕

〔126〕 Set Variable TravelTime to 〔125 Travel Time〕

〔127〕 End If

〔128〕 End If　▵101

〔129〕 Otherwise　▵78

〔130〕 Number 0　»

〔131〕 Set Variable TravelTime to 〔130 Number〕

〔132〕 End If

〔133〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔134〕 Adjust Subtract Date 〔Repeat Item’s Start Date〕 　➔ Supposed Alarm Time　» 135 138 140 142 144 147 153 156 162 165 277
• Duration: 〔133 Calculation Result〕 min

〔135〕 Dictionary 　➔ Alarm Label Dictionary　» 144 148 154 156
{  "Event": "🗓️〔Repeat Item〕",
   "From": "〔Repeat Item’s Start Date〕",
   "To": "〔Repeat Item’s End Date〕",
   "Location": "〔Repeat Item’s Location〕",
   "AlarmTime": "〔134 Supposed Alarm Time〕"
}

〔136〕 Date Current Date　» 137 138 142 277

〔137〕 Adjust Add Date 〔136 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"dd MMM yyyy"}〕 　➔ 1 day　» 141 151
• Duration: "1" days

〔138〕 If 〔134 Supposed Alarm Time〕 > 〔136 Date〕

〔139〕 Comment
the supposed alrm date did not pass

〔140〕 Adjust Add Date 〔134 Supposed Alarm Time{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"dd MMM yyyy"}〕　» 141 151
• Duration: "" days

〔141〕 If 〔140 Adjusted Date〕 is 〔137 1 day〕

〔142〕 If All are true　〔134 Supposed Alarm Time{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕 is 〔136 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕　〔134 Supposed Alarm Time{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕 is 〔136 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕

〔143〕 Comment
since this will be triggered at 12:00 am each day, when the supposed alarm time is 12:00 am in the next day, you can set alarm now

〔144〕 Add Alarm for 〔134 Supposed Alarm Time〕 called 〔135 Alarm Label Dictionary〕

〔145〕 Otherwise

〔146〕 Comment
when the time is other than 12:00 am of then next day, you cannot set alarm yet. If set, it will be today. For example, triggering time 2025-4-8 12:00 am, the supposed alarm time is 2025-4-9 08:00 am, if you set an alarm at 08:00 at 2025-4-8 12:00 am, it will alarm at 2025-4-8 08:00 am instead. So we need to record the supposed alarm time and trigger next day.

〔147〕 Set Variable SupposedAlarmTime to 〔134 Supposed Alarm Time〕

〔148〕 Set Variable Event to 〔135 Alarm Label Dictionary〕

〔149〕 End If

〔150〕 Otherwise　▵141

〔151〕 If 〔140 Adjusted Date〕 > 〔137 1 day〕

〔152〕 Comment
likewise, we need to record the supposed alarm time and trigger next day.

〔153〕 Set Variable SupposedAlarmTime to 〔134 Supposed Alarm Time〕

〔154〕 Set Variable Event to 〔135 Alarm Label Dictionary〕

〔155〕 Otherwise

〔156〕 Add Alarm for 〔134 Supposed Alarm Time〕 called 〔135 Alarm Label Dictionary〕

〔157〕 End If

〔158〕 End If　▵150

〔159〕 Otherwise　▵138

〔160〕 Comment
the supposed alarm time passed

〔161〕 If 〔Repeat Item’s Location〕 has any value

〔162〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 at 〔Repeat Item〕 which  was supposed to get ready at 〔134 Supposed Alarm Time〕. Please check.

〔163〕 Set Variable Text to 〔162 Text〕

〔164〕 Otherwise

〔165〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 which  was supposed to get ready at 〔134 Supposed Alarm Time〕. Please check.

〔166〕 Set Variable Text to 〔165 Text〕

〔167〕 End If

〔168〕 Show Alert 〔Text〕

〔169〕 Show Notification 〔Text〕

〔170〕 Speak Text
• Text: 〔Text〕

〔171〕 End If　▵159

〔172〕 Dictionary　»
{  "Supposed Alarm Time": "〔SupposedAlarmTime〕",
   "Event": "〔Event〕"
}

〔173〕 Append 〔172 Dictionary〕 to Text File
• FilePath: SmartCalendarReminder/Future Alarms.txt

〔174〕 End Repeat with Each　▵77

〔175〕 End If　▵76

〔176〕 Get File at Path SmartCalendarReminder/Future Alarm.txt from Folder　»
• FileErrorIfNotFound: false
• File: 〔Shortcut Input〕

〔177〕 Split Text 〔176 File〕 by New Lines　»

〔178〕 Repeat with Each in 〔177 Split Text〕

〔179〕 Get Dictionary from 〔Repeat Item〕　» 180 182

〔180〕 Get Dates from 〔179 Dictionary’s Keys〕　» 181 182

〔181〕 If 〔180 Dates〕 is today

〔182〕 Add Alarm for 〔180 Dates〕 called 〔179 Dictionary’s Values〕

〔183〕 End If

〔184〕 End Repeat with Each　▵178

〔185〕 Otherwise　▵68

〔186〕 If 〔Shortcut Input as Number〕 is 2

〔187〕 Comment
when input is 1 set up alarm for next 24 hours, at that time (recommended at 12:00 am) the travel time is not as accurate as recently. So, suggest to check up event in next 1 hour.

〔188〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• File: 〔Shortcut Input〕

〔189〕 Get Dictionary from 〔188 File〕　» 190 191 192

〔190〕 Set Variable HomeAddress to 〔189 Dictionary.HomeAddress〕

〔191〕 Set Variable HomeAddress to 〔189 Dictionary.TravelMethod〕

〔192〕 Set Variable ExtraTime to 〔189 Dictionary.ExtraTime〕

〔193〕 Find Calendar Events All Calendar Events where　» 194 195 287
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 1 hours
Is All Day
Canceled is {"Bool":{"Value":false,"WFSerializationType":"WFBooleanSubstitutableState"}}

〔194〕 If 〔193 Calendar Events〕 has any value

〔195〕 Repeat with Each in 〔193 Calendar Events〕

〔196〕 If 〔Repeat Item’s Location〕 has any value

〔197〕 Get Current Location　» 206 212 228
• Accuracy: Best

〔198〕 If All are true　〔Repeat Item’s Notes〕 has any value　〔Repeat Item’s Notes〕 begins with {　〔Repeat Item’s Notes〕 ends with }

〔199〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔200〕 Get Dictionary from 〔Repeat Item’s Notes〕　» 201 202 203 204 205 212 215

〔201〕 Set Variable Street to 〔200 Dictionary.street〕

〔202〕 Set Variable City to 〔200 Dictionary.city〕

〔203〕 Set Variable State to 〔200 Dictionary.state〕

〔204〕 Set Variable Region to 〔200 Dictionary.country〕

〔205〕 Set Variable ZIP Code to 〔200 Dictionary.postcode〕

〔206〕 If All are true　〔197 Current Location’s Street〕 is 〔Street〕　〔197 Current Location’s City〕 is 〔City〕　〔197 Current Location’s State〕 is 〔State〕　〔197 Current Location’s Country〕 is 〔Region〕　〔197 Current Location’s ZIP Code〕 is 〔ZIP Code〕

〔207〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔208〕 Number 0　»

〔209〕 Set Variable CurrentToDeparture to 〔208 Number〕

〔210〕 Otherwise

〔211〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔212〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔197 Current Location〕
• Destination: 〔200 Dictionary〕

〔213〕 Set Variable CurrentToDeparture to 〔212 Travel Time〕

〔214〕 End If

〔215〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔200 Dictionary〕
• Destination: 〔Repeat Item’s Location〕

〔216〕 Calculate 〔215 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔217〕 Set Variable TravelTime to 〔216 Calculation Result〕

〔218〕 Otherwise　▵198

〔219〕 Comment
CALENDER EVENT NOTES IS BLANK

〔220〕 Get Dictionary from 〔HomeAddress〕　» 221 222 223 224 225

〔221〕 Get Dictionary Value for street in 〔220 Dictionary〕 　➔ street　» 226 228

〔222〕 Get Dictionary Value for city in 〔220 Dictionary〕 　➔ city　» 226 228

〔223〕 Get Dictionary Value for state in 〔220 Dictionary〕 　➔ state　» 226 228

〔224〕 Get Dictionary Value for country in 〔220 Dictionary〕 　➔ country　» 226 228

〔225〕 Get Dictionary Value for postcode in 〔220 Dictionary〕 　➔ postcode　» 226 228

〔226〕 If All are true　〔221 street〕 has any value　〔222 city〕 has any value　〔223 state〕 has any value　〔224 country〕 has any value　〔225 postcode〕 has any value

〔227〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔228〕 If All are true　〔197 Current Location’s Street〕 is 〔221 street〕　〔197 Current Location’s City〕 is 〔222 city〕　〔197 Current Location’s State〕 is 〔223 state〕　〔197 Current Location’s Country〕 is 〔224 country〕　〔197 Current Location’s ZIP Code〕 is 〔225 postcode〕

〔229〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔230〕 Number 0　»

〔231〕 Set Variable CurrentToDeparture to 〔230 Number〕

〔232〕 Otherwise

〔233〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔234〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔235〕 Set Variable CurrentToDeparture to 〔234 Travel Time〕

〔236〕 End If

〔237〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔Repeat Item’s Location〕

〔238〕 Calculate 〔237 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔239〕 Set Variable TravelTime to 〔238 Calculation Result〕

〔240〕 Otherwise　▵226

〔241〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔242〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔Repeat Item’s Location〕

〔243〕 Set Variable TravelTime to 〔242 Travel Time〕

〔244〕 End If

〔245〕 End If　▵218

〔246〕 Otherwise　▵196

〔247〕 Number 0　»

〔248〕 Set Variable TravelTime to 〔247 Number〕

〔249〕 End If

〔250〕 Find Alarm All Alarm　» 251 252
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔251〕 If 〔250 Alarms〕 has any value

〔252〕 Repeat[2] with Each in 〔250 Alarms〕

〔253〕 Get Dictionary from 〔Repeat Item 2’s label〕　» 254 255 256 257

〔254〕 Get Dictionary Value for Event in 〔253 Dictionary〕 　➔ Event　» 258

〔255〕 Get Dictionary Value for From in 〔253 Dictionary〕 　➔ From　» 258

〔256〕 Get Dictionary Value for To in 〔253 Dictionary〕 　➔ To　» 258

〔257〕 Get Dictionary Value for Location in 〔253 Dictionary〕 　➔ Location　»

〔258〕 If All are true　〔254 Event’s Name〕 is 〔Repeat Item〕　〔255 From’s Name〕 is 〔Repeat Item’s Start Date〕　〔256 To’s Name〕 is 〔Repeat Item’s End Date〕　〔257 Location’s Name〕 is 〔Repeat Item’s Location〕

〔259〕 Delete Alarms
• entities: 〔Repeat Item 2〕

〔260〕 End If

〔261〕 End Repeat[2] with Each　▵252

〔262〕 End If　▵251

〔263〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔264〕 Adjust Subtract Date 〔Repeat Item’s Start Date〕　» 266 268 271 281 282
• Duration: 〔263 Calculation Result〕 min

〔265〕 Date Current Date　»

〔266〕 If 〔264 Adjusted Date〕 < 〔265 Date〕

〔267〕 If 〔Repeat Item’s Location〕 has any value

〔268〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 at 〔Repeat Item’s Location〕  which  was supposed to get ready at 〔264 Adjusted Date〕. Please check.

〔269〕 Set Variable Text to 〔268 Text〕

〔270〕 Otherwise

〔271〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 which  was supposed to get ready at 〔264 Adjusted Date〕. Please check.

〔272〕 Set Variable Text to 〔271 Text〕

〔273〕 End If

〔274〕 Show Alert 〔Text〕

〔275〕 Show Notification 〔Text〕

〔276〕 Speak Text
• Text: 〔Text〕

〔277〕 If 〔134 Supposed Alarm Time〕 > 〔136 Date〕

〔278〕 Otherwise

〔279〕 End If

〔280〕 Otherwise　▵266

〔281〕 Dictionary　»
{  "Location": "〔Repeat Item’s Location〕",
   "Event": "🗓️〔Repeat Item〕",
   "From": "〔Repeat Item’s Start Date〕",
   "To": "〔Repeat Item’s End Date〕",
   "AlarmTime": "〔264 Adjusted Date〕"
}

〔282〕 Add Alarm for 〔264 Adjusted Date〕 called 〔281 Dictionary〕

〔283〕 End If

〔284〕 End Repeat with Each　▵195

〔285〕 Number 3　»

〔286〕 Repeat 〔285 Number〕 Times

〔287〕 Repeat[2] with Each in 〔193 Calendar Events〕

〔288〕 Format Date 〔Repeat Item 2’s Start Date〕　» 291 294
• DateFormatStyle: None

〔289〕 Format Date 〔Repeat Item 2’s End Date〕　» 291 294
• DateFormatStyle: None

〔290〕 If 〔Repeat Item 2’s Location〕 has any value

〔291〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔288 Formatted Date〕 to 〔289 Formatted Date〕 at 〔Repeat Item 2’s Location〕

〔292〕 Set Variable Text to 〔291 Text〕

〔293〕 Otherwise

〔294〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔288 Formatted Date〕 to 〔289 Formatted Date〕

〔295〕 Set Variable Text to 〔294 Text〕

〔296〕 End If

〔297〕 Speak Text
• Text: 〔Text〕

〔298〕 Wait 1 seconds

〔299〕 End Repeat[2] with Each　▵287

〔300〕 End Repeat Times　▵286

〔301〕 End If　▵194

〔302〕 Otherwise　▵186

〔303〕 If 〔Shortcut Input as Number〕 is 3

〔304〕 Comment
will be triggered when an alarm goes off

〔305〕 Dictionary　»
{  "stop": "no" }

〔306〕 Save File 〔305 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/stopflag.txt

〔307〕 Date Current Date　» 325

〔308〕 Find Alarm All Alarm　» 309 317
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFActionParameterFilterTemplates": [],
      "WFContentPredicateBoundedDate": false
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔309〕 If 〔308 Alarms〕 has any value

〔310〕 Number 10000　»

〔311〕 Repeat 〔310 Number〕 Times

〔312〕 Get File at Path SmartCalendarReminder/stopflag.txt from Folder　»
• FileErrorIfNotFound: false
• File: 〔Shortcut Input〕

〔313〕 Get Dictionary from 〔312 File〕　»

〔314〕 If 〔313 Dictionary’s Values〕 is yes

〔315〕 Stop This Shortcut

〔316〕 End If

〔317〕 Repeat[2] with Each in 〔308 Alarms〕

〔318〕 Get Dictionary from 〔Repeat Item 2’s label〕　» 319 321 323 328 329 332

〔319〕 Get Dictionary Value for From in 〔318 Dictionary〕　»

〔320〕 Get Dates from 〔319 Dictionary Value〕 　➔ From　» 326

〔321〕 Get Dictionary Value for To in 〔318 Dictionary〕　»

〔322〕 Get Dates from 〔321 Dictionary Value〕 　➔ To　» 327

〔323〕 Get Dictionary Value for AlarmTime in 〔318 Dictionary〕　»

〔324〕 Get Dates from 〔323 Dictionary Value〕 　➔ AlarmTime　»

〔325〕 If All are true　〔324 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕 is 〔307 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕　〔324 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕 is 〔307 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕

〔326〕 Format Date 〔320 From’s Time〕　» 329 332

〔327〕 Format Date 〔322 To’s Time〕 　➔ Dictionary (Location)　» 329 332

〔328〕 If 〔318 Dictionary.Location〕 has any value

〔329〕 Text　»
Prepare for 〔318 Dictionary.Event〕 from 〔326 Formatted Date〕 to 〔327 Dictionary (Location)〕 at 〔318 Dictionary.Location〕

〔330〕 Set Variable Text to 〔329 Text〕

〔331〕 Otherwise

〔332〕 Text　»
Prepare for 〔318 Dictionary.Event〕 from 〔326 Formatted Date〕 to 〔327 Dictionary (Location)〕

〔333〕 Set Variable Text to 〔332 Text〕

〔334〕 End If

〔335〕 Speak Text
• Text: 〔Text〕

〔336〕 End If　▵325

〔337〕 End Repeat[2] with Each　▵317

〔338〕 End Repeat Times　▵311

〔339〕 End If　▵309

〔340〕 Otherwise　▵303

〔341〕 Comment
input is 4, will be triggered when an alarm is stopped ->  stop repeating speaking text

〔342〕 Dictionary　»
{  "stop": "yes" }

〔343〕 Save File 〔342 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/stopflag.txt

〔344〕 End If

〔345〕 End If　▵302

〔346〕 End If　▵185

〔347〕 End If　▵67