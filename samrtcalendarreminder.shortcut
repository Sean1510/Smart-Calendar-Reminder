Smart Calendar Reminder 2 (357 actions, 128 KB)
"WFQuickActionSurfaces": [],
"WFWorkflowClientVersion": "3303.0.4",
"WFWorkflowHasOutputFallback": false,
"WFWorkflowHasShortcutInputVariables": true,
"WFWorkflowIcon": {
   "WFWorkflowIconStartColor": 431817727,
   "WFWorkflowIconGlyphNumber": 61701
},
"WFWorkflowImportQuestions": [],
"WFWorkflowInputContentItemClasses": [],
"WFWorkflowMinimumClientVersion": 3010,
"WFWorkflowMinimumClientVersionString": "3010",
"WFWorkflowOutputContentItemClasses": [],
"WFWorkflowTypes": []


〔0〕 If 〔Shortcut Input〕 does not have any value

〔1〕 Comment
Input has no value: for setup and update

〔2〕 Comment
Inspired by [Schedule Shortcut or Alarm] but designed to work smarter for my needs! Instead of manually inputting each trigger or alarm, this shortcut leverages my Calendar as the ultimate data source. It automatically scans for upcoming events, then:

• Speaks out the event details
• Sets a tailored alarm—accounting for travel and prep time—right when you need it

No more early, forgettable reminders. It keeps your schedule perfectly in sync. Give it a try and let your Calendar do the heavy lifting!

〔3〕 Dictionary　» 4 5 7 9 10 11 12 21
{  "Name": "Smart Calendar Reminder",
   "Version": "1.1",
   "RH ID": "21959",
   "Icons": {
      "Update": "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",
      "Skip": "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",
      "Not Now": "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"
   }
}

〔4〕 Get Contents of URL https://routinehub.co/api/v1/shortcuts/〔3 Dictionary.RH ID〕/versions/latest 　➔ RH Server　» 6 8 11 16 20

〔5〕 Get File at Path 〔3 Dictionary.Name〕/Skip.txt from Folder　»
• File: {  "fileLocation": {
      "crossDeviceItemID": "docs.icloud.com:com.apple.CloudDocs/documents/95d6214c39557e3de40d802073a860c04f3aed5b",
      "fileProviderDomainID": "com.apple.CloudDocs.iCloudDriveFileProvider/38059A1C-DC76-4B89-B62F-250A61DBFC73",
      "appContainerBundleIdentifier": "com.apple.shortcuts",
      "relativeSubpath": "",
      "WFFileLocationType": "Shortcuts"
   },
   "filename": "Documents",
   "displayName": "Shortcuts"
}
• FileErrorIfNotFound: false
• ShowFilePicker: false
• GetFolderContents: true

〔6〕 If 〔5 File as Text〕 is not 〔4 RH Server as Dictionary.Version〕

〔7〕 Get Dictionary Value for Version in 〔3 Dictionary〕　»

〔8〕 If 〔7 Dictionary Value as Text〕 is not 〔4 RH Server as Dictionary.Version〕

〔9〕 Base64 Decode 〔3 Dictionary.Icons.Update〕

〔10〕 Show Alert A new version of 〔3 Dictionary.Name〕 is available to download!

〔11〕 Text　» 14
⬆️ Update ⬆️

A new version of 〔3 Dictionary.Name〕 is available to download!

〔3 Dictionary.Version〕 ↗ 〔4 RH Server as Dictionary.Version〕   —   〔4 RH Server as Dictionary.Release〕

〔4 RH Server as Dictionary.Notes〕

〔12〕 Text　»
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Update;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Update〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Skip;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Skip〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Not Now;;;;
PHOTO;ENCODING=b:〔3 Dictionary.Icons.Not Now〕
END:VCARD

〔13〕 Set Name of 〔12 Text〕 to updateprompt.vcf　»

〔14〕 Choose from List 〔13 Renamed Item as Contact〕　» 15 19
• ChooseFromListActionPrompt: 〔11 Text〕

〔15〕 If 〔14 Chosen Item as Text〕 is Update

〔16〕 Open URL 〔4 RH Server as Dictionary.URL〕
• Show-WFInput: true

〔17〕 Stop This Shortcut

〔18〕 End If

〔19〕 If 〔14 Chosen Item as Text〕 is Skip

〔20〕 Save File 〔4 RH Server as Dictionary.Version〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔? Dictionary.Name〕/Skip.txt

〔21〕 Show Alert This version of 〔3 Dictionary.Name〕 has been skipped!
• AlertActionTitle: ✅ Done ✅
• AlertActionCancelButtonShown: false

〔22〕 End If

〔23〕 End If　▵8

〔24〕 End If　▵6

〔25〕 Dictionary 　➔ menus　»
{  "mainMenu": {
      "Setup": {
         "title": "Setup",
         "sub": "Find easy to follow instructions for setting up the required automations",
         "icon": ""
      }
   }
}

〔26〕 Get Dictionary from 〔25 menus.mainMenu〕　»

〔27〕 Repeat with Each in 〔26 Dictionary〕

〔28〕 Get Dictionary All Values in 〔Repeat Item as Dictionary〕 　➔ Options　»
• DictionaryKey: 〔Repeat Item as Dictionary’s Keys〕.title

〔29〕 Repeat[2] with Each in 〔28 Options as Dictionary〕

〔30〕 Text
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:〔Repeat Item 2 as Dictionary.title〕;
ORG:〔Repeat Item 2 as Dictionary.sub〕;
PHOTO;ENCODING=b:〔Repeat Item 2 as Dictionary.icon〕;
END:VCARD

〔31〕 End Repeat[2] with Each

〔32〕 End Repeat with Each　»

〔33〕 Text　»
〔32 Repeat Results〕

〔34〕 Set Name of 〔33 Text〕 to mainMenu.vcf　»

〔35〕 Get Contacts from 〔34 Renamed Item〕　»

〔36〕 Choose from List 〔35 Contacts〕　»
• ChooseFromListActionPrompt: ☀️Welcome to Smart Calendar Reminder☀️

〔37〕 If 〔36 Selected Item’s Name〕 is Setup

〔38〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• FileErrorIfNotFound: false

〔39〕 If 〔38 File’s File Size〕 does not have any value

〔40〕 Comment
All the information is stored in iCloud. The shortcut isn’t collecting anything.

〔41〕 Text　»
Choose Travel Time Calculation Method

1️⃣ Notes 🗓️ / Current 📍\u000D
Uses the address in the Calendar event Notes if available (routing via Notes if you're not already there), otherwise calculates directly from your current location to the event.\u000D
\u000D
2️⃣ Notes 🗓️ / Home 🏡\u000D
Uses the Notes address if available (same as 1️⃣), but if Notes are empty, routes via your home address if you're not already there, or directly from home if you are.\u000D
\u000D

〔42〕 Choose from Menu
• MenuPrompt: 〔41 Text〕
• MenuItems: [1️⃣ Notes 🗓️ / Current 📍,
2️⃣ Notes 🗓️ / Home 🏡]

〔43〕 Menu Item 1️⃣ Notes 🗓️ / Current 📍

〔44〕 Dictionary　»
{  "state": "\"\"",
   "street": "\"\"",
   "city": "\"\"",
   "country": "\"\"",
   "postcode": "\"\""
}

〔45〕 Set Variable HomeAddress to 〔44 Dictionary〕

〔46〕 Menu Item 2️⃣ Notes 🗓️ / Home 🏡

〔47〕 Text　»
Please provide your home address for accurate travel time calculations via Apple Maps.

〔48〕 Text　»
<!DOCTYPE html>
<html>
<head>
    <title>Address Collector</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Modern CSS styling */
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .form-container {
            max-width: 500px;
            margin: 20px auto;
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #34495e;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 0; /* Equal left/right margins */
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
            box-sizing: border-box; /* Ensures padding doesn't affect width */
        }

        input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.2);
        }

        button {
            background: #3498db;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #2980b9;
        }

        /* New success message styling */
        .success-message {
            display: none;
            background: #e8f5e9;
            color: #2e7d32;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            text-align: center;
        }

        .success-message.show {
            display: block;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>〔47 Text〕</h2>
        <form id="addressForm">
            <div class="form-group">
                <label>Street Address</label>
                <input type="text" id="street" placeholder="" required>
            </div>

            <div class="form-group">
                <label>City</label>
                <input type="text" id="city" placeholder="" required>
            </div>

            <div class="form-group">
                <label>State/Province</label>
                <input type="text" id="state" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Country/Region</label>
                <input type="text" id="country" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Postal Code</label>
                <input type="text" id="postcode" placeholder="" required>
            </div>

            <button type="button" onclick="sendToShortcut()">Submit Address</button>
        </form>

        <!-- Success message container -->
        <div class="success-message" id="successMessage">
            <p>Data collected successfully!</p>
        </div>
    </div>

<script>
function sendToShortcut() {
  const addressData = {
    street: document.getElementById('street').value,
    city: document.getElementById('city').value,
    state: document.getElementById('state').value,
    country: document.getElementById('country').value,
    postcode: document.getElementById('postcode').value
  };
\u{space}\u{space}
  // Copy data to clipboard
  navigator.clipboard.writeText(JSON.stringify(addressData));
\u{space}\u{space}
  // Show success message and hide form
  document.getElementById('addressForm').style.display = 'none';
  document.getElementById('successMessage').classList.add('show');
}
</script>
</body>
</html>

〔49〕 Set Name of 〔48 Text〕 to Address.html　»

〔50〕 Show Web View at 〔49 Renamed Item〕

〔51〕 Get Clipboard　»

〔52〕 Get Dictionary from 〔51 Clipboard〕　»

〔53〕 Set Variable HomeAddress to 〔52 Dictionary〕

〔54〕 End Menu　▵46

〔55〕 List　» 57
[🚙Driving,
🚶‍♀️Walking,
🚊Transit,
🚵‍♀️Biking]

〔56〕 Text　»
Select Travel Method (It will apply to all the events)

〔57〕 Choose from List 〔55 List〕 　➔ Travel Method Selected　»
• ChooseFromListActionPrompt: 〔56 Text〕

〔58〕 Set Variable TravelMethod to 〔57 Travel Method Selected〕

〔59〕 Text　»
Besides travel time, how many Extra Minutes Needed (e.g., '15 mins buffer')

〔60〕 Ask for Number Input 　➔ Extra Time Needed　»
• AskActionPrompt: 〔59 Text〕
• AskActionAllowsNegativeNumbers: false
• AskActionAllowsDecimalNumbers: false

〔61〕 Set Variable ExtraTime to 〔60 Extra Time Needed〕

〔62〕 Dictionary　»
{  "HomeAddress": "〔HomeAddress as Dictionary〕",
   "TravelMethod": "〔TravelMethod〕",
   "ExtraTime": "〔ExtraTime〕"
}

〔63〕 Save File 〔62 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/aboutme.txt

〔64〕 End If　▵39

〔65〕 Otherwise　▵37

〔66〕 End If

〔67〕 Otherwise　▵0

〔68〕 If 〔Shortcut Input as Number〕 is 1

〔69〕 Comment
Find all calendar events in the next day and set alarm automatically. Recommend set up automation at 12:00 am daily.

This is useful because in next step we will find calendar event in the next 1 hour and set up automation to trigger each hour. But in some cases it cann’t set alarm. e.g. an event start date is 09:45am, tranvel time + extra time is 50, so the sopposed alarm time should be 08:55am, at 08:00 this event will not be triggered because it’s not in the next an hour; at 09:00 this event is triggered but the supposed alarm time has aleady passed.

So this one can handle the scenario above.

If some travel take more than one day, you may to adjust the search crteria, e.g. change form 1 day to 2\u{space}

〔70〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• File: 〔Shortcut Input〕

〔71〕 Get Dictionary from 〔70 File〕　» 72 73 74

〔72〕 Set Variable HomeAddress to 〔71 Dictionary.HomeAddress〕

〔73〕 Set Variable TravelMethod to 〔71 Dictionary.TravelMethod〕

〔74〕 Set Variable ExtraTime to 〔71 Dictionary.ExtraTime〕

〔75〕 Find Calendar Events All Calendar Events where　» 76 77
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 1 days
Is All Day
Canceled is {"Bool":{"Value":false,"WFSerializationType":"WFBooleanSubstitutableState"}}

〔76〕 If 〔75 Calendar Events〕 has any value

〔77〕 Repeat with Each in 〔75 Calendar Events〕

〔78〕 If 〔Repeat Item as CalendarEvent’s Location〕 has any value

〔79〕 Get Current Location　» 89 95 111
• Accuracy: Best

〔80〕 Comment
Since apple calendar event does has departure field, if you need to set a specific departure, you need to input the departure in the Notes of the event, using format below:

{
“Street”: “your departure street of the specific event”,
“City”: “your departure city of the specific event”,
“State”: “your departure state of the specific event”,
“Country”: “your departure country of the specific event”,
“Postcode”: “your departure postcode of the specific event”
}

For my own experience it’s seldomn used.

〔81〕 If All are true　〔Repeat Item’s Notes〕 has any value　〔Repeat Item’s Notes〕 begins with {　〔Repeat Item’s Notes〕 ends with }

〔82〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔83〕 Get Dictionary from 〔Repeat Item’s Notes〕 　➔ Notes Address Dictionary　» 84 85 86 87 88 95 98

〔84〕 Set Variable Calendar_Notes_Street to 〔83 Notes Address Dictionary.Street〕

〔85〕 Set Variable Calendar_Notes_City to 〔83 Notes Address Dictionary.City〕

〔86〕 Set Variable Calendar_Notes_State to 〔83 Notes Address Dictionary.State〕

〔87〕 Set Variable Calendar_Notes_Region to 〔83 Notes Address Dictionary.Country〕

〔88〕 Set Variable Calendar_Notes_ZIP Code to 〔83 Notes Address Dictionary.Postcode〕

〔89〕 If All are true　〔79 Current Location’s Street〕 is 〔Calendar_Notes_Street〕　〔79 Current Location’s City〕 is 〔Calendar_Notes_City〕　〔79 Current Location’s State〕 is 〔Calendar_Notes_State〕　〔79 Current Location’s Country〕 is 〔Calendar_Notes_Region〕　〔79 Current Location’s ZIP Code〕 is 〔Calendar_Notes_ZIP Code〕

〔90〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔91〕 Number 0　»

〔92〕 Set Variable CurrentToDeparture to 〔91 Number〕

〔93〕 Otherwise

〔94〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔95〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔79 Current Location〕
• Destination: 〔83 Notes Address Dictionary〕

〔96〕 Set Variable CurrentToDeparture to 〔95 Travel Time〕

〔97〕 End If

〔98〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔83 Notes Address Dictionary〕
• Destination: 〔Repeat Item’s Location〕

〔99〕 Calculate 〔98 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔100〕 Set Variable TravelTime to 〔99 Calculation Result〕

〔101〕 Otherwise　▵81

〔102〕 Comment
CALENDER EVENT NOTES IS BLANK

〔103〕 Get Dictionary from 〔HomeAddress〕 　➔ Home Address Dictionary　» 104 105 106 107 108

〔104〕 Get Dictionary Value for street in 〔103 Home Address Dictionary〕 　➔ home_Street　» 109 111

〔105〕 Get Dictionary Value for city in 〔103 Home Address Dictionary〕 　➔ home_City　» 109 111

〔106〕 Get Dictionary Value for state in 〔103 Home Address Dictionary〕 　➔ home_State　» 109 111

〔107〕 Get Dictionary Value for country in 〔103 Home Address Dictionary〕 　➔ home_Country　» 109 111

〔108〕 Get Dictionary Value for postcode in 〔103 Home Address Dictionary〕 　➔ home_Postcode　» 109 111

〔109〕 If All are true　〔104 home_Street〕 has any value　〔105 home_City〕 has any value　〔106 home_State〕 has any value　〔107 home_Country〕 has any value　〔108 home_Postcode〕 has any value

〔110〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔111〕 If All are true　〔79 Current Location’s Street〕 is 〔104 home_Street〕　〔79 Current Location’s City〕 is 〔105 home_City〕　〔79 Current Location’s State〕 is 〔106 home_State〕　〔79 Current Location’s Country〕 is 〔107 home_Country〕　〔79 Current Location’s ZIP Code〕 is 〔108 home_Postcode〕

〔112〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔113〕 Number 0　»

〔114〕 Set Variable CurrentToDeparture to 〔113 Number〕

〔115〕 Otherwise

〔116〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔117〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔118〕 Set Variable CurrentToDeparture to 〔117 Travel Time〕

〔119〕 End If

〔120〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔Repeat Item’s Location〕

〔121〕 Calculate 〔120 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔122〕 Set Variable TravelTime to 〔121 Calculation Result〕

〔123〕 Otherwise　▵109

〔124〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔125〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔Repeat Item’s Location〕

〔126〕 Set Variable TravelTime to 〔125 Travel Time〕

〔127〕 End If

〔128〕 End If　▵101

〔129〕 Otherwise　▵78

〔130〕 Number 0　»

〔131〕 Set Variable TravelTime to 〔130 Number〕

〔132〕 End If

〔133〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔134〕 Adjust Subtract Date 〔Repeat Item’s Start Date〕 　➔ Supposed Alarm Time　» 135 138 141 144 153 155 156 158 161 166 169 175 286
• Duration: 〔133 Calculation Result〕 min

〔135〕 Dictionary 　➔ Alarm Label Dictionary　» 153 159 161
{  "Event": "🗓️〔Repeat Item〕",
   "From": "〔Repeat Item’s Start Date〕",
   "To": "〔Repeat Item’s End Date〕",
   "Location": "〔Repeat Item’s Location〕",
   "AlarmTime": "〔134 Supposed Alarm Time〕"
}

〔136〕 Date Current Date 　➔ Current Date　» 137 138 155 175 286

〔137〕 Adjust Add Date 〔136 Current Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"dd MMM yyyy"}〕 　➔ 1 day after　» 151 156
• Duration: "1" days

〔138〕 If 〔134 Supposed Alarm Time〕 is 〔136 Current Date〕

〔139〕 Comment
supposed alarm time is exactly 12:00am

〔140〕 If 〔Repeat Item’s Location〕 has any value

〔141〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 at 〔Repeat Item〕 which  was supposed to get ready at 〔134 Supposed Alarm Time〕. Please check.

〔142〕 Set Variable Text to 〔141 Text〕

〔143〕 Otherwise

〔144〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 which  was supposed to get ready at 〔134 Supposed Alarm Time〕. Please check.

〔145〕 Set Variable Text to 〔144 Text〕

〔146〕 End If

〔147〕 Show Alert 〔Text〕

〔148〕 Show Notification 〔Text〕

〔149〕 Speak Text
• Text: 〔Text〕

〔150〕 Otherwise　▵138

〔151〕 If  is 〔137 1 day after〕

〔152〕 Comment
since this will be triggered at 12:00 am each day, when the supposed alarm time is 12:00 am in the next day, you can set alarm now

〔153〕 Add Alarm for 〔134 Supposed Alarm Time〕 called 〔135 Alarm Label Dictionary〕

〔154〕 Otherwise

〔155〕 If 〔134 Supposed Alarm Time〕 > 〔136 Current Date〕

〔156〕 If 〔134 Supposed Alarm Time〕 > 〔137 1 day after〕

〔157〕 Comment
when the time is other than 12:00 am of then next day, you cannot set alarm yet. If set, it will be today. For example, triggering time 2025-4-8 12:00 am, the supposed alarm time is 2025-4-9 08:00 am, if you set an alarm at 08:00 at 2025-4-8 12:00 am, it will alarm at 2025-4-8 08:00 am instead. So we need to record the supposed alarm time and trigger next day.

〔158〕 Set Variable SupposedAlarmTime to 〔134 Supposed Alarm Time〕

〔159〕 Set Variable Event to 〔135 Alarm Label Dictionary〕

〔160〕 Otherwise

〔161〕 Add Alarm for 〔134 Supposed Alarm Time〕 called 〔135 Alarm Label Dictionary〕

〔162〕 End If

〔163〕 Otherwise　▵155

〔164〕 Comment
the supposed alarm time passed

〔165〕 If 〔Repeat Item’s Location〕 has any value

〔166〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 at 〔Repeat Item〕 which  was supposed to get ready at 〔134 Supposed Alarm Time〕. Please check.

〔167〕 Set Variable Text to 〔166 Text〕

〔168〕 Otherwise

〔169〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 which  was supposed to get ready at 〔134 Supposed Alarm Time〕. Please check.

〔170〕 Set Variable Text to 〔169 Text〕

〔171〕 End If

〔172〕 Show Alert 〔Text〕

〔173〕 Show Notification 〔Text〕

〔174〕 Speak Text
• Text: 〔Text〕

〔175〕 If 〔134 Supposed Alarm Time〕 > 〔136 Current Date〕

〔176〕 Otherwise

〔177〕 End If

〔178〕 End If　▵163

〔179〕 End If　▵154

〔180〕 End If　▵150

〔181〕 Dictionary　»
{  "Supposed Alarm Time": "〔SupposedAlarmTime〕",
   "Event": "〔Event〕"
}

〔182〕 Append 〔181 Dictionary〕 to Text File
• FilePath: SmartCalendarReminder/Future Alarms.txt

〔183〕 End Repeat with Each　▵77

〔184〕 End If　▵76

〔185〕 Get File at Path SmartCalendarReminder/Future Alarm.txt from Folder　»
• FileErrorIfNotFound: false
• File: 〔Shortcut Input〕

〔186〕 Split Text 〔185 File〕 by New Lines　»

〔187〕 Repeat with Each in 〔186 Split Text〕

〔188〕 Get Dictionary from 〔Repeat Item〕　» 189 191

〔189〕 Get Dates from 〔188 Dictionary’s Keys〕　» 190 191

〔190〕 If 〔189 Dates〕 is today

〔191〕 Add Alarm for 〔189 Dates〕 called 〔188 Dictionary’s Values〕

〔192〕 End If

〔193〕 End Repeat with Each　▵187

〔194〕 Otherwise　▵68

〔195〕 If 〔Shortcut Input as Number〕 is 2

〔196〕 Comment
when input is 1 set up alarm for next 24 hours, at that time (recommended at 12:00 am) the travel time is not as accurate as recently. So, suggest to check up event in next 1 hour.

〔197〕 Get File at Path SmartCalendarReminder/aboutme.txt from Folder　»
• File: 〔Shortcut Input〕

〔198〕 Get Dictionary from 〔197 File〕　» 199 200 201

〔199〕 Set Variable HomeAddress to 〔198 Dictionary.HomeAddress〕

〔200〕 Set Variable HomeAddress to 〔198 Dictionary.TravelMethod〕

〔201〕 Set Variable ExtraTime to 〔198 Dictionary.ExtraTime〕

〔202〕 Find Calendar Events All Calendar Events where　» 203 204 296
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 1 hours
Is All Day
Canceled is {"Bool":{"Value":false,"WFSerializationType":"WFBooleanSubstitutableState"}}

〔203〕 If 〔202 Calendar Events〕 has any value

〔204〕 Repeat with Each in 〔202 Calendar Events〕

〔205〕 If 〔Repeat Item’s Location〕 has any value

〔206〕 Get Current Location　» 215 221 237
• Accuracy: Best

〔207〕 If All are true　〔Repeat Item’s Notes〕 has any value　〔Repeat Item’s Notes〕 begins with {　〔Repeat Item’s Notes〕 ends with }

〔208〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔209〕 Get Dictionary from 〔Repeat Item’s Notes〕　» 210 211 212 213 214 221 224

〔210〕 Set Variable Street to 〔209 Dictionary.street〕

〔211〕 Set Variable City to 〔209 Dictionary.city〕

〔212〕 Set Variable State to 〔209 Dictionary.state〕

〔213〕 Set Variable Region to 〔209 Dictionary.country〕

〔214〕 Set Variable ZIP Code to 〔209 Dictionary.postcode〕

〔215〕 If All are true　〔206 Current Location’s Street〕 is 〔Street〕　〔206 Current Location’s City〕 is 〔City〕　〔206 Current Location’s State〕 is 〔State〕　〔206 Current Location’s Country〕 is 〔Region〕　〔206 Current Location’s ZIP Code〕 is 〔ZIP Code〕

〔216〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔217〕 Number 0　»

〔218〕 Set Variable CurrentToDeparture to 〔217 Number〕

〔219〕 Otherwise

〔220〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔221〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔206 Current Location〕
• Destination: 〔209 Dictionary〕

〔222〕 Set Variable CurrentToDeparture to 〔221 Travel Time〕

〔223〕 End If

〔224〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔209 Dictionary〕
• Destination: 〔Repeat Item’s Location〕

〔225〕 Calculate 〔224 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔226〕 Set Variable TravelTime to 〔225 Calculation Result〕

〔227〕 Otherwise　▵207

〔228〕 Comment
CALENDER EVENT NOTES IS BLANK

〔229〕 Get Dictionary from 〔HomeAddress〕　» 230 231 232 233 234

〔230〕 Get Dictionary Value for street in 〔229 Dictionary〕 　➔ street　» 235 237

〔231〕 Get Dictionary Value for city in 〔229 Dictionary〕 　➔ city　» 235 237

〔232〕 Get Dictionary Value for state in 〔229 Dictionary〕 　➔ state　» 235 237

〔233〕 Get Dictionary Value for country in 〔229 Dictionary〕 　➔ country　» 235 237

〔234〕 Get Dictionary Value for postcode in 〔229 Dictionary〕 　➔ postcode　» 235 237

〔235〕 If All are true　〔230 street〕 has any value　〔231 city〕 has any value　〔232 state〕 has any value　〔233 country〕 has any value　〔234 postcode〕 has any value

〔236〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔237〕 If All are true　〔206 Current Location’s Street〕 is 〔230 street〕　〔206 Current Location’s City〕 is 〔231 city〕　〔206 Current Location’s State〕 is 〔232 state〕　〔206 Current Location’s Country〕 is 〔233 country〕　〔206 Current Location’s ZIP Code〕 is 〔234 postcode〕

〔238〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔239〕 Number 0　»

〔240〕 Set Variable CurrentToDeparture to 〔239 Number〕

〔241〕 Otherwise

〔242〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔243〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔244〕 Set Variable CurrentToDeparture to 〔243 Travel Time〕

〔245〕 End If

〔246〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔Repeat Item’s Location〕

〔247〕 Calculate 〔246 DepartureToDestination〕 + 〔CurrentToDeparture〕　»

〔248〕 Set Variable TravelTime to 〔247 Calculation Result〕

〔249〕 Otherwise　▵235

〔250〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔251〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔Repeat Item’s Location〕

〔252〕 Set Variable TravelTime to 〔251 Travel Time〕

〔253〕 End If

〔254〕 End If　▵227

〔255〕 Otherwise　▵205

〔256〕 Number 0　»

〔257〕 Set Variable TravelTime to 〔256 Number〕

〔258〕 End If

〔259〕 Find Alarm All Alarm　» 260 261
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔260〕 If 〔259 Alarms〕 has any value

〔261〕 Repeat[2] with Each in 〔259 Alarms〕

〔262〕 Get Dictionary from 〔Repeat Item 2’s label〕　» 263 264 265 266

〔263〕 Get Dictionary Value for Event in 〔262 Dictionary〕 　➔ Event　» 267

〔264〕 Get Dictionary Value for From in 〔262 Dictionary〕 　➔ From　» 267

〔265〕 Get Dictionary Value for To in 〔262 Dictionary〕 　➔ To　» 267

〔266〕 Get Dictionary Value for Location in 〔262 Dictionary〕 　➔ Location　»

〔267〕 If All are true　〔263 Event’s Name〕 is 〔Repeat Item〕　〔264 From’s Name〕 is 〔Repeat Item’s Start Date〕　〔265 To’s Name〕 is 〔Repeat Item’s End Date〕　〔266 Location’s Name〕 is 〔Repeat Item’s Location〕

〔268〕 Delete Alarms
• entities: 〔Repeat Item 2〕

〔269〕 End If

〔270〕 End Repeat[2] with Each　▵261

〔271〕 End If　▵260

〔272〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔273〕 Adjust Subtract Date 〔Repeat Item’s Start Date〕　» 275 277 280 290 291
• Duration: 〔272 Calculation Result〕 min

〔274〕 Date Current Date　»

〔275〕 If 〔273 Adjusted Date〕 < 〔274 Date〕

〔276〕 If 〔Repeat Item’s Location〕 has any value

〔277〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 at 〔Repeat Item’s Location〕  which  was supposed to get ready at 〔273 Adjusted Date〕. Please check.

〔278〕 Set Variable Text to 〔277 Text〕

〔279〕 Otherwise

〔280〕 Text　»
Event 〔Repeat Item〕 from 〔Repeat Item’s Start Date〕 to 〔Repeat Item’s End Date〕 which  was supposed to get ready at 〔273 Adjusted Date〕. Please check.

〔281〕 Set Variable Text to 〔280 Text〕

〔282〕 End If

〔283〕 Show Alert 〔Text〕

〔284〕 Show Notification 〔Text〕

〔285〕 Speak Text
• Text: 〔Text〕

〔286〕 If 〔134 Supposed Alarm Time〕 > 〔136 Current Date〕

〔287〕 Otherwise

〔288〕 End If

〔289〕 Otherwise　▵275

〔290〕 Dictionary　»
{  "Location": "〔Repeat Item’s Location〕",
   "Event": "🗓️〔Repeat Item〕",
   "From": "〔Repeat Item’s Start Date〕",
   "To": "〔Repeat Item’s End Date〕",
   "AlarmTime": "〔273 Adjusted Date〕"
}

〔291〕 Add Alarm for 〔273 Adjusted Date〕 called 〔290 Dictionary〕

〔292〕 End If

〔293〕 End Repeat with Each　▵204

〔294〕 Number 3　»

〔295〕 Repeat 〔294 Number〕 Times

〔296〕 Repeat[2] with Each in 〔202 Calendar Events〕

〔297〕 Format Date 〔Repeat Item 2’s Start Date〕　» 300 303
• DateFormatStyle: None

〔298〕 Format Date 〔Repeat Item 2’s End Date〕　» 300 303
• DateFormatStyle: None

〔299〕 If 〔Repeat Item 2’s Location〕 has any value

〔300〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔297 Formatted Date〕 to 〔298 Formatted Date〕 at 〔Repeat Item 2’s Location〕

〔301〕 Set Variable Text to 〔300 Text〕

〔302〕 Otherwise

〔303〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔297 Formatted Date〕 to 〔298 Formatted Date〕

〔304〕 Set Variable Text to 〔303 Text〕

〔305〕 End If

〔306〕 Speak Text
• Text: 〔Text〕

〔307〕 Wait 1 seconds

〔308〕 End Repeat[2] with Each　▵296

〔309〕 End Repeat Times　▵295

〔310〕 End If　▵203

〔311〕 Otherwise　▵195

〔312〕 If 〔Shortcut Input as Number〕 is 3

〔313〕 Comment
will be triggered when an alarm goes off

〔314〕 Dictionary　»
{  "stop": "no" }

〔315〕 Save File 〔314 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/stopflag.txt

〔316〕 Date Current Date　» 334

〔317〕 Find Alarm All Alarm　» 318 326
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔318〕 If 〔317 Alarms〕 has any value

〔319〕 Number 10000　»

〔320〕 Repeat 〔319 Number〕 Times

〔321〕 Get File at Path SmartCalendarReminder/stopflag.txt from Folder　»
• FileErrorIfNotFound: false
• File: 〔Shortcut Input〕

〔322〕 Get Dictionary from 〔321 File〕　»

〔323〕 If 〔322 Dictionary’s Values〕 is yes

〔324〕 Stop This Shortcut

〔325〕 End If

〔326〕 Repeat[2] with Each in 〔317 Alarms〕

〔327〕 Get Dictionary from 〔Repeat Item 2’s label〕　» 328 330 332 337 338 341

〔328〕 Get Dictionary Value for From in 〔327 Dictionary〕　»

〔329〕 Get Dates from 〔328 Dictionary Value〕 　➔ From　» 335

〔330〕 Get Dictionary Value for To in 〔327 Dictionary〕　»

〔331〕 Get Dates from 〔330 Dictionary Value〕 　➔ To　» 336

〔332〕 Get Dictionary Value for AlarmTime in 〔327 Dictionary〕　»

〔333〕 Get Dates from 〔332 Dictionary Value〕 　➔ AlarmTime　»

〔334〕 If All are true　〔333 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕 is 〔316 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕　〔333 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕 is 〔316 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"mm"}〕

〔335〕 Format Date 〔329 From’s Time〕　» 338 341

〔336〕 Format Date 〔331 To’s Time〕 　➔ Dictionary (Location)　» 338 341

〔337〕 If 〔327 Dictionary.Location〕 has any value

〔338〕 Text　»
Prepare for 〔327 Dictionary.Event〕 from 〔335 Formatted Date〕 to 〔336 Dictionary (Location)〕 at 〔327 Dictionary.Location〕

〔339〕 Set Variable Text to 〔338 Text〕

〔340〕 Otherwise

〔341〕 Text　»
Prepare for 〔327 Dictionary.Event〕 from 〔335 Formatted Date〕 to 〔336 Dictionary (Location)〕

〔342〕 Set Variable Text to 〔341 Text〕

〔343〕 End If

〔344〕 Speak Text
• Text: 〔Text〕

〔345〕 End If　▵334

〔346〕 End Repeat[2] with Each　▵326

〔347〕 End Repeat Times　▵320

〔348〕 End If　▵318

〔349〕 Otherwise　▵312

〔350〕 Comment
input is 4, will be triggered when an alarm is stopped ->  stop repeating speaking text

〔351〕 Dictionary　»
{  "stop": "yes" }

〔352〕 Save File 〔351 Dictionary〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: SmartCalendarReminder/stopflag.txt

〔353〕 End If

〔354〕 End If　▵311

〔355〕 End If　▵194

〔356〕 End If　▵67