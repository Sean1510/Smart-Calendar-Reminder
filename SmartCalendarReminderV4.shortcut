https://www.icloud.com/shortcuts/3e0086f528f04c40a18a2fcbe5844a6b

Smart Calendar Reminder V5 (626 actions, 255 KB)
"WFQuickActionSurfaces": [],
"WFWorkflowClientVersion": "3303.0.5",
"WFWorkflowHasOutputFallback": false,
"WFWorkflowHasShortcutInputVariables": true,
"WFWorkflowIcon": {
   "WFWorkflowIconStartColor": 431817727,
   "WFWorkflowIconGlyphNumber": 61701
},
"WFWorkflowImportQuestions": [],
"WFWorkflowInputContentItemClasses": [],
"WFWorkflowMinimumClientVersion": 3010,
"WFWorkflowMinimumClientVersionString": "3010",
"WFWorkflowOutputContentItemClasses": [],
"WFWorkflowTypes": []


〔0〕 Text　»
Smart Calendar Reminder 1

〔1〕 Set Variable Folder to 〔0 Text〕

〔2〕 Text　»
〔Folder〕/Skip.txt

〔3〕 Set Variable SkipPath to 〔2 Text〕

〔4〕 Text　»
〔Folder〕/Welcome.pdf

〔5〕 Set Variable WelcomePath to 〔4 Text〕

〔6〕 Text　»
〔Folder〕/aboutme.txt

〔7〕 Set Variable AboutMePath to 〔6 Text〕

〔8〕 Text　»
〔Folder〕/Future Alarms.txt

〔9〕 Set Variable FutureAlarmsPath to 〔8 Text〕

〔10〕 Text　»
〔Folder〕/stopflag.txt

〔11〕 Set Variable StopFlagPath to 〔10 Text〕

〔12〕 If 〔Shortcut Input〕 does not have any value

〔13〕 Comment
Initial setup and version update check when no input is provided

〔14〕 Comment
Inspired by [Schedule Shortcut or Alarm] but designed to work smarter for my needs! Instead of manually inputting each trigger or alarm, this shortcut leverages my Calendar as the ultimate data source. It automatically scans for upcoming events, then:

• Speaks out the event details
• Sets a tailored alarm—accounting for travel and prep time—right when you need it

No more early, forgettable reminders. It keeps your schedule perfectly in sync. Give it a try and let your Calendar do the heavy lifting!

〔15〕 Dictionary 　➔ Version Dictionary 　» 16 19 21 22 23 24 33
{  "Name": "Smart Calendar Reminder",
   "Version": "3.2",
   "RH ID": "21959",
   "Icons": {
      "Update": "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",
      "Skip": "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",
      "Not Now": "iVBORw0KGgoAAAANSUhEUgAAAHsAAAB7CAYAAABUx/9/AAAAAXNSR0IArs4c6QAAB79JREFUeF7tnb1uHDcQx2+fxgYE6BUclalcyY1T5SGi0qdSfghXSWNXqVJGegUBApynWWvWywuXt7szQ86QQx4PCOz4+P3jf2aW5HGHQ0OfcRx/8boDf38XdM//3n31GKR5mv//cRiG8LuqR2uoufUz3E9zH9ZASnUPoE+TYBiGo1ShucupCnZGuBiHKuGbh+0B1lQuBhf7/v5wOJg3+2Zhj+MI5hJ8rmXIa5Pg3qqpNwW7EhVjKnffm4NuAnZjkMPJACbeRGBXFHbjkM+glzbvxWDPPtk9NlFNYwvpipn37LAvTM17kzM79Kywx3H8t8LoWtOaZAWeBfasZgDdP+sjkAW6OuwL9s3cia0OXA12981c1lN6WIW7icpJyKQCu5ttwsjvJ7nR2HETh91BJ4N2BYgDF4Xd/bMYaJUlVzHYHbQ4aHHgIrA7aDXQosCTYUuAfn757/DXt7/VR6xEBddXb6ZqP96+T60++dEsCbZEMPbr7e+pg1BF/uurt4eH4x+pbU0K2qJhS4AGNf/5tU1Fr1H97cN7CYVHA0+BPaZO00tRtT9O/3z7kjpskD8KeBRsqQ2NDjuae9RKGxu2REDmunh3/Hx4fvke3ePaMgr57egInQVbEjS0GKLwu+NDbcyi2/twvDu46Dy6kGVGljnnwk7202En3SNXy4EaKBoevYRBT0M5vJ51ok4cckJpVWMNxCJ1BZVgTZq+x6yRUMRNasuciOy/SbBzg4ZOdNgc3rTonApb3HxjXemwsRFafE9SNwq7hKq7slmgydE5BXZ2VXfYUbDRxZZd2KVU3WFHw94155uwS4LusKNh76q7w2aOq8FHr7AHm+reg13EV7uW92icOQsJK2ursEub8G7Gk0BD5lV1b8EuquoOOxn26jLqGWwLqu6w02G/LpufHWNag11c1ZQ16L42jk6IM1O+gC1x1AhtAjEBFvWWgm01cNwY1sUWaAgbLq0x8wN57CRLCeBYm4SOHRElgSZbqDuEbcKEuy5gJ1mET36gI2etPWiDg/3uE2wrgZnfAWxwIW0u4JS2FNjLpvA+mXLTsKEnmNnMAZwCGtphzIS7iXAy5T5sk1dgYIGa65GWwqmgjap6scDiwzblr7nmXEPhDYCehtGdU5tgW/TXoTOiDryUwnPXR3G+CWkmv10NbOhoLgC56kmAx806+W0H26S/XuuRNgjt8rmUhNIvYJv11zmBNwr65LedsquCrWHSWwY9C+ZmsLQezjVZUoCkyuG2P3P6Cbap9XDuAKSCSs3PbW/B9PXDTjHpFwQahukelF1NJL6nCi44bvqCipSq+rEZ2ByFU0dPaoGGWp9yurZgSwJvDDQMTXuwJYA3CPoEu7pnbIq5o/rksKxGQf9cWBlfn70og1djGi7wlkE3Dxs6SDn84Cay0cMHYjrryvaGsitbbF7lLYhrwl3rWgbe1HO2AxYLunHg7T16pYJuGHhbsKVANwq8HdhU0M4nc9PnjThUaptgV73FyVkxC4OvCwM+7XrBy8irfZteKrDU/Coa1Cm0bthSoKTK0WEkVmq9x5KkAUmXJ4ZIqCD4oUCVBw61wGiVK8QrqRgfdjWnVbSBaJefRCw+c30/EsgFIlc98ezYOaf7VZwZNx+R5waQuz42Pl6G/2FDPsv72tg9JlorXq0AX/yKc4Zt0m+XAs3dVClxvwtR3PX8GJ9y+EB7W5KqcKOHH073ofk/xjfntymq1gbNUXiuthAV7ZKdw7botzFF5R5ca+2hQPffDhRejWXKb2MmPLfZpNzvkrtNCPDFlZbV3nBY6sIaDLixQG37hkNLUTnmr0sNak2wwxe89VuJKY7PS4PBLmVxVrqB30psJVCrVdlWYK+9tnHrcvnigVqHzTQ5y+Rnqoavt2AXf+busONhb72Mde+FMEXV3WFHw15V9aayZ79dVN0ddkbYpR/DOuwo2Juq3lV2aXV32HzY2IvTKS9eLXKuvMNmw95VNapsV12JG5U6bB5sTNUc2NmDtQ6bBRtVNRl2iWCtwybDJoFmwdZaRoW1ZgD7/PKd3LvaEsISKnw+3v78U/JDMd+uPjRA8xsm/bswbFNBclAslKWwU0dWNVvZs7rFonPs5IcFQJJtED5ZwwIdBVvSf2MnUSQH2kpZQidZNl+IvtdPlhn3HsVEovMOO24Kcvy0X0MU7FndycCxiDtuKOzmEtrrXhw14vQ2GrYU8Evy2wImPBp0tM8OIvTkgA0UDh+Izlv8wCPX9dWb1K6xA7KwwiRlez48GXjqSDSePxm0iLI7cPVpJgJaFLb0M7j6ENZRgRhocdhSQVsdHNRbmRSMrbVOxGeHBUsvq6oPq70KxEGrKDuI1IseWrTHEG3R4/RKpmGAP8U/KsoOgPdInYZN1D9nM+MrZr0D3weuYrZVnrNpE7eOl7JT+yKULmpDI7ZudTPeVb6KRtU3b02G7LBdQ1q4DTlSYeq+2RzsC4ReRM0++GLKXonY4Z8+RarFcrbikN3gmIDd6KOaGchmYVdu3gHwE9wTatHUmFP2SvQOJ2LgP8sm3pyKiy2qSM3yOYKH4t7NE0CqaG45bjlTbWmT2yBKevPK3utERvhVwi26gkaZfalp5h03MPvOAvhFun/3/y3cdHiCF4ufghqlTYnUfsbk/wG0cJf+RXCQ1AAAAABJRU5ErkJggg=="
   }
}

〔16〕 Get Contents of URL https://routinehub.co/api/v1/shortcuts/〔15 Version Dictionary .RH ID〕/versions/latest 　➔ RH Server　» 18 20 23 28 32

〔17〕 Get File at Path 〔SkipPath〕 from Folder　»
• File: {  "fileLocation": {
      "crossDeviceItemID": "docs.icloud.com:com.apple.CloudDocs/documents/95d6214c39557e3de40d802073a860c04f3aed5b",
      "fileProviderDomainID": "com.apple.CloudDocs.iCloudDriveFileProvider/38059A1C-DC76-4B89-B62F-250A61DBFC73",
      "appContainerBundleIdentifier": "com.apple.shortcuts",
      "relativeSubpath": "",
      "WFFileLocationType": "Shortcuts"
   },
   "filename": "Documents",
   "displayName": "Shortcuts"
}
• FileErrorIfNotFound: false
• ShowFilePicker: false
• GetFolderContents: true

〔18〕 If 〔17 File as Text〕 is not 〔16 RH Server as Dictionary.Version〕

〔19〕 Get Dictionary Value for Version in 〔15 Version Dictionary 〕　»

〔20〕 If 〔19 Dictionary Value as Text〕 is not 〔16 RH Server as Dictionary.Version〕

〔21〕 Base64 Decode 〔15 Version Dictionary .Icons.Update〕

〔22〕 Show Alert A new version of 〔15 Version Dictionary .Name〕 is available to download!

〔23〕 Text　» 26
⬆️ Update ⬆️

A new version of 〔15 Version Dictionary .Name〕 is available to download!

〔15 Version Dictionary .Version〕 ↗ 〔16 RH Server as Dictionary.Version〕   —   〔16 RH Server as Dictionary.Release〕

〔16 RH Server as Dictionary.Notes〕

〔24〕 Text　»
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Update;;;;
PHOTO;ENCODING=b:〔15 Version Dictionary .Icons.Update〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Skip;;;;
PHOTO;ENCODING=b:〔15 Version Dictionary .Icons.Skip〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Not Now;;;;
PHOTO;ENCODING=b:〔15 Version Dictionary .Icons.Not Now〕
END:VCARD

〔25〕 Set Name of 〔24 Text〕 to updateprompt.vcf　»

〔26〕 Choose from List 〔25 Renamed Item as Contact〕　» 27 31
• ChooseFromListActionPrompt: 〔23 Text〕

〔27〕 If 〔26 Chosen Item as Text〕 is Update

〔28〕 Open URL 〔16 RH Server as Dictionary.URL〕
• Show-WFInput: true

〔29〕 Stop This Shortcut

〔30〕 End If

〔31〕 If 〔26 Chosen Item as Text〕 is Skip

〔32〕 Save File 〔16 RH Server as Dictionary.Version〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔SkipPath〕

〔33〕 Show Alert This version of 〔15 Version Dictionary .Name〕 has been skipped!
• AlertActionTitle: ✅ Done ✅
• AlertActionCancelButtonShown: false

〔34〕 End If

〔35〕 End If　▵20

〔36〕 End If　▵18

〔37〕 Get File at Path 〔WelcomePath〕 from Folder　»
• FileErrorIfNotFound: false

〔38〕 If 〔37 File’s File Size〕 does not have any value

〔39〕 Text　»
<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Smart Calendar Reminder: Your Intelligent Schedule Assistant</title><style>
    /* cspell:disable-file */
    /* webkit printing magic: print all background colors */
    html {
        -webkit-print-color-adjust: exact;
    }
    * {
        box-sizing: border-box;
        -webkit-print-color-adjust: exact;
    }
\u{space}\u{space}\u{space}\u{space}
    html,
    body {
        margin: 0;
        padding: 0;
    }
    @media only screen {
        body {
            margin: 2em auto;
            max-width: 900px;
            color: rgb(55, 53, 47);
        }
    }
\u{space}\u{space}\u{space}\u{space}
    body {
        line-height: 1.5;
        white-space: pre-wrap;
    }
\u{space}\u{space}\u{space}\u{space}
    a,
    a.visited {
        color: inherit;
        text-decoration: underline;
    }
\u{space}\u{space}\u{space}\u{space}
    .pdf-relative-link-path {
        font-size: 80%;
        color: #444;
    }
\u{space}\u{space}\u{space}\u{space}
    h1,
    h2,
    h3 {
        letter-spacing: -0.01em;
        line-height: 1.2;
        font-weight: 600;
        margin-bottom: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-top: 0;
        margin-bottom: 0.75em;
    }
\u{space}\u{space}\u{space}\u{space}
    h1 {
        font-size: 1.875rem;
        margin-top: 1.875rem;
    }
\u{space}\u{space}\u{space}\u{space}
    h2 {
        font-size: 1.5rem;
        margin-top: 1.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    h3 {
        font-size: 1.25rem;
        margin-top: 1.25rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .source {
        border: 1px solid #ddd;
        border-radius: 3px;
        padding: 1.5em;
        word-break: break-all;
    }
\u{space}\u{space}\u{space}\u{space}
    .callout {
        border-radius: 3px;
        padding: 1rem;
    }
\u{space}\u{space}\u{space}\u{space}
    figure {
        margin: 1.25em 0;
        page-break-inside: avoid;
    }
\u{space}\u{space}\u{space}\u{space}
    figcaption {
        opacity: 0.5;
        font-size: 85%;
        margin-top: 0.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    mark {
        background-color: transparent;
    }
\u{space}\u{space}\u{space}\u{space}
    .indented {
        padding-left: 1.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    hr {
        background: transparent;
        display: block;
        width: 100%;
        height: 1px;
        visibility: visible;
        border: none;
        border-bottom: 1px solid rgba(55, 53, 47, 0.09);
    }
\u{space}\u{space}\u{space}\u{space}
    img {
        max-width: 100%;
    }
\u{space}\u{space}\u{space}\u{space}
    @media only print {
        img {
            max-height: 100vh;
            object-fit: contain;
        }
    }
\u{space}\u{space}\u{space}\u{space}
    @page {
        margin: 1in;
    }
\u{space}\u{space}\u{space}\u{space}
    .collection-content {
        font-size: 0.875rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .column-list {
        display: flex;
        justify-content: space-between;
    }
\u{space}\u{space}\u{space}\u{space}
    .column {
        padding: 0 1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .column:first-child {
        padding-left: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    .column:last-child {
        padding-right: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-item {
        display: block;
        font-size: 0.875rem;
        line-height: 1.3;
        padding: 0.125rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-indent-1 {
        margin-left: 1.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-indent-2 {
        margin-left: 3rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-indent-3 {
        margin-left: 4.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-link {
        text-decoration: none;
        opacity: 0.7;
        border-bottom: 1px solid rgba(55, 53, 47, 0.18);
    }
\u{space}\u{space}\u{space}\u{space}
    table,
    th,
    td {
        border: 1px solid rgba(55, 53, 47, 0.09);
        border-collapse: collapse;
    }
\u{space}\u{space}\u{space}\u{space}
    table {
        border-left: none;
        border-right: none;
    }
\u{space}\u{space}\u{space}\u{space}
    th,
    td {
        font-weight: normal;
        padding: 0.25em 0.5em;
        line-height: 1.5;
        min-height: 1.5em;
        text-align: left;
    }
\u{space}\u{space}\u{space}\u{space}
    th {
        color: rgba(55, 53, 47, 0.6);
    }
\u{space}\u{space}\u{space}\u{space}
    ol,
    ul {
        margin: 0;
        margin-block-start: 0.6em;
        margin-block-end: 0.6em;
    }
\u{space}\u{space}\u{space}\u{space}
    li > ol:first-child,
    li > ul:first-child {
        margin-block-start: 0.6em;
    }
\u{space}\u{space}\u{space}\u{space}
    ul > li {
        list-style: disc;
    }
\u{space}\u{space}\u{space}\u{space}
    ul.to-do-list {
        padding-inline-start: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    ul.to-do-list > li {
        list-style: none;
    }
\u{space}\u{space}\u{space}\u{space}
    .to-do-children-checked {
        text-decoration: line-through;
        opacity: 0.375;
    }
\u{space}\u{space}\u{space}\u{space}
    ul.toggle > li {
        list-style: none;
    }
\u{space}\u{space}\u{space}\u{space}
    ul {
        padding-inline-start: 1.7em;
    }
\u{space}\u{space}\u{space}\u{space}
    ul > li {
        padding-left: 0.1em;
    }
\u{space}\u{space}\u{space}\u{space}
    ol {
        padding-inline-start: 1.6em;
    }
\u{space}\u{space}\u{space}\u{space}
    ol > li {
        padding-left: 0.2em;
    }
\u{space}\u{space}\u{space}\u{space}
    .mono ol {
        padding-inline-start: 2em;
    }
\u{space}\u{space}\u{space}\u{space}
    .mono ol > li {
        text-indent: -0.4em;
    }
\u{space}\u{space}\u{space}\u{space}
    .toggle {
        padding-inline-start: 0em;
        list-style-type: none;
    }
\u{space}\u{space}\u{space}\u{space}
    /* Indent toggle children */
    .toggle > li > details {
        padding-left: 1.7em;
    }
\u{space}\u{space}\u{space}\u{space}
    .toggle > li > details > summary {
        margin-left: -1.1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .selected-value {
        display: inline-block;
        padding: 0 0.5em;
        background: rgba(206, 205, 202, 0.5);
        border-radius: 3px;
        margin-right: 0.5em;
        margin-top: 0.3em;
        margin-bottom: 0.3em;
        white-space: nowrap;
    }
\u{space}\u{space}\u{space}\u{space}
    .collection-title {
        display: inline-block;
        margin-right: 1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-description {
        margin-bottom: 2em;
    }
\u{space}\u{space}\u{space}\u{space}
    .simple-table {
        margin-top: 1em;
        font-size: 0.875rem;
        empty-cells: show;
    }
    .simple-table td {
        height: 29px;
        min-width: 120px;
    }
\u{space}\u{space}\u{space}\u{space}
    .simple-table th {
        height: 29px;
        min-width: 120px;
    }
\u{space}\u{space}\u{space}\u{space}
    .simple-table-header-color {
        background: rgb(247, 246, 243);
        color: black;
    }
    .simple-table-header {
        font-weight: 500;
    }
\u{space}\u{space}\u{space}\u{space}
    time {
        opacity: 0.5;
    }
\u{space}\u{space}\u{space}\u{space}
    .icon {
        display: inline-block;
        max-width: 1.2em;
        max-height: 1.2em;
        text-decoration: none;
        vertical-align: text-bottom;
        margin-right: 0.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    img.icon {
        border-radius: 3px;
    }
\u{space}\u{space}\u{space}\u{space}
    .user-icon {
        width: 1.5em;
        height: 1.5em;
        border-radius: 100%;
        margin-right: 0.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .user-icon-inner {
        font-size: 0.8em;
    }
\u{space}\u{space}\u{space}\u{space}
    .text-icon {
        border: 1px solid #000;
        text-align: center;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-cover-image {
        display: block;
        object-fit: cover;
        width: 100%;
        max-height: 30vh;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-header-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-header-icon-with-cover {
        margin-top: -0.72em;
        margin-left: 0.07em;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-header-icon img {
        border-radius: 3px;
    }
\u{space}\u{space}\u{space}\u{space}
    .link-to-page {
        margin: 1em 0;
        padding: 0;
        border: none;
        font-weight: 500;
    }
\u{space}\u{space}\u{space}\u{space}
    p > .user {
        opacity: 0.5;
    }
\u{space}\u{space}\u{space}\u{space}
    td > .user,
    td > time {
        white-space: nowrap;
    }
\u{space}\u{space}\u{space}\u{space}
    input[type="checkbox"] {
        transform: scale(1.5);
        margin-right: 0.6em;
        vertical-align: middle;
    }
\u{space}\u{space}\u{space}\u{space}
    p {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    .image {
        border: none;
        margin: 1.5em 0;
        padding: 0;
        border-radius: 0;
        text-align: center;
    }
\u{space}\u{space}\u{space}\u{space}
    .code,
    code {
        background: rgba(135, 131, 120, 0.15);
        border-radius: 3px;
        padding: 0.2em 0.4em;
        border-radius: 3px;
        font-size: 85%;
        tab-size: 2;
    }
\u{space}\u{space}\u{space}\u{space}
    code {
        color: #eb5757;
    }
\u{space}\u{space}\u{space}\u{space}
    .code {
        padding: 1.5em 1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .code-wrap {
        white-space: pre-wrap;
        word-break: break-all;
    }
\u{space}\u{space}\u{space}\u{space}
    .code > code {
        background: none;
        padding: 0;
        font-size: 100%;
        color: inherit;
    }
\u{space}\u{space}\u{space}\u{space}
    blockquote {
        font-size: 1.25em;
        margin: 1em 0;
        padding-left: 1em;
        border-left: 3px solid rgb(55, 53, 47);
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark {
        text-decoration: none;
        max-height: 8em;
        padding: 0;
        display: flex;
        width: 100%;
        align-items: stretch;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-title {
        font-size: 0.85em;
        overflow: hidden;
        text-overflow: ellipsis;
        height: 1.75em;
        white-space: nowrap;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-text {
        display: flex;
        flex-direction: column;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-info {
        flex: 4 1 180px;
        padding: 12px 14px 14px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-image {
        width: 33%;
        flex: 1 1 180px;
        display: block;
        position: relative;
        object-fit: cover;
        border-radius: 1px;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-description {
        color: rgba(55, 53, 47, 0.6);
        font-size: 0.75em;
        overflow: hidden;
        max-height: 4.5em;
        word-break: break-word;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-href {
        font-size: 0.75em;
        margin-top: 0.25em;
    }
\u{space}\u{space}\u{space}\u{space}
    .sans { font-family: ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }
    .code { font-family: "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace; }
    .serif { font-family: Lyon-Text, Georgia, ui-serif, serif; }
    .mono { font-family: iawriter-mono, Nitti, Menlo, Courier, monospace; }
    .pdf .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK JP'; }
    .pdf:lang(zh-CN) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC'; }
    .pdf:lang(zh-TW) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK TC'; }
    .pdf:lang(ko-KR) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK KR'; }
    .pdf .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK JP'; }
    .pdf:lang(zh-CN) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC'; }
    .pdf:lang(zh-TW) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK TC'; }
    .pdf:lang(ko-KR) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK KR'; }
    .pdf .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK JP'; }
    .pdf:lang(zh-CN) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK SC'; }
    .pdf:lang(zh-TW) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK TC'; }
    .pdf:lang(ko-KR) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK KR'; }
    .pdf .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK JP'; }
    .pdf:lang(zh-CN) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC'; }
    .pdf:lang(zh-TW) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK TC'; }
    .pdf:lang(ko-KR) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK KR'; }
    .highlight-default {
        color: rgba(55, 53, 47, 1);
    }
    .highlight-gray {
        color: rgba(120, 119, 116, 1);
        fill: rgba(120, 119, 116, 1);
    }
    .highlight-brown {
        color: rgba(159, 107, 83, 1);
        fill: rgba(159, 107, 83, 1);
    }
    .highlight-orange {
        color: rgba(217, 115, 13, 1);
        fill: rgba(217, 115, 13, 1);
    }
    .highlight-yellow {
        color: rgba(203, 145, 47, 1);
        fill: rgba(203, 145, 47, 1);
    }
    .highlight-teal {
        color: rgba(68, 131, 97, 1);
        fill: rgba(68, 131, 97, 1);
    }
    .highlight-blue {
        color: rgba(51, 126, 169, 1);
        fill: rgba(51, 126, 169, 1);
    }
    .highlight-purple {
        color: rgba(144, 101, 176, 1);
        fill: rgba(144, 101, 176, 1);
    }
    .highlight-pink {
        color: rgba(193, 76, 138, 1);
        fill: rgba(193, 76, 138, 1);
    }
    .highlight-red {
        color: rgba(212, 76, 71, 1);
        fill: rgba(212, 76, 71, 1);
    }
    .highlight-default_background {
        color: rgba(55, 53, 47, 1);
    }
    .highlight-gray_background {
        background: rgba(248, 248, 247, 1);
    }
    .highlight-brown_background {
        background: rgba(244, 238, 238, 1);
    }
    .highlight-orange_background {
        background: rgba(251, 236, 221, 1);
    }
    .highlight-yellow_background {
        background: rgba(251, 243, 219, 1);
    }
    .highlight-teal_background {
        background: rgba(237, 243, 236, 1);
    }
    .highlight-blue_background {
        background: rgba(231, 243, 248, 1);
    }
    .highlight-purple_background {
        background: rgba(248, 243, 252, 1);
    }
    .highlight-pink_background {
        background: rgba(252, 241, 246, 1);
    }
    .highlight-red_background {
        background: rgba(253, 235, 236, 1);
    }
    .block-color-default {
        color: inherit;
        fill: inherit;
    }
    .block-color-gray {
        color: rgba(120, 119, 116, 1);
        fill: rgba(120, 119, 116, 1);
    }
    .block-color-brown {
        color: rgba(159, 107, 83, 1);
        fill: rgba(159, 107, 83, 1);
    }
    .block-color-orange {
        color: rgba(217, 115, 13, 1);
        fill: rgba(217, 115, 13, 1);
    }
    .block-color-yellow {
        color: rgba(203, 145, 47, 1);
        fill: rgba(203, 145, 47, 1);
    }
    .block-color-teal {
        color: rgba(68, 131, 97, 1);
        fill: rgba(68, 131, 97, 1);
    }
    .block-color-blue {
        color: rgba(51, 126, 169, 1);
        fill: rgba(51, 126, 169, 1);
    }
    .block-color-purple {
        color: rgba(144, 101, 176, 1);
        fill: rgba(144, 101, 176, 1);
    }
    .block-color-pink {
        color: rgba(193, 76, 138, 1);
        fill: rgba(193, 76, 138, 1);
    }
    .block-color-red {
        color: rgba(212, 76, 71, 1);
        fill: rgba(212, 76, 71, 1);
    }
    .block-color-default_background {
        color: inherit;
        fill: inherit;
    }
    .block-color-gray_background {
        background: rgba(248, 248, 247, 1);
    }
    .block-color-brown_background {
        background: rgba(244, 238, 238, 1);
    }
    .block-color-orange_background {
        background: rgba(251, 236, 221, 1);
    }
    .block-color-yellow_background {
        background: rgba(251, 243, 219, 1);
    }
    .block-color-teal_background {
        background: rgba(237, 243, 236, 1);
    }
    .block-color-blue_background {
        background: rgba(231, 243, 248, 1);
    }
    .block-color-purple_background {
        background: rgba(248, 243, 252, 1);
    }
    .block-color-pink_background {
        background: rgba(252, 241, 246, 1);
    }
    .block-color-red_background {
        background: rgba(253, 235, 236, 1);
    }
    .select-value-color-uiBlue { background-color: undefined; }
    .select-value-color-pink { background-color: rgba(225, 136, 179, 0.27); }
    .select-value-color-purple { background-color: rgba(168, 129, 197, 0.27); }
    .select-value-color-green { background-color: rgba(123, 183, 129, 0.27); }
    .select-value-color-gray { background-color: rgba(84, 72, 49, 0.15); }
    .select-value-color-transparentGray { background-color: undefined; }
    .select-value-color-translucentGray { background-color: undefined; }
    .select-value-color-orange { background-color: rgba(224, 124, 57, 0.27); }
    .select-value-color-brown { background-color: rgba(210, 162, 141, 0.35); }
    .select-value-color-red { background-color: rgba(244, 171, 159, 0.4); }
    .select-value-color-yellow { background-color: rgba(236, 191, 66, 0.39); }
    .select-value-color-blue { background-color: rgba(93, 165, 206, 0.27); }
    .select-value-color-pageGlass { background-color: undefined; }
    .select-value-color-washGlass { background-color: undefined; }
\u{space}\u{space}\u{space}\u{space}
    .checkbox {
        display: inline-flex;
        vertical-align: text-bottom;
        width: 16;
        height: 16;
        background-size: 16px;
        margin-left: 2px;
        margin-right: 5px;
    }
\u{space}\u{space}\u{space}\u{space}
    .checkbox-on {
        background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22%2358A9D7%22%2F%3E%0A%3Cpath%20d%3D%22M6.71429%2012.2852L14%204.9995L12.7143%203.71436L6.71429%209.71378L3.28571%206.2831L2%207.57092L6.71429%2012.2852Z%22%20fill%3D%22white%22%2F%3E%0A%3C%2Fsvg%3E");
    }
\u{space}\u{space}\u{space}\u{space}
    .checkbox-off {
        background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%220.75%22%20y%3D%220.75%22%20width%3D%2214.5%22%20height%3D%2214.5%22%20fill%3D%22white%22%20stroke%3D%22%2336352F%22%20stroke-width%3D%221.5%22%2F%3E%0A%3C%2Fsvg%3E");
    }
\u{space}\u{space}\u{space}\u{space}\u{space}\u{space}\u{space}\u{space}
    </style></head><body><article id="1d1604ef-9b4b-8020-9a43-e475a43661a0" class="page sans"><header><h1 class="page-title">Smart Calendar Reminder: Your Intelligent Schedule Assistant</h1><p class="page-description"></p></header><div class="page-body"><figure class="block-color-blue_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-80b2-927b-ddb2d55d6032"><div style="width:100%">👋 Welcome to Smart Calendar Reminder! This welcome message appears only during your first use.</div></figure><h1 id="1d1604ef-9b4b-80c5-a289-d2aedc69317d" class="block-color-yellow_background">Transform Your Calendar Experience</h1><p id="1d1604ef-9b4b-80f7-ac48-d98bc2a805e6" class="">While iOS Calendar is fantastic for basic scheduling, we all know those built-in reminders can be easy to miss. Adding manual alarms, calculating travel times, and customizing notifications with event details can become tedious and time-consuming. That&#x27;s where Smart Calendar Reminder comes in - your automated solution for intelligent schedule management!</p><h2 id="1d1604ef-9b4b-800f-9752-cb68ca87b1cf" class="">Powerful Features at Your Fingertips</h2><ul id="0ecdba52-af59-410f-9efb-321f8e2d4ba6" class="bulleted-list"><li style="list-style-type:disc">Seamless Calendar Integration - No manual input needed</li></ul><ul id="1d1604ef-9b4b-80b9-8d0d-fe7b3c28115b" class="bulleted-list"><li style="list-style-type:disc">Intelligent Travel Time Calculations powered by Apple Maps</li></ul><ul id="4f6b7aca-7c92-458d-9996-e8f891a3775d" class="bulleted-list"><li style="list-style-type:disc">Spoken Event Details - Hear your schedule clearly</li></ul><ul id="1d1604ef-9b4b-80f5-9fe9-ee50fd3e7795" class="bulleted-list"><li style="list-style-type:disc">Smart Preparation Time Management</li></ul><h2 id="fa2195d7-f08f-4058-a00a-18e2b562b5b2" class="">Smart Location Intelligence</h2><p id="1d1604ef-9b4b-80d3-9799-dd97b27a3773" class="">Our advanced travel time calculation system uses three methods to determine your departure location, in order of priority:</p><ol type="1" id="667c5bbb-f94c-480b-bccd-c84948a3c40f" class="numbered-list" start="1"><li>Custom Departure Address - Add this JSON format in your calendar event notes for specific departure points:<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" integrity="sha512-7Z9J3l1+EYfeaPKcGXu3MS/7T+w19WtKQY/n+xzmw4hZhJ9tyYmcUS+4QqAlzhicE5LAfMQSF3iFTK9bQdTxXg==" crossorigin="anonymous" referrerPolicy="no-referrer"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" integrity="sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==" crossorigin="anonymous" referrerPolicy="no-referrer"/><pre id="1d1604ef-9b4b-80d1-9d4b-dfb42d06c7b8" class="code"><code class="language-JSON">{
        &quot;Street&quot;: &quot;your departure street&quot;,
        &quot;City&quot;: &quot;your departure city&quot;,
        &quot;State&quot;: &quot;your departure state&quot;,
        &quot;Country&quot;: &quot;your departure country&quot;,
        &quot;Postcode&quot;: &quot;your departure postcode&quot;
    }</code></pre></li></ol><ol type="1" id="1d1604ef-9b4b-80c6-b468-d002dd94b75d" class="numbered-list" start="2"><li>Home Address - Uses your pre-configured home address - perfect for regular schedules</li></ol><ol type="1" id="aba3d861-a84a-48f6-a163-ac441f18b1b3" class="numbered-list" start="3"><li>Current Location - Automatically uses your current position as a fallback</li></ol><figure class="block-color-yellow_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-80ed-a48d-f0cad158ed60"><div style="width:100%">Smart Travel Planning: The system automatically calculates additional travel time if you&#x27;re not at your departure location!</div></figure><h2 id="efb3fa4e-d05f-4bd3-bd94-b9b991e29ce4" class="">Voice Announcements</h2><ul id="1d1604ef-9b4b-8076-9c50-fcefa4c4903c" class="bulleted-list"><li style="list-style-type:disc">Hourly Schedule Updates: Hear upcoming events at the start of each hour</li></ul><ul id="a0eb2cf6-1637-4d13-94c8-356fd19cd78a" class="bulleted-list"><li style="list-style-type:disc">Smart Reminders: Get spoken alerts at perfectly timed intervals</li></ul><h2 id="1d1604ef-9b4b-80dd-9df1-d8fae003cae6" class="">Intelligent Automation System</h2><p id="15ce45ed-b4fa-4b81-bbd0-2fa585b5c7ce" class="">Our sophisticated automation system ensures you never miss an important event:</p><ul id="1d1604ef-9b4b-80c5-a181-f10518e7e73d" class="bulleted-list"><li style="list-style-type:disc">Daily Planning: 12:00 AM check of your next 24 hours</li></ul><ul id="f54bf941-4703-4cc3-9f61-408f1eed72ee" class="bulleted-list"><li style="list-style-type:disc">Real-time Updates: Hourly recalculation of travel times</li></ul><ul id="1d1604ef-9b4b-800d-b8f8-e85831f4b0ee" class="bulleted-list"><li style="list-style-type:disc">Dynamic Adjustments: Automatic alarm optimization</li></ul><figure class="block-color-gray_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-8075-9657-ed6135b16d17"><div style="width:100%">Example: For a 10:30 AM meeting with 3 hours total travel time, the system ensures your 7:30 AM alarm is set and continuously optimized based on real-time conditions.</div></figure><h1 id="1d1604ef-9b4b-803a-8fbf-c89822dbca0a" class="block-color-blue">Setup Guide</h1><p id="1d1604ef-9b4b-80a7-ae75-c35724896e17" class="">Let&#x27;s get your Smart Calendar Reminder configured with four essential automations:</p><h2 id="1d1604ef-9b4b-8072-ab56-d0757b2435ef" class="block-color-gray_background">Automation 1: Daily 12:00 AM Check</h2><p id="1d1604ef-9b4b-80c9-9b4a-ee2712524a0d" class="block-color-blue">Step 1. Open Shortcuts and tap [Automation], then tap [+] at the top right corner</p><figure id="1d1604ef-9b4b-8043-b390-ff859889379f" class="image"><a href="gZWfH4Kler-left.png"><img style="width:709.984375px" src="https://i.imgur.com/za6VDMA.jpeg"/></a></figure><p id="1d1604ef-9b4b-804a-9cb1-f487991237c6" class="">Step 2. Tap [Time of Day]</p><figure id="1d1604ef-9b4b-8085-99bb-e3d90115d5dd" class="image"><a href="NDyjdrLrYZ-left.png"><img style="width:709.984375px" src="https://i.imgur.com/z7aJ0OB.jpeg"/></a></figure><p id="1d1604ef-9b4b-806d-a7eb-f652a480cbc6" class="">Step 3. Follow the sequence shown in the image</p><figure id="1d1604ef-9b4b-80cd-9ca5-fc076df31898" class="image"><a href="6KJEFinDm6-left.png"><img style="width:709.984375px" src="https://i.imgur.com/u6C2AR9.jpeg"/></a></figure><p id="1d1604ef-9b4b-8050-b817-f0e2368f43ca" class="block-color-gray_background">Step 4. Tap [New Blank Automation]</p><figure id="1d1604ef-9b4b-8028-b872-eed1a3f6701a" class="image"><a href="XblW6TFHek-left.png"><img style="width:709.984375px" src="https://i.imgur.com/nrTr7Np.jpeg"/></a></figure><p id="b8f8c3cf-7fdc-4a99-b2ba-60e18fef34c7" class="">Step 5. Search for the [Number] action</p><figure id="1d1604ef-9b4b-80d0-ad58-f7a1dc1d1c48" class="image"><a href="4XgUTG3h3E-left.png"><img style="width:709.984375px" src="https://i.imgur.com/F6jogMJ.jpeg"/></a></figure><p id="1d1604ef-9b4b-804e-9fe3-c5b6fc8701fa" class="">Step 6. Input number 1</p><figure id="1d1604ef-9b4b-8056-be0b-c4cfaebae0f7" class="image"><a href="n0XhfXtA03-left.png"><img style="width:709.984375px" src="https://i.imgur.com/HUMvkry.jpeg"/></a></figure><p id="1d1604ef-9b4b-8004-b82f-c5b6250d69c0" class="">Step 7. Search for [Run Shortcut] action</p><figure id="1d1604ef-9b4b-801d-a2d0-e444c55bbdb1" class="image"><a href="BUB7V9ITn8-left.png"><img style="width:709.984375px" src="https://i.imgur.com/IbHA9Jf.jpeg"/></a></figure><p id="1d1604ef-9b4b-8031-a595-d6b268bb5bfc" class="">Step 8. Search and select [Smart Calendar Reminder] in [Run Shortcut] action’s shortcut field.</p><figure id="1d1604ef-9b4b-804c-8be0-d6060e3b5a73" class="image"><a href="b50xsbc2QT-left.png"><img style="width:709.984375px" src="https://i.imgur.com/41WbF2A.png"/></a></figure><p id="1d1604ef-9b4b-805d-96d8-c871e0493bdb" class="block-color-default_background">Step 9. Tap [Done] in the top right corner to complete setup</p><figure id="1d1604ef-9b4b-8024-864a-d9002a94e719" class="image"><a href="LjO11dxjS3-left.png"><img style="width:709.984375px" src="https://i.imgur.com/tmrW6r8.jpeg"/></a></figure><h2 id="1d1604ef-9b4b-8045-9247-e3afd799f547" class="">Automation 2: Hourly Check</h2><p id="1d1604ef-9b4b-809c-900e-e425d52b7a0a" class="">Follow the same steps as Automation 1, with these modifications:</p><ul id="1d1604ef-9b4b-80a8-9819-cfd9961eb078" class="bulleted-list"><li style="list-style-type:disc">In step 3, select all <em><strong><span style="border-bottom:0.05em solid">24 hourly times</span></strong></em></li></ul><ul id="1d1604ef-9b4b-80b3-b766-ed9c851957a5" class="bulleted-list"><li style="list-style-type:disc">In step 6, input number <strong>2</strong> instead of 1</li></ul><h2 id="1d1604ef-9b4b-80ad-a1ea-e247f84f2063" class="">Automation 3: Alarm Trigger</h2><p id="1d1604ef-9b4b-8044-9254-f9d3912d6d6c" class="">Follow the same steps as Automation 1, with these changes:</p><ul id="1d1604ef-9b4b-802e-98b3-c8202e4f8765" class="bulleted-list"><li style="list-style-type:disc">In step 2, tap [<strong>Alarm</strong>] instead of [Time of Day]</li></ul><ul id="1d1604ef-9b4b-80a5-9ccc-d6a2906a3429" class="bulleted-list"><li style="list-style-type:disc">Configure settings as shown:</li></ul><figure id="1d1604ef-9b4b-8014-b883-f88df7a348e1" class="image"><a href="fIF3p3ttC0-left.png"><img style="width:709.984375px" src="https://i.imgur.com/MTyZ3km.png"/></a></figure><ul id="1d1604ef-9b4b-80dc-a6f8-edc73fc17118" class="bulleted-list"><li style="list-style-type:disc">In step 6, input number <strong>3</strong> instead of 1</li></ul><h2 id="1d1604ef-9b4b-8025-9db9-e83367a64cdb" class="">Automation 4: Alarm Stop</h2><p id="1d1604ef-9b4b-805f-afe2-f2de398e695a" class="">Follow the same steps as Automation 1, with these changes:</p><ul id="10aa2fe6-80f0-4850-93c0-4fe14b146190" class="bulleted-list"><li style="list-style-type:disc">In step 2, tap [<strong>Alarm</strong>] instead of [Time of Day]</li></ul><ul id="1d1604ef-9b4b-80aa-baad-e6dd7acf4ad9" class="bulleted-list"><li style="list-style-type:disc">Configure settings as shown:</li></ul><figure id="1d1604ef-9b4b-8068-a490-e601bfafcfe7" class="image"><a href="E24uC2vV2j-left.png"><img style="width:709.984375px" src="https://i.imgur.com/2LbJK9D.png"/></a></figure><ul id="1d1604ef-9b4b-804f-bcba-f64ec9bd67f1" class="bulleted-list"><li style="list-style-type:disc">In step 6, input number <strong>4</strong> instead of 1</li></ul><figure class="block-color-teal_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-8031-8b44-ddb00fab6dee"><div style="width:100%">🎉 Congratulations! Once you&#x27;ve completed these automations, your Smart Calendar Reminder is ready to revolutionize your schedule management!</div></figure></div></article><span class="sans" style="font-size:14px;padding-top:2em"></span></body></html>

〔40〕 Set Name of 〔39 Text〕 to Welcome.html　» 41 42

〔41〕 Show Web View at 〔40 Renamed Item〕

〔42〕 Make PDF from 〔40 Renamed Item〕　»

〔43〕 Save File 〔42 PDF〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔WelcomePath〕

〔44〕 End If　▵38

〔45〕 Dictionary 　➔ menus　»
{  "mainMenu": {
      "Setup": {
         "title": "Setup",
         "sub": "Set Personal Preferences",
         "icon": "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"
      },
      "Change": {
         "title": "Change",
         "sub": "Change Personal Preferences",
         "icon": "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"
      },
      "View": {
         "title": "View",
         "sub": "View Personal Preferences or Automations Setup Inctructions",
         "icon": "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"
      }
   }
}

〔46〕 Get Dictionary from 〔45 menus.mainMenu〕　»

〔47〕 Repeat with Each in 〔46 Dictionary〕

〔48〕 Get Dictionary All Values in 〔Repeat Item as Dictionary〕 　➔ Options　»
• DictionaryKey: 〔Repeat Item as Dictionary’s Keys〕.title

〔49〕 Repeat[2] with Each in 〔48 Options as Dictionary〕

〔50〕 Text
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:〔Repeat Item 2 as Dictionary.title〕;
ORG:〔Repeat Item 2 as Dictionary.sub〕;
PHOTO;ENCODING=b:〔Repeat Item 2 as Dictionary.icon〕;
END:VCARD

〔51〕 End Repeat[2] with Each

〔52〕 End Repeat with Each　»

〔53〕 Text　»
〔52 Repeat Results〕

〔54〕 Set Name of 〔53 Text〕 to mainMenu.vcf　»

〔55〕 Get Contacts from 〔54 Renamed Item〕　»

〔56〕 Choose from List 〔55 Contacts〕　» 57 104 110
• ChooseFromListActionPrompt: ☀️Welcome to Smart Calendar Reminder☀️

〔57〕 If 〔56 Selected Item’s Name〕 is Setup

〔58〕 Get File at Path 〔AboutMePath〕 from Folder　»
• FileErrorIfNotFound: false

〔59〕 If 〔58 File’s File Size〕 does not have any value

〔60〕 Comment
All the information is stored in iCloud. The shortcut isn’t collecting anything.

〔61〕 Text　»
Choose Travel Time Calculation Method

1️⃣ Notes 🗓️ / Current 📍\u000D
Uses the address in the Calendar event Notes if available (routing via Notes if you're not already there), otherwise calculates directly from your current location to the event.\u000D
\u000D
2️⃣ Notes 🗓️ / Home 🏡\u000D
Uses the Notes address if available (same as 1️⃣), but if Notes are empty, routes via your home address if you're not already there, or directly from home if you are.\u000D
\u000D

〔62〕 Choose from Menu
• MenuPrompt: 〔61 Text〕
• MenuItems: [1️⃣ Notes 🗓️ / Current 📍,
2️⃣ Notes 🗓️ / Home 🏡]

〔63〕 Menu Item 1️⃣ Notes 🗓️ / Current 📍

〔64〕 Dictionary　»
{  "state": "\"\"",
   "street": "\"\"",
   "city": "\"\"",
   "country": "\"\"",
   "postcode": "\"\""
}

〔65〕 Set Variable HomeAddress to 〔64 Dictionary〕

〔66〕 Menu Item 2️⃣ Notes 🗓️ / Home 🏡

〔67〕 Text　»
Please provide your home address for accurate travel time calculations via Apple Maps.

〔68〕 Text　»
<!DOCTYPE html>
<html>
<head>
    <title>Address Collector</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Modern CSS styling */
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .form-container {
            max-width: 500px;
            margin: 20px auto;
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #34495e;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 0; /* Equal left/right margins */
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
            box-sizing: border-box; /* Ensures padding doesn't affect width */
        }

        input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.2);
        }

        button {
            background: #3498db;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #2980b9;
        }

        /* New success message styling */
        .success-message {
            display: none;
            background: #e8f5e9;
            color: #2e7d32;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            text-align: center;
        }

        .success-message.show {
            display: block;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>〔67 Text〕</h2>
        <form id="addressForm">
            <div class="form-group">
                <label>Street Address</label>
                <input type="text" id="street" placeholder="" required>
            </div>

            <div class="form-group">
                <label>City</label>
                <input type="text" id="city" placeholder="" required>
            </div>

            <div class="form-group">
                <label>State/Province</label>
                <input type="text" id="state" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Country/Region</label>
                <input type="text" id="country" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Postal Code</label>
                <input type="text" id="postcode" placeholder="" required>
            </div>

            <button type="button" onclick="sendToShortcut()">Submit Address</button>
        </form>

        <!-- Success message container -->
        <div class="success-message" id="successMessage">
            <p>Data collected successfully!</p>
        </div>
    </div>

<script>
function sendToShortcut() {
  const addressData = {
    street: document.getElementById('street').value,
    city: document.getElementById('city').value,
    state: document.getElementById('state').value,
    country: document.getElementById('country').value,
    postcode: document.getElementById('postcode').value
  };
\u{space}\u{space}
  // Copy data to clipboard
  navigator.clipboard.writeText(JSON.stringify(addressData));
\u{space}\u{space}
  // Show success message and hide form
  document.getElementById('addressForm').style.display = 'none';
  document.getElementById('successMessage').classList.add('show');
}
</script>
</body>
</html>

〔69〕 Set Name of 〔68 Text〕 to Address.html　»

〔70〕 Show Web View at 〔69 Renamed Item〕

〔71〕 Get Clipboard　»

〔72〕 Get Dictionary from 〔71 Clipboard〕　»

〔73〕 Set Variable HomeAddress to 〔72 Dictionary〕

〔74〕 End Menu　▵66

〔75〕 List　» 77
[Driving,
Walking,
Transit,
Biking]

〔76〕 Text　»
Select Travel Method (It will apply to all the events)

〔77〕 Choose from List 〔75 List〕 　➔ Travel Method Selected　»
• ChooseFromListActionPrompt: 〔76 Text〕

〔78〕 Set Variable TravelMethod to 〔77 Travel Method Selected〕

〔79〕 Text　»
Besides travel time, how many Extra Minutes Needed (e.g., '15 mins buffer')

〔80〕 Ask for Number Input 　➔ Extra Time Needed　»
• AskActionPrompt: 〔79 Text〕
• AskActionAllowsNegativeNumbers: false
• AskActionAllowsDecimalNumbers: false

〔81〕 Set Variable ExtraTime to 〔80 Extra Time Needed〕

〔82〕 Text　»
Set Time Granularity to search up Calendar Events

Default: 1 hour -> 1 day -> 1 week -> 1 month

Customize based on your own needs.

〔83〕 Choose from Menu
• MenuPrompt: 〔82 Text〕
• MenuItems: [Default,
Customize]

〔84〕 Menu Item Default

〔85〕 Dictionary　»
{  "month": "1",
   "week": "1",
   "day": "1",
   "hour": "1"
}

〔86〕 Text　»
〔85 Dictionary〕

〔87〕 Set Variable Granularity to 〔86 Text〕

〔88〕 Menu Item Customize

〔89〕 Text　»
<!DOCTYPE html>
<html>
<head>
 \u00A0\u00A0 <title>Time Unit Collector</title>
 \u00A0\u00A0 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 \u00A0\u00A0 <style>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 /* Previous styling remains unchanged */
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 body {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 font-family: 'Segoe UI', sans-serif;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 padding: 20px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 min-height: 100vh;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .form-container {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 max-width: 500px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 margin: 20px auto;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 background: white;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 padding: 25px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 border-radius: 15px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 box-shadow: 0 10px 30px rgba(0,0,0,0.1);
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 h2 {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 color: #2c3e50;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 text-align: center;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 margin-bottom: 25px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .form-group {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 margin-bottom: 20px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 label {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 display: block;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 margin-bottom: 8px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 color: #34495e;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 font-weight: 500;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 button {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 background: #3498db;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 color: white;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 padding: 15px 30px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 border: none;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 border-radius: 8px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 font-size: 16px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 cursor: pointer;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 width: 100%;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 transition: background 0.3s ease;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 button:hover {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 background: #2980b9;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .success-message {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 display: none;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 background: #e8f5e9;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 color: #2e7d32;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 padding: 20px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 border-radius: 8px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 margin-top: 20px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 text-align: center;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .success-message.show {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 display: block;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .number-input {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 display: flex;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 align-items: center;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 gap: 10px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .number-input button {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 width: 40px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 height: 40px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 padding: 0;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 border-radius: 50%;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 background: #f0f0f0;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 color: #3498db;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 font-size: 20px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 line-height: 40px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .number-input button:hover {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 background: #e0e0e0;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .number-input input {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 width: 80px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 padding: 8px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 text-align: center;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 border: 2px solid #e0e0e0;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 border-radius: 8px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 font-size: 16px;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }
 \u00A0\u00A0 </style>
</head>
<body>
 \u00A0\u00A0 <div class="form-container">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <h2>Time Unit Settings</h2>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <form id="timeForm">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="form-group">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <label>Years</label>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="number-input">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('years', -1)">-</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <input type="number" id="years" value="0" min="0">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('years', 1)">+</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="form-group">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <label>Months</label>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="number-input">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('months', -1)">-</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <input type="number" id="months" value="0" min="0">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('months', 1)">+</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="form-group">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <label>Weeks</label>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="number-input">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('weeks', -1)">-</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <input type="number" id="weeks" value="0" min="0">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('weeks', 1)">+</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="form-group">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <label>Days</label>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="number-input">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('days', -1)">-</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <input type="number" id="days" value="0" min="0">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('days', 1)">+</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="form-group">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <label>Hours</label>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="number-input">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('hours', -1)">-</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <input type="number" id="hours" value="0" min="0">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('hours', 1)">+</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="form-group">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <label>Minutes</label>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="number-input">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('minutes', -1)">-</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <input type="number" id="minutes" value="0" min="0">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="adjustValue('minutes', 1)">+</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <button type="button" onclick="collectTimeData()">Generate Time Dictionary</button>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </form>



 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <div class="success-message" id="successMessage">
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 <p>Time dictionary copied to clipboard!</p>
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 </div>
 \u00A0\u00A0 </div>



<script>
function adjustValue(field, change) {
 \u00A0\u00A0 const input = document.getElementById(field);
 \u00A0\u00A0 let value = parseInt(input.value) + change;
 \u00A0\u00A0 input.value = value < 0 ? 0 : value;
}



function collectTimeData() {
 \u00A0\u00A0 const singularMap = {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 years: 'year',
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 months: 'month',
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 weeks: 'week',
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 days: 'day',
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 hours: 'hour',
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 minutes: 'minute'
 \u00A0\u00A0 };



 \u00A0\u00A0 const timeDict = {};
 \u00A0\u00A0\u{space}
 \u00A0\u00A0 Object.keys(singularMap).forEach(field => {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 const value = document.getElementById(field).value;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 if (value > 0) {
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 const numericValue = parseInt(value);
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 const baseKey = singularMap[field];
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 const key = numericValue === 1 ? baseKey : `${baseKey}s`;
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 timeDict[key] = value.toString();
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }
 \u00A0\u00A0 });



 \u00A0\u00A0 const outputString = `{${Object.entries(timeDict)
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .map(([key, value]) => `"${key}": "${value}"`)
 \u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 .join(', ')}}`;



 \u00A0\u00A0 navigator.clipboard.writeText(outputString);
 \u00A0\u00A0 document.getElementById('timeForm').style.display = 'none';
 \u00A0\u00A0 document.getElementById('successMessage').classList.add('show');
}
</script>
</body>
</html>

〔90〕 Set Name of 〔89 Text〕 to Granularity.html　»

〔91〕 Show Web View at 〔90 Renamed Item〕

〔92〕 Get Clipboard　»

〔93〕 Get Dictionary from 〔92 Clipboard〕　»

〔94〕 Set Variable Granularity to 〔93 Dictionary〕

〔95〕 End Menu　▵88

〔96〕 Dictionary　»
{  "HomeAddress": "〔HomeAddress as Dictionary〕",
   "TravelMethod": "〔TravelMethod〕",
   "ExtraTime": "〔ExtraTime〕",
   "Granularity": "〔Granularity〕"
}

〔97〕 Text　»
〔96 Dictionary〕

〔98〕 Save File 〔97 Text〕
• Folder: {  "fileLocation": {
      "crossDeviceItemID": "docs.icloud.com:iCloud.is.workflow.my.workflows/documents/e51c720424ec90d3260ccd6f241343baea15b7f3",
      "fileProviderDomainID": "com.apple.CloudDocs.iCloudDriveFileProvider/46CA22EA-49CD-4A1D-9512-F48B36AA64B5",
      "appContainerBundleIdentifier": "com.apple.shortcuts",
      "relativeSubpath": "",
      "WFFileLocationType": "Shortcuts"
   },
   "filename": "Documents",
   "displayName": "Shortcuts"
}
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔AboutMePath〕

〔99〕 Otherwise　▵59

〔100〕 Show Alert You have set up. If you want to modify, please tap [Change] instead.
• AlertActionCancelButtonShown: false

〔101〕 Run Shortcut Smart Calendar Reminder
• Workflow: {  "workflowIdentifier": "5A2BC55E-C195-4C6C-93E9-725F782CDD1B",
   "isSelf": true,
   "workflowName": "Smart Calendar Reminder"
}

〔102〕 End If

〔103〕 End If　▵57

〔104〕 If 〔56 Selected Item’s Name〕 is Change

〔105〕 Get File at Path 〔AboutMePath〕 from Folder　»

〔106〕 Delete Files 〔105 File〕
• DeleteImmediatelyDelete: true

〔107〕 Show Alert Your preferences are deleted. Please choose [Setup] from main menu to set up again.
• AlertActionCancelButtonShown: false

〔108〕 Run Shortcut Smart Calendar Reminder
• Workflow: {  "workflowIdentifier": "5A2BC55E-C195-4C6C-93E9-725F782CDD1B",
   "isSelf": true,
   "workflowName": "Smart Calendar Reminder"
}

〔109〕 End If

〔110〕 If 〔56 Selected Item’s Name〕 is View

〔111〕 Choose from Menu
• MenuPrompt: Which one?
• MenuItems: [Automations Setup Instructions,
Personal Preferences]

〔112〕 Menu Item Automations Setup Instructions

〔113〕 Get File at Path 〔WelcomePath〕 from Folder　»

〔114〕 Open File 〔113 File〕

〔115〕 Menu Item Personal Preferences

〔116〕 Get File at Path 〔AboutMePath〕 from Folder　»

〔117〕 Open File 〔116 File〕

〔118〕 End Menu

〔119〕 End If　▵110

〔120〕 Otherwise　▵12

〔121〕 If 〔Shortcut Input as Number〕 is 1

〔122〕 Comment
*Revolutionizing event management by integrating calendar data with intelligent automation:

Voice announcements for upcoming events

Dynamic alarm calculation (travel + prep time)

Calendar-driven scheduling system
Eliminates manual reminders and ensures perfect timing synchronization*

〔123〕 Get File at Path 〔AboutMePath〕 from Folder　»
• FileErrorIfNotFound: false

〔124〕 Get Dictionary from 〔123 File〕　» 125 128 129 131

〔125〕 Get Dictionary from 〔124 Dictionary.HomeAddress〕　»

〔126〕 Text　»
〔125 Dictionary.street〕 〔125 Dictionary.city〕 〔125 Dictionary.state〕 〔125 Dictionary.postcode〕 〔125 Dictionary.country〕\u{space}

〔127〕 Set Variable HomeAddress to 〔126 Text〕

〔128〕 Set Variable TravelMethod to 〔124 Dictionary.TravelMethod〕

〔129〕 Get Numbers from 〔124 Dictionary.ExtraTime〕　»

〔130〕 Set Variable ExtraTime to 〔129 Numbers〕

〔131〕 Get Dictionary from 〔124 Dictionary.Granularity〕　» 132 136 148

〔132〕 Get Dictionary All Keys in 〔131 Dictionary〕　» 135 146

〔133〕 Set Variable MinMinute to  

〔134〕 Dictionary　» 139 151
{  "year": 525600,
   "month": 43200,
   "week": 10080,
   "day": 1440,
   "hour": 60,
   "minute": 1
}

〔135〕 Repeat with Each in 〔132 Dictionary Value〕

〔136〕 Get Dictionary Value for 〔Repeat Item〕 in 〔131 Dictionary〕　»

〔137〕 Get Numbers from 〔136 Dictionary Value〕　» 140

〔138〕 Replace Text s$ with   in 〔Repeat Item〕　»
• ReplaceTextRegularExpression: true

〔139〕 Get Dictionary Value for 〔138 Updated Text〕 in 〔134 Dictionary〕　»

〔140〕 Calculate 〔139 Dictionary Value〕 × 〔137 Numbers〕　» 141 142

〔141〕 If Any are true　〔MinMinute〕 does not have any value　〔140 Calculation Result〕 < 〔MinMinute〕

〔142〕 Set Variable MinMinute to 〔140 Calculation Result〕

〔143〕 End If

〔144〕 Show Result
〔MinMinute〕

〔145〕 End Repeat with Each　▵135

〔146〕 Repeat with Each in 〔132 Dictionary Value〕

〔147〕 Date Current Date　» 155 158 161 164 167

〔148〕 Get Dictionary Value for 〔Repeat Item〕 in 〔131 Dictionary〕　» 149 152 159 162 165 168 171 174

〔149〕 Get Numbers from 〔148 Dictionary Value〕

〔150〕 Replace Text s$ with   in 〔Repeat Item〕　» 151 158 161 164 167 170 173
• ReplaceTextRegularExpression: true

〔151〕 Get Dictionary Value for 〔150 Updated Text〕 in 〔134 Dictionary〕　»

〔152〕 Calculate 〔151 Dictionary Value〕 × 〔148 Dictionary Value〕　»

〔153〕 Set Variable GranularityRepeatItem to 〔152 Calculation Result〕

〔154〕 If 〔GranularityRepeatItem〕 is 〔MinMinute〕

〔155〕 Adjust Add Date 〔147 Date〕　»
• Duration: 〔GranularityRepeatItem〕 min

〔156〕 Turn Focus On
• AssertionType: Time
• FocusModes: {  "Identifier": "com.apple.donotdisturb.mode.bookmarkfill",
   "DisplayString": "Timer"
}
• Time: 〔155 Adjusted Date〕

〔157〕 End If　» 159 162 165 168 171 174

〔158〕 If All are true　〔150 Updated Text〕 is year　〔147 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"dd MMM"}〕 is 01 Jan　〔147 Date’s Time〕 is 2025-05-14, 12:00:12 AM

〔159〕 Find Calendar Events 〔157 If Result〕 where
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 〔148 Dictionary Value〕 undefined
Is Not All Day
Canceled is {"Bool":false}

〔160〕 Otherwise

〔161〕 If All are true　〔150 Updated Text〕 is month　〔147 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"dd"}〕 is 01　〔147 Date’s Time〕 is 2025-05-14, 12:00:39 AM

〔162〕 Find Calendar Events 〔157 If Result〕 where
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 〔148 Dictionary Value〕 undefined
Is Not All Day
Canceled is {"Bool":false}

〔163〕 Otherwise

〔164〕 If All are true　〔150 Updated Text〕 is week　〔147 Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"EEE"}〕 is Sun　〔147 Date’s Time〕 is 2025-05-14, 12:00:08 AM

〔165〕 Find Calendar Events 〔157 If Result〕 where
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 〔148 Dictionary Value〕 undefined
Is Not All Day
Canceled is {"Bool":false}

〔166〕 Otherwise

〔167〕 If All are true　〔150 Updated Text〕 is day　〔147 Date’s Time〕 is 2025-05-14, 12:00:21 AM

〔168〕 Find Calendar Events 〔157 If Result〕 where
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 〔148 Dictionary Value〕 undefined
Is Not All Day
Canceled is {"Bool":false}

〔169〕 Otherwise

〔170〕 If 〔150 Updated Text〕 is hour

〔171〕 Find Calendar Events 〔157 If Result〕 where
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 〔148 Dictionary Value〕 undefined
Is Not All Day
Canceled is {"Bool":false}

〔172〕 Otherwise

〔173〕 If 〔150 Updated Text〕 is minute

〔174〕 Find Calendar Events 〔157 If Result〕 where
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 〔148 Dictionary Value〕 undefined
Is Not All Day
Canceled is {"Bool":false}

〔175〕 End If

〔176〕 End If

〔177〕 End If　▵169

〔178〕 End If　▵166

〔179〕 End If　▵163

〔180〕 End If　▵160　» 181 182 183 519

〔181〕 If 〔180 If Result〕 has any value

〔182〕 Count Items in 〔180 If Result〕　» 523 531

〔183〕 Repeat[2] with Each in 〔180 If Result〕

〔184〕 Set Variable CalendarRepeatItem to 〔Repeat Item 2〕

〔185〕 If 〔CalendarRepeatItem’s Location〕 has any value

〔186〕 Get Current Location　» 198 204 290
• Accuracy: Best

〔187〕 Comment
*To specify event-specific departure locations:

1. Create calendar event notes with JSON structure:
{
“Street”: “your departure street”,
“City”: “your departure city”,
“State”: “your departure state”,
“Country”: “your departure country”,
“Postcode”: “your departure postcode”
}
2. System prioritizes these over default locations*

〔188〕 If All are true　〔CalendarRepeatItem’s Notes〕 has any value　〔CalendarRepeatItem’s Notes〕 begins with {　〔CalendarRepeatItem’s Notes〕 ends with }

〔189〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔190〕 Get Dictionary from 〔CalendarRepeatItem’s Notes〕 　➔ Notes Address Dictionary　» 191 192 193 194 195

〔191〕 Set Variable Calendar_Notes_Street to 〔190 Notes Address Dictionary.Street〕

〔192〕 Set Variable Calendar_Notes_City to 〔190 Notes Address Dictionary.City〕

〔193〕 Set Variable Calendar_Notes_State to 〔190 Notes Address Dictionary.State〕

〔194〕 Set Variable Calendar_Notes_Region to 〔190 Notes Address Dictionary.Country〕

〔195〕 Set Variable Calendar_Notes_ZIP_Code to 〔190 Notes Address Dictionary.Postcode〕

〔196〕 Text　»
〔Calendar_Notes_Street〕 〔Calendar_Notes_City〕 〔Calendar_Notes_State〕 〔Calendar_Notes_ZIP_Code〕 〔Calendar_Notes_Region〕

〔197〕 Set Variable NotesAddressString to 〔196 Text〕

〔198〕 If All are true　〔186 Current Location’s Street〕 is 〔Calendar_Notes_Street〕　〔186 Current Location’s City〕 is 〔Calendar_Notes_City〕　〔186 Current Location’s State〕 is 〔Calendar_Notes_State〕　〔186 Current Location’s Country〕 is 〔Calendar_Notes_Region〕　〔186 Current Location’s ZIP Code〕 is 〔Calendar_Notes_ZIP_Code〕

〔199〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔200〕 Number 0　»

〔201〕 Set Variable CurrentToDeparture to 〔200 Number〕

〔202〕 Otherwise

〔203〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔204〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔186 Current Location〕
• Destination: 〔NotesAddressString〕

〔205〕 Set Variable TravelTimeString to 〔204 Travel Time〕

〔206〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔207〕 Set Variable MatchString to 〔206 Matches〕

〔208〕 Count Items in 〔MatchString〕　»

〔209〕 If 〔208 Count〕 is 1

〔210〕 Get First Item from List 〔MatchString〕　»

〔211〕 Set Variable TravelDays to 〔210 Item from List〕

〔212〕 Otherwise

〔213〕 Number 0　»

〔214〕 Set Variable TravelDays to 〔213 Number〕

〔215〕 End If

〔216〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔217〕 Set Variable MatchString to 〔216 Matches〕

〔218〕 Count Items in 〔MatchString〕　»

〔219〕 If 〔218 Count〕 is 1

〔220〕 Get First Item from List 〔MatchString〕　»

〔221〕 Set Variable TravelHours to 〔220 Item from List〕

〔222〕 Otherwise

〔223〕 Number 0　»

〔224〕 Set Variable TravelHours to 〔223 Number〕

〔225〕 End If

〔226〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔227〕 Set Variable MatchString to 〔226 Matches〕

〔228〕 Count Items in 〔MatchString〕　»

〔229〕 If 〔228 Count〕 is 1

〔230〕 Get First Item from List 〔MatchString〕　»

〔231〕 Set Variable TravelMinutes to 〔230 Item from List〕

〔232〕 Otherwise

〔233〕 Number 0　»

〔234〕 Set Variable TravelMinutes to 〔233 Number〕

〔235〕 End If

〔236〕 Calculate 〔TravelDays〕 × 1440　» 238

〔237〕 Calculate 〔TravelHours〕 × 60　»

〔238〕 Calculate 〔237 Calculation Result〕 + 〔236 Calculation Result〕　»

〔239〕 Calculate 〔238 Calculation Result〕 + 〔TravelMinutes〕　»

〔240〕 Set Variable CurrentToDeparture to 〔239 Calculation Result〕

〔241〕 End If　▵202

〔242〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔NotesAddressString〕
• Destination: 〔CalendarRepeatItem’s Location〕

〔243〕 Set Variable TravelTimeString to 〔242 DepartureToDestination〕

〔244〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔245〕 Set Variable MatchString to 〔244 Matches〕

〔246〕 Count Items in 〔MatchString〕　»

〔247〕 If 〔246 Count〕 is 1

〔248〕 Get First Item from List 〔MatchString〕　»

〔249〕 Set Variable TravelDays to 〔248 Item from List〕

〔250〕 Otherwise

〔251〕 Number 0　»

〔252〕 Set Variable TravelDays to 〔251 Number〕

〔253〕 End If

〔254〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔255〕 Set Variable MatchString to 〔254 Matches〕

〔256〕 Count Items in 〔MatchString〕　»

〔257〕 If 〔256 Count〕 is 1

〔258〕 Get First Item from List 〔MatchString〕　»

〔259〕 Set Variable TravelHours to 〔258 Item from List〕

〔260〕 Otherwise

〔261〕 Number 0　»

〔262〕 Set Variable TravelHours to 〔261 Number〕

〔263〕 End If

〔264〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔265〕 Set Variable MatchString to 〔264 Matches〕

〔266〕 Count Items in 〔MatchString〕　»

〔267〕 If 〔266 Count〕 is 1

〔268〕 Get First Item from List 〔MatchString〕　»

〔269〕 Set Variable TravelMinutes to 〔268 Item from List〕

〔270〕 Otherwise

〔271〕 Number 0　»

〔272〕 Set Variable TravelMinutes to 〔271 Number〕

〔273〕 End If

〔274〕 Calculate 〔TravelDays〕 × 1440　» 276

〔275〕 Calculate 〔TravelHours〕 × 60　»

〔276〕 Calculate 〔275 Calculation Result〕 + 〔274 Calculation Result〕　»

〔277〕 Calculate 〔276 Calculation Result〕 + 〔TravelMinutes〕　»

〔278〕 Calculate 〔277 Calculation Result〕 + 〔CurrentToDeparture〕　»

〔279〕 Set Variable TravelTime to 〔278 Calculation Result〕

〔280〕 Otherwise　▵188

〔281〕 Comment
CALENDER EVENT NOTES IS BLANK

〔282〕 Get Dictionary from 〔HomeAddress〕 　➔ Home Address Dictionary　» 283 284 285 286 287

〔283〕 Get Dictionary Value for street in 〔282 Home Address Dictionary〕 　➔ home_Street　» 288 290

〔284〕 Get Dictionary Value for city in 〔282 Home Address Dictionary〕 　➔ home_City　» 288 290

〔285〕 Get Dictionary Value for state in 〔282 Home Address Dictionary〕 　➔ home_State　» 288 290

〔286〕 Get Dictionary Value for country in 〔282 Home Address Dictionary〕 　➔ home_Country　» 288 290

〔287〕 Get Dictionary Value for postcode in 〔282 Home Address Dictionary〕 　➔ home_Postcode　» 288 290

〔288〕 If All are true　〔283 home_Street〕 has any value　〔284 home_City〕 has any value　〔285 home_State〕 has any value　〔286 home_Country〕 has any value　〔287 home_Postcode〕 has any value

〔289〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔290〕 If All are true　〔186 Current Location’s Street〕 is 〔283 home_Street〕　〔186 Current Location’s City〕 is 〔284 home_City〕　〔186 Current Location’s State〕 is 〔285 home_State〕　〔186 Current Location’s Country〕 is 〔286 home_Country〕　〔186 Current Location’s ZIP Code〕 is 〔287 home_Postcode〕

〔291〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔292〕 Number 0　»

〔293〕 Set Variable CurrentToDeparture to 〔292 Number〕

〔294〕 Otherwise

〔295〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔296〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔297〕 Set Variable TravelTimeString to 〔296 Travel Time〕

〔298〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔299〕 Set Variable MatchString to 〔298 Matches〕

〔300〕 Count Items in 〔MatchString〕　»

〔301〕 If 〔300 Count〕 is 1

〔302〕 Get First Item from List 〔MatchString〕　»

〔303〕 Set Variable TravelDays to 〔302 Item from List〕

〔304〕 Otherwise

〔305〕 Number 0　»

〔306〕 Set Variable TravelDays to 〔305 Number〕

〔307〕 End If

〔308〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔309〕 Set Variable MatchString to 〔308 Matches〕

〔310〕 Count Items in 〔MatchString〕　»

〔311〕 If 〔310 Count〕 is 1

〔312〕 Get First Item from List 〔MatchString〕　»

〔313〕 Set Variable TravelHours to 〔312 Item from List〕

〔314〕 Otherwise

〔315〕 Number 0　»

〔316〕 Set Variable TravelHours to 〔315 Number〕

〔317〕 End If

〔318〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔319〕 Set Variable MatchString to 〔318 Matches〕

〔320〕 Count Items in 〔MatchString〕　»

〔321〕 If 〔320 Count〕 is 1

〔322〕 Get First Item from List 〔MatchString〕　»

〔323〕 Set Variable TravelMinutes to 〔322 Item from List〕

〔324〕 Otherwise

〔325〕 Number 0　»

〔326〕 Set Variable TravelMinutes to 〔325 Number〕

〔327〕 End If

〔328〕 Calculate 〔TravelDays〕 × 1440　» 330

〔329〕 Calculate 〔TravelHours〕 × 60　»

〔330〕 Calculate 〔329 Calculation Result〕 + 〔328 Calculation Result〕　»

〔331〕 Calculate 〔330 Calculation Result〕 + 〔TravelMinutes〕　»

〔332〕 Set Variable CurrentToDeparture to 〔331 Calculation Result〕

〔333〕 End If　▵294

〔334〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔CalendarRepeatItem’s Location〕

〔335〕 Set Variable TravelTimeString to 〔334 DepartureToDestination〕

〔336〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔337〕 Set Variable MatchString to 〔336 Matches〕

〔338〕 Count Items in 〔MatchString〕　»

〔339〕 If 〔338 Count〕 is 1

〔340〕 Get First Item from List 〔MatchString〕　»

〔341〕 Set Variable TravelDays to 〔340 Item from List〕

〔342〕 Otherwise

〔343〕 Number 0　»

〔344〕 Set Variable TravelDays to 〔343 Number〕

〔345〕 End If

〔346〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔347〕 Set Variable MatchString to 〔346 Matches〕

〔348〕 Count Items in 〔MatchString〕　»

〔349〕 If 〔348 Count〕 is 1

〔350〕 Get First Item from List 〔MatchString〕　»

〔351〕 Set Variable TravelHours to 〔350 Item from List〕

〔352〕 Otherwise

〔353〕 Number 0　»

〔354〕 Set Variable TravelHours to 〔353 Number〕

〔355〕 End If

〔356〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔357〕 Set Variable MatchString to 〔356 Matches〕

〔358〕 Count Items in 〔MatchString〕　»

〔359〕 If 〔358 Count〕 is 1

〔360〕 Get First Item from List 〔MatchString〕　»

〔361〕 Set Variable TravelMinutes to 〔360 Item from List〕

〔362〕 Otherwise

〔363〕 Number 0　»

〔364〕 Set Variable TravelMinutes to 〔363 Number〕

〔365〕 End If

〔366〕 Calculate 〔TravelDays〕 × 1440　» 368

〔367〕 Calculate 〔TravelHours〕 × 60　»

〔368〕 Calculate 〔367 Calculation Result〕 + 〔366 Calculation Result〕　»

〔369〕 Calculate 〔368 Calculation Result〕 + 〔TravelMinutes〕　»

〔370〕 Calculate 〔369 Calculation Result〕 + 〔CurrentToDeparture〕　»

〔371〕 Set Variable TravelTime to 〔370 Calculation Result〕

〔372〕 Otherwise　▵288

〔373〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔374〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔CalendarRepeatItem’s Location〕

〔375〕 Set Variable TravelTimeString to 〔374 Travel Time〕

〔376〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔377〕 Set Variable MatchString to 〔376 Matches〕

〔378〕 Count Items in 〔MatchString〕　»

〔379〕 If 〔378 Count〕 is 1

〔380〕 Get First Item from List 〔MatchString〕　»

〔381〕 Set Variable TravelDays to 〔380 Item from List〕

〔382〕 Otherwise

〔383〕 Number 0　»

〔384〕 Set Variable TravelDays to 〔383 Number〕

〔385〕 End If

〔386〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔387〕 Set Variable MatchString to 〔386 Matches〕

〔388〕 Count Items in 〔MatchString〕　»

〔389〕 If 〔388 Count〕 is 1

〔390〕 Get First Item from List 〔MatchString〕　»

〔391〕 Set Variable TravelHours to 〔390 Item from List〕

〔392〕 Otherwise

〔393〕 Number 0　»

〔394〕 Set Variable TravelHours to 〔393 Number〕

〔395〕 End If

〔396〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔397〕 Set Variable MatchString to 〔396 Matches〕

〔398〕 Count Items in 〔MatchString〕　»

〔399〕 If 〔398 Count〕 is 1

〔400〕 Get First Item from List 〔MatchString〕　»

〔401〕 Set Variable TravelMinutes to 〔400 Item from List〕

〔402〕 Otherwise

〔403〕 Number 0　»

〔404〕 Set Variable TravelMinutes to 〔403 Number〕

〔405〕 End If

〔406〕 Calculate 〔TravelDays〕 × 1440　» 408

〔407〕 Calculate 〔TravelHours〕 × 60　»

〔408〕 Calculate 〔407 Calculation Result〕 + 〔406 Calculation Result〕　»

〔409〕 Calculate 〔408 Calculation Result〕 + 〔TravelMinutes〕　»

〔410〕 Set Variable TravelTime to 〔409 Calculation Result〕

〔411〕 End If　▵372

〔412〕 End If　▵280

〔413〕 Otherwise　▵185

〔414〕 Number 0　»

〔415〕 Set Variable TravelTime to 〔414 Number〕

〔416〕 End If

〔417〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔418〕 Adjust Subtract Date 〔CalendarRepeatItem’s Start Date〕 　➔ Supposed Alarm Time　» 419 422 425 428 435 450 452 453 470 475 478
• Duration: 〔417 Calculation Result〕 min

〔419〕 Dictionary 　➔ Alarm Label Dictionary　» 450 455 470
{  "Event": "〔CalendarRepeatItem〕",
   "From": "〔CalendarRepeatItem’s Start Date〕",
   "To": "〔CalendarRepeatItem’s End Date〕",
   "Location": "〔CalendarRepeatItem’s Location〕",
   "AlarmTime": "〔418 Supposed Alarm Time〕"
}

〔420〕 Date Current Date 　➔ Current Date　» 421 422 452

〔421〕 Adjust Add Date 〔420 Current Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"dd MMM yyyy"}〕 　➔ 1 day after　» 435 453
• Duration: "1" days

〔422〕 If 〔418 Supposed Alarm Time〕 is 〔420 Current Date〕

〔423〕 Comment
supposed alarm time is exactly current date

〔424〕 If 〔CalendarRepeatItem’s Location〕 has any value

〔425〕 Text　»
Event 〔CalendarRepeatItem〕 from 〔CalendarRepeatItem’s Start Date〕 to 〔CalendarRepeatItem’s End Date〕 at 〔CalendarRepeatItem’s Location〕 which  was supposed to get ready at 〔418 Supposed Alarm Time〕. Please check.

〔426〕 Set Variable Text to 〔425 Text〕

〔427〕 Otherwise

〔428〕 Text　»
Event 〔CalendarRepeatItem〕 from 〔CalendarRepeatItem’s Start Date〕 to 〔CalendarRepeatItem’s End Date〕 which  was supposed to get ready at 〔418 Supposed Alarm Time〕. Please check.

〔429〕 Set Variable Text to 〔428 Text〕

〔430〕 End If

〔431〕 Show Alert 〔Text〕

〔432〕 Show Notification 〔Text〕

〔433〕 Speak Text
• Text: 〔Text〕

〔434〕 Otherwise　▵422

〔435〕 If 〔418 Supposed Alarm Time〕 is 〔421 1 day after〕

〔436〕 Find Alarm All Alarm　» 437 438

〔437〕 If 〔436 Alarms〕 has any value

〔438〕 Repeat[3] with Each in 〔436 Alarms〕

〔439〕 Set Variable AlarmRepeatItem to 〔Repeat Item 3〕

〔440〕 Get Dictionary from 〔AlarmRepeatItem’s label〕 　➔ AlarmLabelDictionary　» 441 442 443

〔441〕 Get Text from 〔440 AlarmLabelDictionary.Event〕　» 444

〔442〕 Get Dates from 〔440 AlarmLabelDictionary.From〕 　➔ FromDate　» 444

〔443〕 Get Dates from 〔440 AlarmLabelDictionary.To〕 　➔ ToDate　»

〔444〕 If All are true　〔441 Text〕 is 〔CalendarRepeatItem〕　〔442 FromDate{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕 is 〔CalendarRepeatItem’s Start Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕　〔443 ToDate{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕 is • ConditionalActionString
〔CalendarRepeatItem’s End Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕• Date
〔Repeat Item’s End Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕

〔445〕 Delete Alarms
• entities: 〔AlarmRepeatItem〕

〔446〕 End If

〔447〕 End Repeat[3] with Each　▵438

〔448〕 End If　▵437

〔449〕 Comment
since this will be triggered at 12:00 am each day, when the supposed alarm time is 12:00 am in the next day, you can set alarm now

〔450〕 Add Alarm for 〔418 Supposed Alarm Time〕 called 〔419 Alarm Label Dictionary〕

〔451〕 Otherwise　▵435

〔452〕 If 〔418 Supposed Alarm Time〕 > 〔420 Current Date〕

〔453〕 If 〔418 Supposed Alarm Time〕 > 〔421 1 day after〕

〔454〕 Comment
when the time is other than 12:00 am of then next day, you cannot set alarm yet. If set, it will be today. For example, triggering time 2025-4-8 12:00 am, the supposed alarm time is 2025-4-9 08:00 am, if you set an alarm at 08:00 at 2025-4-8 12:00 am, it will alarm at 2025-4-8 08:00 am instead. So we need to record the supposed alarm time and trigger next day.

〔455〕 Set Variable Event to 〔419 Alarm Label Dictionary〕

〔456〕 Otherwise

〔457〕 Find Alarm Library　» 458 459

〔458〕 If 〔457 Alarms〕 has any value

〔459〕 Repeat[3] with Each in 〔457 Alarms〕

〔460〕 Set Variable AlarmRepeatItem to 〔Repeat Item 3〕

〔461〕 Get Dictionary from 〔AlarmRepeatItem’s label〕 　➔ AlarmLabelDictionary　» 462 463 464

〔462〕 Get Text from 〔461 AlarmLabelDictionary.Event〕　» 465

〔463〕 Get Dates from 〔461 AlarmLabelDictionary.From〕 　➔ FromDate　» 465

〔464〕 Get Dates from 〔461 AlarmLabelDictionary.To〕 　➔ ToDate　»

〔465〕 If All are true　〔462 Text〕 is 〔CalendarRepeatItem〕　〔463 FromDate{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕 is 〔CalendarRepeatItem’s Start Date{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕　〔464 ToDate{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕 is • ConditionalActionString
〔CalendarRepeatItem’s End Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕• Date
〔Repeat Item’s End Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕

〔466〕 Delete Alarms
• entities: 〔AlarmRepeatItem〕

〔467〕 End If

〔468〕 End Repeat[3] with Each　▵459

〔469〕 End If　▵458

〔470〕 Add Alarm for 〔418 Supposed Alarm Time〕 called 〔419 Alarm Label Dictionary〕

〔471〕 End If　▵456

〔472〕 Otherwise　▵452

〔473〕 Comment
the supposed alarm time passed

〔474〕 If 〔CalendarRepeatItem’s Location〕 has any value

〔475〕 Text　»
Event 〔CalendarRepeatItem〕 from 〔CalendarRepeatItem’s Start Date〕 to 〔CalendarRepeatItem’s End Date〕 at 〔CalendarRepeatItem’s Location〕 which  was supposed to get ready at 〔418 Supposed Alarm Time〕. Please check.

〔476〕 Set Variable Text to 〔475 Text〕

〔477〕 Otherwise

〔478〕 Text　»
Event 〔CalendarRepeatItem〕 from 〔CalendarRepeatItem’s Start Date〕 to 〔CalendarRepeatItem’s End Date〕 which  was supposed to get ready at 〔418 Supposed Alarm Time〕. Please check.

〔479〕 Set Variable Text to 〔478 Text〕

〔480〕 End If

〔481〕 Show Alert 〔Text〕

〔482〕 Show Notification 〔Text〕

〔483〕 Speak Text
• Text: 〔Text〕

〔484〕 End If　▵472

〔485〕 End If　▵451

〔486〕 End If　▵434

〔487〕 If 〔Event as Dictionary〕 has any value

〔488〕 Get Dictionary from 〔Event〕　» 489 490 491 504

〔489〕 Get Text from 〔488 Dictionary.Event〕　» 504

〔490〕 Get Dates from 〔488 Dictionary.From〕　» 504

〔491〕 Get Dates from 〔488 Dictionary.To〕　» 504

〔492〕 Text　»

〔493〕 Set Variable TextList to 〔492 Text〕

〔494〕 Add 〔Event〕 to Variable TextList

〔495〕 Get File at Path 〔FutureAlarmsPath〕 from Folder　» 496 497
• FileErrorIfNotFound: false

〔496〕 If 〔495 File’s File Size〕 has any value

〔497〕 Split Text 〔495 File〕 by New Lines　»

〔498〕 Repeat[3] with Each in 〔497 Split Text〕

〔499〕 Set Variable FutureRepeatItem to 〔Repeat Item 3〕

〔500〕 Get Dictionary from 〔FutureRepeatItem〕　» 501 502 503

〔501〕 Get Text from 〔500 Dictionary.Event〕　» 504

〔502〕 Get Dates from 〔500 Dictionary.From〕　» 504

〔503〕 Get Dates from 〔500 Dictionary.To〕　»

〔504〕 If Any are true　〔501 Text〕 is not 〔489 Text〕　〔502 Dates〕 is not • ConditionalActionString
〔488 Dictionary.From〕• Date
〔490 Dates〕　〔503 Dates〕 is not • ConditionalActionString
〔488 Dictionary.To〕• Date
〔491 Dates〕

〔505〕 Add 〔FutureRepeatItem〕 to Variable TextList

〔506〕 End If

〔507〕 End Repeat[3] with Each　▵498

〔508〕 Combine Text 〔TextList〕 with New Lines　»

〔509〕 Save File 〔508 Combined Text〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔FutureAlarmsPath〕

〔510〕 Otherwise　▵496

〔511〕 Text　»

〔Event〕

〔512〕 Save File 〔511 Text〕
• AskWhereToSave: false
• FileDestinationPath: 〔FutureAlarmsPath〕

〔513〕 End If

〔514〕 End If　▵487

〔515〕 End Repeat[2] with Each　▵183

〔516〕 If 〔GranularityRepeatItem〕 < 1440

〔517〕 Number 3　»

〔518〕 Repeat[2] 〔517 Number〕 Times

〔519〕 Repeat[3] with Each in 〔180 If Result〕

〔520〕 Format Date 〔Repeat Item 3’s Start Date〕　» 524 527 532 535
• DateFormatStyle: None

〔521〕 Format Date 〔Repeat Item 3’s End Date〕　» 524 527 532 535
• DateFormatStyle: None

〔522〕 If 〔Repeat Item 3’s Location〕 has any value

〔523〕 If 〔182 Count〕 > 1

〔524〕 Text　»
Event 〔Repeat Index 3〕 〔Repeat Item 3〕 from 〔520 Formatted Date〕 to 〔521 Formatted Date〕 at 〔Repeat Item 3’s Location〕\u{space}

〔525〕 Set Variable Text to 〔524 Text〕

〔526〕 Otherwise

〔527〕 Text　»
Event 〔Repeat Item 3〕 from 〔520 Formatted Date〕 to 〔521 Formatted Date〕 at 〔Repeat Item 3’s Location〕\u{space}

〔528〕 Set Variable Text to 〔527 Text〕

〔529〕 End If

〔530〕 Otherwise　▵522

〔531〕 If 〔182 Count〕 > 1

〔532〕 Text　»
Event 〔Repeat Index 3〕 〔Repeat Item 3〕 from 〔520 Formatted Date〕 to 〔521 Formatted Date〕

〔533〕 Set Variable Text to 〔532 Text〕

〔534〕 Otherwise

〔535〕 Text　»
Event 〔Repeat Item 3〕 from 〔520 Formatted Date〕 to 〔521 Formatted Date〕

〔536〕 Set Variable Text to 〔535 Text〕

〔537〕 End If

〔538〕 End If　▵530

〔539〕 Speak Text
• Text: 〔Text〕

〔540〕 Wait 1 seconds

〔541〕 End Repeat[3] with Each　▵519

〔542〕 End Repeat[2] Times　▵518

〔543〕 End If　▵516

〔544〕 End If　▵181

〔545〕 End Repeat with Each　▵146

〔546〕 Get File at Path 〔FutureAlarmsPath〕 from Folder　» 547 548
• FileErrorIfNotFound: false

〔547〕 If 〔546 File’s File Size〕 has any value

〔548〕 Split Text 〔546 File〕 by New Lines　»

〔549〕 Repeat with Each in 〔548 Split Text〕

〔550〕 Get Dictionary from 〔Repeat Item〕　» 551 552 553 554 555 568 571

〔551〕 Get Text from 〔550 Dictionary.Event〕　» 563

〔552〕 Get Dates from 〔550 Dictionary.From〕　» 564

〔553〕 Get Dates from 〔550 Dictionary.To〕　» 564

〔554〕 If 〔550 Dictionary〕 has any value

〔555〕 Get Dates from 〔550 Dictionary.AlarmTime〕　» 556 568 571

〔556〕 If 〔555 Dates〕 is today

〔557〕 Find Alarm All Alarm　» 558 559
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFActionParameterFilterTemplates": [],
      "WFContentPredicateBoundedDate": false
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔558〕 If 〔557 Alarms〕 has any value

〔559〕 Repeat[2] with Each in 〔557 Alarms〕

〔560〕 Get Dictionary from 〔Repeat Item 2’s label〕 　➔ Alarm_Label_Dictionary　» 561 562 563

〔561〕 Get Dates from 〔560 Alarm_Label_Dictionary.From〕 　➔ From_Date　» 564

〔562〕 Get Dates from 〔560 Alarm_Label_Dictionary.To〕 　➔ To_Date　» 564

〔563〕 If 〔551 Text〕 is 〔560 Alarm_Label_Dictionary.Event〕

〔564〕 If Any are true　〔552 Dates〕 is 〔561 From_Date〕　〔553 Dates〕 is 〔562 To_Date〕

〔565〕 Nothing

〔566〕 Otherwise

〔567〕 Delete Alarms
• entities: 〔Repeat Item 2〕

〔568〕 Add Alarm for 〔555 Dates〕 called 〔550 Dictionary〕

〔569〕 End If

〔570〕 Otherwise　▵563

〔571〕 Add Alarm for 〔555 Dates〕 called 〔550 Dictionary〕

〔572〕 End If

〔573〕 End Repeat[2] with Each　▵559

〔574〕 End If　▵558

〔575〕 End If　▵556

〔576〕 End If　▵554

〔577〕 End Repeat with Each　▵549

〔578〕 End If　▵547

〔579〕 End If　▵121

〔580〕 If 〔Shortcut Input as Number〕 is 3

〔581〕 Comment
Alarm Activation Handler
Triggered by alarm events - manages notification flow

〔582〕 Dictionary　»
{  "stop": "no" }

〔583〕 Text　»
〔582 Dictionary〕

〔584〕 Save File 〔583 Text〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔StopFlagPath〕

〔585〕 Date Current Date　» 601

〔586〕 Find Alarm All Alarm　» 587 596
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔587〕 If 〔586 Alarms〕 has any value

〔588〕 Number 10000　»

〔589〕 Repeat 〔588 Number〕 Times

〔590〕 Get File at Path 〔StopFlagPath〕 from Folder　»
• FileErrorIfNotFound: false

〔591〕 Get Dictionary from 〔590 File〕　»

〔592〕 Get Text from 〔591 Dictionary.stop〕　»

〔593〕 If 〔592 Text〕 is yes

〔594〕 Stop This Shortcut

〔595〕 End If

〔596〕 Repeat[2] with Each in 〔586 Alarms〕

〔597〕 Get Dictionary from 〔Repeat Item 2’s label〕 　➔ alarm_label_dictionary　» 598 599 600 604 607 610

〔598〕 Get Dates from 〔597 alarm_label_dictionary.From〕 　➔ From　» 602

〔599〕 Get Dates from 〔597 alarm_label_dictionary.To〕 　➔ To　» 603

〔600〕 Get Dates from 〔597 alarm_label_dictionary.AlarmTime〕 　➔ AlarmTime　»

〔601〕 If All are true　〔600 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕 is 〔585 Date{"Date Style":"Custom","WFDateFormat":"HH","WFISO8601IncludeTime":false}〕　〔600 AlarmTime{"Date Style":"Custom","WFDateFormat":"mm","WFISO8601IncludeTime":false}〕 is 〔585 Date{"Date Style":"Custom","WFDateFormat":"mm","WFISO8601IncludeTime":false}〕

〔602〕 Format Date 〔598 From’s Time〕　» 607 610
• DateFormatStyle: None

〔603〕 Format Date 〔599 To’s Time〕　» 607 610
• DateFormatStyle: None

〔604〕 Text　»
〔597 alarm_label_dictionary.Location〕

〔605〕 Count Characters in 〔604 Text〕　»

〔606〕 If 〔605 Count〕 > • ConditionalActionString
""• NumberValue
0

〔607〕 Text　»
Prepare for 〔597 alarm_label_dictionary.Event〕 from 〔602 Formatted Date〕 to 〔603 Formatted Date〕 at 〔597 alarm_label_dictionary.Location〕

〔608〕 Set Variable Text to 〔607 Text〕

〔609〕 Otherwise

〔610〕 Text　»
Prepare for 〔597 alarm_label_dictionary.Event〕 from 〔602 Formatted Date〕 to 〔603 Formatted Date〕

〔611〕 Set Variable Text to 〔610 Text〕

〔612〕 End If

〔613〕 Speak Text
• Text: 〔Text〕

〔614〕 End If　▵601

〔615〕 End Repeat[2] with Each　▵596

〔616〕 End Repeat Times　▵589

〔617〕 End If　▵587

〔618〕 End If　▵580

〔619〕 If 〔Shortcut Input as Number〕 is 4

〔620〕 Comment
input case 4:
Notification Interrupt System
Stop protocol for voice announcements when any alarm is stopped.

〔621〕 Dictionary　»
{  "stop": "yes" }

〔622〕 Text　»
〔621 Dictionary〕

〔623〕 Save File 〔622 Text〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔StopFlagPath〕

〔624〕 End If

〔625〕 End If　▵120