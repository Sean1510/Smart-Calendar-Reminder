Smart Calendar Reminder V4 (594 actions, 245 KB)
"WFQuickActionSurfaces": [],
"WFWorkflowClientVersion": "3303.0.5",
"WFWorkflowHasOutputFallback": false,
"WFWorkflowHasShortcutInputVariables": true,
"WFWorkflowIcon": {
   "WFWorkflowIconStartColor": 431817727,
   "WFWorkflowIconGlyphNumber": 61701
},
"WFWorkflowImportQuestions": [],
"WFWorkflowInputContentItemClasses": [],
"WFWorkflowMinimumClientVersion": 3010,
"WFWorkflowMinimumClientVersionString": "3010",
"WFWorkflowOutputContentItemClasses": [],
"WFWorkflowTypes": []


〔0〕 Text　»
Smart Calendar Reminder 1

〔1〕 Set Variable Folder to 〔0 Text〕

〔2〕 Text　»
〔Folder〕/Skip.txt

〔3〕 Set Variable SkipSubPath to 〔2 Text〕

〔4〕 Text　»
〔Folder〕/Welcome.pdf

〔5〕 Set Variable WelcomeSubPath to 〔4 Text〕

〔6〕 Text　»
〔Folder〕/aboutme.txt

〔7〕 Set Variable AboutMeSubPath to 〔6 Text〕

〔8〕 Text　»
〔Folder〕/Future Alarms.txt

〔9〕 Set Variable FutureAlarmsSubPath to 〔8 Text〕

〔10〕 Text　»
〔Folder〕/stopflag.txt

〔11〕 Set Variable StopFlagSubPath to 〔10 Text〕

〔12〕 If 〔Shortcut Input〕 does not have any value

〔13〕 Comment
Initial setup and version update check when no input is provided

〔14〕 Comment
Inspired by [Schedule Shortcut or Alarm] but designed to work smarter for my needs! Instead of manually inputting each trigger or alarm, this shortcut leverages my Calendar as the ultimate data source. It automatically scans for upcoming events, then:

• Speaks out the event details
• Sets a tailored alarm—accounting for travel and prep time—right when you need it

No more early, forgettable reminders. It keeps your schedule perfectly in sync. Give it a try and let your Calendar do the heavy lifting!

〔15〕 Dictionary 　➔ Version Dictionary 　» 16 19 21 22 23 24 33
{  "Name": "Smart Calendar Reminder",
   "Version": "3.2",
   "RH ID": "21959",
   "Icons": {
      "Update": "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",
      "Skip": "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",
      "Not Now": "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"
   }
}

〔16〕 Get Contents of URL https://routinehub.co/api/v1/shortcuts/〔15 Version Dictionary .RH ID〕/versions/latest 　➔ RH Server　» 18 20 23 28 32
• ShowHeaders: false

〔17〕 Get File at Path 〔SkipSubPath〕 from Folder　»
• File: {  "fileLocation": {
      "crossDeviceItemID": "docs.icloud.com:com.apple.CloudDocs/documents/95d6214c39557e3de40d802073a860c04f3aed5b",
      "fileProviderDomainID": "com.apple.CloudDocs.iCloudDriveFileProvider/38059A1C-DC76-4B89-B62F-250A61DBFC73",
      "appContainerBundleIdentifier": "com.apple.shortcuts",
      "relativeSubpath": "",
      "WFFileLocationType": "Shortcuts"
   },
   "filename": "Documents",
   "displayName": "Shortcuts"
}
• FileErrorIfNotFound: false
• ShowFilePicker: false
• GetFolderContents: true

〔18〕 If 〔17 File as Text〕 is not 〔16 RH Server as Dictionary.Version〕

〔19〕 Get Dictionary Value for Version in 〔15 Version Dictionary 〕　»

〔20〕 If 〔19 Dictionary Value as Text〕 is not 〔16 RH Server as Dictionary.Version〕

〔21〕 Base64 Decode 〔15 Version Dictionary .Icons.Update〕

〔22〕 Show Alert A new version of 〔15 Version Dictionary .Name〕 is available to download!

〔23〕 Text　» 26
⬆️ Update ⬆️

A new version of 〔15 Version Dictionary .Name〕 is available to download!

〔15 Version Dictionary .Version〕 ↗ 〔16 RH Server as Dictionary.Version〕   —   〔16 RH Server as Dictionary.Release〕

〔16 RH Server as Dictionary.Notes〕

〔24〕 Text　»
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Update;;;;
PHOTO;ENCODING=b:〔15 Version Dictionary .Icons.Update〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Skip;;;;
PHOTO;ENCODING=b:〔15 Version Dictionary .Icons.Skip〕
END:VCARD

BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:Not Now;;;;
PHOTO;ENCODING=b:〔15 Version Dictionary .Icons.Not Now〕
END:VCARD

〔25〕 Set Name of 〔24 Text〕 to updateprompt.vcf　»

〔26〕 Choose from List 〔25 Renamed Item as Contact〕　» 27 31
• ChooseFromListActionPrompt: 〔23 Text〕

〔27〕 If 〔26 Chosen Item as Text〕 is Update

〔28〕 Open URL 〔16 RH Server as Dictionary.URL〕
• Show-WFInput: true

〔29〕 Stop This Shortcut

〔30〕 End If

〔31〕 If 〔26 Chosen Item as Text〕 is Skip

〔32〕 Save File 〔16 RH Server as Dictionary.Version〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔SkipSubPath〕

〔33〕 Show Alert This version of 〔15 Version Dictionary .Name〕 has been skipped!
• AlertActionTitle: ✅ Done ✅
• AlertActionCancelButtonShown: false

〔34〕 End If

〔35〕 End If　▵20

〔36〕 End If　▵18

〔37〕 Get File at Path 〔WelcomeSubPath〕 from Folder　»
• FileErrorIfNotFound: false

〔38〕 If 〔37 File’s File Size〕 does not have any value

〔39〕 Text　»
<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>Smart Calendar Reminder: Your Intelligent Schedule Assistant</title><style>
    /* cspell:disable-file */
    /* webkit printing magic: print all background colors */
    html {
        -webkit-print-color-adjust: exact;
    }
    * {
        box-sizing: border-box;
        -webkit-print-color-adjust: exact;
    }
\u{space}\u{space}\u{space}\u{space}
    html,
    body {
        margin: 0;
        padding: 0;
    }
    @media only screen {
        body {
            margin: 2em auto;
            max-width: 900px;
            color: rgb(55, 53, 47);
        }
    }
\u{space}\u{space}\u{space}\u{space}
    body {
        line-height: 1.5;
        white-space: pre-wrap;
    }
\u{space}\u{space}\u{space}\u{space}
    a,
    a.visited {
        color: inherit;
        text-decoration: underline;
    }
\u{space}\u{space}\u{space}\u{space}
    .pdf-relative-link-path {
        font-size: 80%;
        color: #444;
    }
\u{space}\u{space}\u{space}\u{space}
    h1,
    h2,
    h3 {
        letter-spacing: -0.01em;
        line-height: 1.2;
        font-weight: 600;
        margin-bottom: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-top: 0;
        margin-bottom: 0.75em;
    }
\u{space}\u{space}\u{space}\u{space}
    h1 {
        font-size: 1.875rem;
        margin-top: 1.875rem;
    }
\u{space}\u{space}\u{space}\u{space}
    h2 {
        font-size: 1.5rem;
        margin-top: 1.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    h3 {
        font-size: 1.25rem;
        margin-top: 1.25rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .source {
        border: 1px solid #ddd;
        border-radius: 3px;
        padding: 1.5em;
        word-break: break-all;
    }
\u{space}\u{space}\u{space}\u{space}
    .callout {
        border-radius: 3px;
        padding: 1rem;
    }
\u{space}\u{space}\u{space}\u{space}
    figure {
        margin: 1.25em 0;
        page-break-inside: avoid;
    }
\u{space}\u{space}\u{space}\u{space}
    figcaption {
        opacity: 0.5;
        font-size: 85%;
        margin-top: 0.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    mark {
        background-color: transparent;
    }
\u{space}\u{space}\u{space}\u{space}
    .indented {
        padding-left: 1.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    hr {
        background: transparent;
        display: block;
        width: 100%;
        height: 1px;
        visibility: visible;
        border: none;
        border-bottom: 1px solid rgba(55, 53, 47, 0.09);
    }
\u{space}\u{space}\u{space}\u{space}
    img {
        max-width: 100%;
    }
\u{space}\u{space}\u{space}\u{space}
    @media only print {
        img {
            max-height: 100vh;
            object-fit: contain;
        }
    }
\u{space}\u{space}\u{space}\u{space}
    @page {
        margin: 1in;
    }
\u{space}\u{space}\u{space}\u{space}
    .collection-content {
        font-size: 0.875rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .column-list {
        display: flex;
        justify-content: space-between;
    }
\u{space}\u{space}\u{space}\u{space}
    .column {
        padding: 0 1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .column:first-child {
        padding-left: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    .column:last-child {
        padding-right: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-item {
        display: block;
        font-size: 0.875rem;
        line-height: 1.3;
        padding: 0.125rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-indent-1 {
        margin-left: 1.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-indent-2 {
        margin-left: 3rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-indent-3 {
        margin-left: 4.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .table_of_contents-link {
        text-decoration: none;
        opacity: 0.7;
        border-bottom: 1px solid rgba(55, 53, 47, 0.18);
    }
\u{space}\u{space}\u{space}\u{space}
    table,
    th,
    td {
        border: 1px solid rgba(55, 53, 47, 0.09);
        border-collapse: collapse;
    }
\u{space}\u{space}\u{space}\u{space}
    table {
        border-left: none;
        border-right: none;
    }
\u{space}\u{space}\u{space}\u{space}
    th,
    td {
        font-weight: normal;
        padding: 0.25em 0.5em;
        line-height: 1.5;
        min-height: 1.5em;
        text-align: left;
    }
\u{space}\u{space}\u{space}\u{space}
    th {
        color: rgba(55, 53, 47, 0.6);
    }
\u{space}\u{space}\u{space}\u{space}
    ol,
    ul {
        margin: 0;
        margin-block-start: 0.6em;
        margin-block-end: 0.6em;
    }
\u{space}\u{space}\u{space}\u{space}
    li > ol:first-child,
    li > ul:first-child {
        margin-block-start: 0.6em;
    }
\u{space}\u{space}\u{space}\u{space}
    ul > li {
        list-style: disc;
    }
\u{space}\u{space}\u{space}\u{space}
    ul.to-do-list {
        padding-inline-start: 0;
    }
\u{space}\u{space}\u{space}\u{space}
    ul.to-do-list > li {
        list-style: none;
    }
\u{space}\u{space}\u{space}\u{space}
    .to-do-children-checked {
        text-decoration: line-through;
        opacity: 0.375;
    }
\u{space}\u{space}\u{space}\u{space}
    ul.toggle > li {
        list-style: none;
    }
\u{space}\u{space}\u{space}\u{space}
    ul {
        padding-inline-start: 1.7em;
    }
\u{space}\u{space}\u{space}\u{space}
    ul > li {
        padding-left: 0.1em;
    }
\u{space}\u{space}\u{space}\u{space}
    ol {
        padding-inline-start: 1.6em;
    }
\u{space}\u{space}\u{space}\u{space}
    ol > li {
        padding-left: 0.2em;
    }
\u{space}\u{space}\u{space}\u{space}
    .mono ol {
        padding-inline-start: 2em;
    }
\u{space}\u{space}\u{space}\u{space}
    .mono ol > li {
        text-indent: -0.4em;
    }
\u{space}\u{space}\u{space}\u{space}
    .toggle {
        padding-inline-start: 0em;
        list-style-type: none;
    }
\u{space}\u{space}\u{space}\u{space}
    /* Indent toggle children */
    .toggle > li > details {
        padding-left: 1.7em;
    }
\u{space}\u{space}\u{space}\u{space}
    .toggle > li > details > summary {
        margin-left: -1.1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .selected-value {
        display: inline-block;
        padding: 0 0.5em;
        background: rgba(206, 205, 202, 0.5);
        border-radius: 3px;
        margin-right: 0.5em;
        margin-top: 0.3em;
        margin-bottom: 0.3em;
        white-space: nowrap;
    }
\u{space}\u{space}\u{space}\u{space}
    .collection-title {
        display: inline-block;
        margin-right: 1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-description {
        margin-bottom: 2em;
    }
\u{space}\u{space}\u{space}\u{space}
    .simple-table {
        margin-top: 1em;
        font-size: 0.875rem;
        empty-cells: show;
    }
    .simple-table td {
        height: 29px;
        min-width: 120px;
    }
\u{space}\u{space}\u{space}\u{space}
    .simple-table th {
        height: 29px;
        min-width: 120px;
    }
\u{space}\u{space}\u{space}\u{space}
    .simple-table-header-color {
        background: rgb(247, 246, 243);
        color: black;
    }
    .simple-table-header {
        font-weight: 500;
    }
\u{space}\u{space}\u{space}\u{space}
    time {
        opacity: 0.5;
    }
\u{space}\u{space}\u{space}\u{space}
    .icon {
        display: inline-block;
        max-width: 1.2em;
        max-height: 1.2em;
        text-decoration: none;
        vertical-align: text-bottom;
        margin-right: 0.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    img.icon {
        border-radius: 3px;
    }
\u{space}\u{space}\u{space}\u{space}
    .user-icon {
        width: 1.5em;
        height: 1.5em;
        border-radius: 100%;
        margin-right: 0.5rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .user-icon-inner {
        font-size: 0.8em;
    }
\u{space}\u{space}\u{space}\u{space}
    .text-icon {
        border: 1px solid #000;
        text-align: center;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-cover-image {
        display: block;
        object-fit: cover;
        width: 100%;
        max-height: 30vh;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-header-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-header-icon-with-cover {
        margin-top: -0.72em;
        margin-left: 0.07em;
    }
\u{space}\u{space}\u{space}\u{space}
    .page-header-icon img {
        border-radius: 3px;
    }
\u{space}\u{space}\u{space}\u{space}
    .link-to-page {
        margin: 1em 0;
        padding: 0;
        border: none;
        font-weight: 500;
    }
\u{space}\u{space}\u{space}\u{space}
    p > .user {
        opacity: 0.5;
    }
\u{space}\u{space}\u{space}\u{space}
    td > .user,
    td > time {
        white-space: nowrap;
    }
\u{space}\u{space}\u{space}\u{space}
    input[type="checkbox"] {
        transform: scale(1.5);
        margin-right: 0.6em;
        vertical-align: middle;
    }
\u{space}\u{space}\u{space}\u{space}
    p {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }
\u{space}\u{space}\u{space}\u{space}
    .image {
        border: none;
        margin: 1.5em 0;
        padding: 0;
        border-radius: 0;
        text-align: center;
    }
\u{space}\u{space}\u{space}\u{space}
    .code,
    code {
        background: rgba(135, 131, 120, 0.15);
        border-radius: 3px;
        padding: 0.2em 0.4em;
        border-radius: 3px;
        font-size: 85%;
        tab-size: 2;
    }
\u{space}\u{space}\u{space}\u{space}
    code {
        color: #eb5757;
    }
\u{space}\u{space}\u{space}\u{space}
    .code {
        padding: 1.5em 1em;
    }
\u{space}\u{space}\u{space}\u{space}
    .code-wrap {
        white-space: pre-wrap;
        word-break: break-all;
    }
\u{space}\u{space}\u{space}\u{space}
    .code > code {
        background: none;
        padding: 0;
        font-size: 100%;
        color: inherit;
    }
\u{space}\u{space}\u{space}\u{space}
    blockquote {
        font-size: 1.25em;
        margin: 1em 0;
        padding-left: 1em;
        border-left: 3px solid rgb(55, 53, 47);
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark {
        text-decoration: none;
        max-height: 8em;
        padding: 0;
        display: flex;
        width: 100%;
        align-items: stretch;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-title {
        font-size: 0.85em;
        overflow: hidden;
        text-overflow: ellipsis;
        height: 1.75em;
        white-space: nowrap;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-text {
        display: flex;
        flex-direction: column;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-info {
        flex: 4 1 180px;
        padding: 12px 14px 14px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-image {
        width: 33%;
        flex: 1 1 180px;
        display: block;
        position: relative;
        object-fit: cover;
        border-radius: 1px;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-description {
        color: rgba(55, 53, 47, 0.6);
        font-size: 0.75em;
        overflow: hidden;
        max-height: 4.5em;
        word-break: break-word;
    }
\u{space}\u{space}\u{space}\u{space}
    .bookmark-href {
        font-size: 0.75em;
        margin-top: 0.25em;
    }
\u{space}\u{space}\u{space}\u{space}
    .sans { font-family: ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol"; }
    .code { font-family: "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace; }
    .serif { font-family: Lyon-Text, Georgia, ui-serif, serif; }
    .mono { font-family: iawriter-mono, Nitti, Menlo, Courier, monospace; }
    .pdf .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK JP'; }
    .pdf:lang(zh-CN) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK SC'; }
    .pdf:lang(zh-TW) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK TC'; }
    .pdf:lang(ko-KR) .sans { font-family: Inter, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI Variable Display", "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol", 'Twemoji', 'Noto Color Emoji', 'Noto Sans CJK KR'; }
    .pdf .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK JP'; }
    .pdf:lang(zh-CN) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC'; }
    .pdf:lang(zh-TW) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK TC'; }
    .pdf:lang(ko-KR) .code { font-family: Source Code Pro, "SFMono-Regular", Menlo, Consolas, "PT Mono", "Liberation Mono", Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK KR'; }
    .pdf .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK JP'; }
    .pdf:lang(zh-CN) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK SC'; }
    .pdf:lang(zh-TW) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK TC'; }
    .pdf:lang(ko-KR) .serif { font-family: PT Serif, Lyon-Text, Georgia, ui-serif, serif, 'Twemoji', 'Noto Color Emoji', 'Noto Serif CJK KR'; }
    .pdf .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK JP'; }
    .pdf:lang(zh-CN) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK SC'; }
    .pdf:lang(zh-TW) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK TC'; }
    .pdf:lang(ko-KR) .mono { font-family: PT Mono, iawriter-mono, Nitti, Menlo, Courier, monospace, 'Twemoji', 'Noto Color Emoji', 'Noto Sans Mono CJK KR'; }
    .highlight-default {
        color: rgba(55, 53, 47, 1);
    }
    .highlight-gray {
        color: rgba(120, 119, 116, 1);
        fill: rgba(120, 119, 116, 1);
    }
    .highlight-brown {
        color: rgba(159, 107, 83, 1);
        fill: rgba(159, 107, 83, 1);
    }
    .highlight-orange {
        color: rgba(217, 115, 13, 1);
        fill: rgba(217, 115, 13, 1);
    }
    .highlight-yellow {
        color: rgba(203, 145, 47, 1);
        fill: rgba(203, 145, 47, 1);
    }
    .highlight-teal {
        color: rgba(68, 131, 97, 1);
        fill: rgba(68, 131, 97, 1);
    }
    .highlight-blue {
        color: rgba(51, 126, 169, 1);
        fill: rgba(51, 126, 169, 1);
    }
    .highlight-purple {
        color: rgba(144, 101, 176, 1);
        fill: rgba(144, 101, 176, 1);
    }
    .highlight-pink {
        color: rgba(193, 76, 138, 1);
        fill: rgba(193, 76, 138, 1);
    }
    .highlight-red {
        color: rgba(212, 76, 71, 1);
        fill: rgba(212, 76, 71, 1);
    }
    .highlight-default_background {
        color: rgba(55, 53, 47, 1);
    }
    .highlight-gray_background {
        background: rgba(248, 248, 247, 1);
    }
    .highlight-brown_background {
        background: rgba(244, 238, 238, 1);
    }
    .highlight-orange_background {
        background: rgba(251, 236, 221, 1);
    }
    .highlight-yellow_background {
        background: rgba(251, 243, 219, 1);
    }
    .highlight-teal_background {
        background: rgba(237, 243, 236, 1);
    }
    .highlight-blue_background {
        background: rgba(231, 243, 248, 1);
    }
    .highlight-purple_background {
        background: rgba(248, 243, 252, 1);
    }
    .highlight-pink_background {
        background: rgba(252, 241, 246, 1);
    }
    .highlight-red_background {
        background: rgba(253, 235, 236, 1);
    }
    .block-color-default {
        color: inherit;
        fill: inherit;
    }
    .block-color-gray {
        color: rgba(120, 119, 116, 1);
        fill: rgba(120, 119, 116, 1);
    }
    .block-color-brown {
        color: rgba(159, 107, 83, 1);
        fill: rgba(159, 107, 83, 1);
    }
    .block-color-orange {
        color: rgba(217, 115, 13, 1);
        fill: rgba(217, 115, 13, 1);
    }
    .block-color-yellow {
        color: rgba(203, 145, 47, 1);
        fill: rgba(203, 145, 47, 1);
    }
    .block-color-teal {
        color: rgba(68, 131, 97, 1);
        fill: rgba(68, 131, 97, 1);
    }
    .block-color-blue {
        color: rgba(51, 126, 169, 1);
        fill: rgba(51, 126, 169, 1);
    }
    .block-color-purple {
        color: rgba(144, 101, 176, 1);
        fill: rgba(144, 101, 176, 1);
    }
    .block-color-pink {
        color: rgba(193, 76, 138, 1);
        fill: rgba(193, 76, 138, 1);
    }
    .block-color-red {
        color: rgba(212, 76, 71, 1);
        fill: rgba(212, 76, 71, 1);
    }
    .block-color-default_background {
        color: inherit;
        fill: inherit;
    }
    .block-color-gray_background {
        background: rgba(248, 248, 247, 1);
    }
    .block-color-brown_background {
        background: rgba(244, 238, 238, 1);
    }
    .block-color-orange_background {
        background: rgba(251, 236, 221, 1);
    }
    .block-color-yellow_background {
        background: rgba(251, 243, 219, 1);
    }
    .block-color-teal_background {
        background: rgba(237, 243, 236, 1);
    }
    .block-color-blue_background {
        background: rgba(231, 243, 248, 1);
    }
    .block-color-purple_background {
        background: rgba(248, 243, 252, 1);
    }
    .block-color-pink_background {
        background: rgba(252, 241, 246, 1);
    }
    .block-color-red_background {
        background: rgba(253, 235, 236, 1);
    }
    .select-value-color-uiBlue { background-color: undefined; }
    .select-value-color-pink { background-color: rgba(225, 136, 179, 0.27); }
    .select-value-color-purple { background-color: rgba(168, 129, 197, 0.27); }
    .select-value-color-green { background-color: rgba(123, 183, 129, 0.27); }
    .select-value-color-gray { background-color: rgba(84, 72, 49, 0.15); }
    .select-value-color-transparentGray { background-color: undefined; }
    .select-value-color-translucentGray { background-color: undefined; }
    .select-value-color-orange { background-color: rgba(224, 124, 57, 0.27); }
    .select-value-color-brown { background-color: rgba(210, 162, 141, 0.35); }
    .select-value-color-red { background-color: rgba(244, 171, 159, 0.4); }
    .select-value-color-yellow { background-color: rgba(236, 191, 66, 0.39); }
    .select-value-color-blue { background-color: rgba(93, 165, 206, 0.27); }
    .select-value-color-pageGlass { background-color: undefined; }
    .select-value-color-washGlass { background-color: undefined; }
\u{space}\u{space}\u{space}\u{space}
    .checkbox {
        display: inline-flex;
        vertical-align: text-bottom;
        width: 16;
        height: 16;
        background-size: 16px;
        margin-left: 2px;
        margin-right: 5px;
    }
\u{space}\u{space}\u{space}\u{space}
    .checkbox-on {
        background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22%2358A9D7%22%2F%3E%0A%3Cpath%20d%3D%22M6.71429%2012.2852L14%204.9995L12.7143%203.71436L6.71429%209.71378L3.28571%206.2831L2%207.57092L6.71429%2012.2852Z%22%20fill%3D%22white%22%2F%3E%0A%3C%2Fsvg%3E");
    }
\u{space}\u{space}\u{space}\u{space}
    .checkbox-off {
        background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%220.75%22%20y%3D%220.75%22%20width%3D%2214.5%22%20height%3D%2214.5%22%20fill%3D%22white%22%20stroke%3D%22%2336352F%22%20stroke-width%3D%221.5%22%2F%3E%0A%3C%2Fsvg%3E");
    }
\u{space}\u{space}\u{space}\u{space}\u{space}\u{space}\u{space}\u{space}
    </style></head><body><article id="1d1604ef-9b4b-8020-9a43-e475a43661a0" class="page sans"><header><h1 class="page-title">Smart Calendar Reminder: Your Intelligent Schedule Assistant</h1><p class="page-description"></p></header><div class="page-body"><figure class="block-color-blue_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-80b2-927b-ddb2d55d6032"><div style="width:100%">👋 Welcome to Smart Calendar Reminder! This welcome message appears only during your first use.</div></figure><h1 id="1d1604ef-9b4b-80c5-a289-d2aedc69317d" class="block-color-yellow_background">Transform Your Calendar Experience</h1><p id="1d1604ef-9b4b-80f7-ac48-d98bc2a805e6" class="">While iOS Calendar is fantastic for basic scheduling, we all know those built-in reminders can be easy to miss. Adding manual alarms, calculating travel times, and customizing notifications with event details can become tedious and time-consuming. That&#x27;s where Smart Calendar Reminder comes in - your automated solution for intelligent schedule management!</p><h2 id="1d1604ef-9b4b-800f-9752-cb68ca87b1cf" class="">Powerful Features at Your Fingertips</h2><ul id="0ecdba52-af59-410f-9efb-321f8e2d4ba6" class="bulleted-list"><li style="list-style-type:disc">Seamless Calendar Integration - No manual input needed</li></ul><ul id="1d1604ef-9b4b-80b9-8d0d-fe7b3c28115b" class="bulleted-list"><li style="list-style-type:disc">Intelligent Travel Time Calculations powered by Apple Maps</li></ul><ul id="4f6b7aca-7c92-458d-9996-e8f891a3775d" class="bulleted-list"><li style="list-style-type:disc">Spoken Event Details - Hear your schedule clearly</li></ul><ul id="1d1604ef-9b4b-80f5-9fe9-ee50fd3e7795" class="bulleted-list"><li style="list-style-type:disc">Smart Preparation Time Management</li></ul><h2 id="fa2195d7-f08f-4058-a00a-18e2b562b5b2" class="">Smart Location Intelligence</h2><p id="1d1604ef-9b4b-80d3-9799-dd97b27a3773" class="">Our advanced travel time calculation system uses three methods to determine your departure location, in order of priority:</p><ol type="1" id="667c5bbb-f94c-480b-bccd-c84948a3c40f" class="numbered-list" start="1"><li>Custom Departure Address - Add this JSON format in your calendar event notes for specific departure points:<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js" integrity="sha512-7Z9J3l1+EYfeaPKcGXu3MS/7T+w19WtKQY/n+xzmw4hZhJ9tyYmcUS+4QqAlzhicE5LAfMQSF3iFTK9bQdTxXg==" crossorigin="anonymous" referrerPolicy="no-referrer"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" integrity="sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==" crossorigin="anonymous" referrerPolicy="no-referrer"/><pre id="1d1604ef-9b4b-80d1-9d4b-dfb42d06c7b8" class="code"><code class="language-JSON">{
        &quot;Street&quot;: &quot;your departure street&quot;,
        &quot;City&quot;: &quot;your departure city&quot;,
        &quot;State&quot;: &quot;your departure state&quot;,
        &quot;Country&quot;: &quot;your departure country&quot;,
        &quot;Postcode&quot;: &quot;your departure postcode&quot;
    }</code></pre></li></ol><ol type="1" id="1d1604ef-9b4b-80c6-b468-d002dd94b75d" class="numbered-list" start="2"><li>Home Address - Uses your pre-configured home address - perfect for regular schedules</li></ol><ol type="1" id="aba3d861-a84a-48f6-a163-ac441f18b1b3" class="numbered-list" start="3"><li>Current Location - Automatically uses your current position as a fallback</li></ol><figure class="block-color-yellow_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-80ed-a48d-f0cad158ed60"><div style="width:100%">Smart Travel Planning: The system automatically calculates additional travel time if you&#x27;re not at your departure location!</div></figure><h2 id="efb3fa4e-d05f-4bd3-bd94-b9b991e29ce4" class="">Voice Announcements</h2><ul id="1d1604ef-9b4b-8076-9c50-fcefa4c4903c" class="bulleted-list"><li style="list-style-type:disc">Hourly Schedule Updates: Hear upcoming events at the start of each hour</li></ul><ul id="a0eb2cf6-1637-4d13-94c8-356fd19cd78a" class="bulleted-list"><li style="list-style-type:disc">Smart Reminders: Get spoken alerts at perfectly timed intervals</li></ul><h2 id="1d1604ef-9b4b-80dd-9df1-d8fae003cae6" class="">Intelligent Automation System</h2><p id="15ce45ed-b4fa-4b81-bbd0-2fa585b5c7ce" class="">Our sophisticated automation system ensures you never miss an important event:</p><ul id="1d1604ef-9b4b-80c5-a181-f10518e7e73d" class="bulleted-list"><li style="list-style-type:disc">Daily Planning: 12:00 AM check of your next 24 hours</li></ul><ul id="f54bf941-4703-4cc3-9f61-408f1eed72ee" class="bulleted-list"><li style="list-style-type:disc">Real-time Updates: Hourly recalculation of travel times</li></ul><ul id="1d1604ef-9b4b-800d-b8f8-e85831f4b0ee" class="bulleted-list"><li style="list-style-type:disc">Dynamic Adjustments: Automatic alarm optimization</li></ul><figure class="block-color-gray_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-8075-9657-ed6135b16d17"><div style="width:100%">Example: For a 10:30 AM meeting with 3 hours total travel time, the system ensures your 7:30 AM alarm is set and continuously optimized based on real-time conditions.</div></figure><h1 id="1d1604ef-9b4b-803a-8fbf-c89822dbca0a" class="block-color-blue">Setup Guide</h1><p id="1d1604ef-9b4b-80a7-ae75-c35724896e17" class="">Let&#x27;s get your Smart Calendar Reminder configured with four essential automations:</p><h2 id="1d1604ef-9b4b-8072-ab56-d0757b2435ef" class="block-color-gray_background">Automation 1: Daily 12:00 AM Check</h2><p id="1d1604ef-9b4b-80c9-9b4a-ee2712524a0d" class="block-color-blue">Step 1. Open Shortcuts and tap [Automation], then tap [+] at the top right corner</p><figure id="1d1604ef-9b4b-8043-b390-ff859889379f" class="image"><a href="gZWfH4Kler-left.png"><img style="width:709.984375px" src="https://i.imgur.com/za6VDMA.jpeg"/></a></figure><p id="1d1604ef-9b4b-804a-9cb1-f487991237c6" class="">Step 2. Tap [Time of Day]</p><figure id="1d1604ef-9b4b-8085-99bb-e3d90115d5dd" class="image"><a href="NDyjdrLrYZ-left.png"><img style="width:709.984375px" src="https://i.imgur.com/z7aJ0OB.jpeg"/></a></figure><p id="1d1604ef-9b4b-806d-a7eb-f652a480cbc6" class="">Step 3. Follow the sequence shown in the image</p><figure id="1d1604ef-9b4b-80cd-9ca5-fc076df31898" class="image"><a href="6KJEFinDm6-left.png"><img style="width:709.984375px" src="https://i.imgur.com/u6C2AR9.jpeg"/></a></figure><p id="1d1604ef-9b4b-8050-b817-f0e2368f43ca" class="block-color-gray_background">Step 4. Tap [New Blank Automation]</p><figure id="1d1604ef-9b4b-8028-b872-eed1a3f6701a" class="image"><a href="XblW6TFHek-left.png"><img style="width:709.984375px" src="https://i.imgur.com/nrTr7Np.jpeg"/></a></figure><p id="b8f8c3cf-7fdc-4a99-b2ba-60e18fef34c7" class="">Step 5. Search for the [Number] action</p><figure id="1d1604ef-9b4b-80d0-ad58-f7a1dc1d1c48" class="image"><a href="4XgUTG3h3E-left.png"><img style="width:709.984375px" src="https://i.imgur.com/F6jogMJ.jpeg"/></a></figure><p id="1d1604ef-9b4b-804e-9fe3-c5b6fc8701fa" class="">Step 6. Input number 1</p><figure id="1d1604ef-9b4b-8056-be0b-c4cfaebae0f7" class="image"><a href="n0XhfXtA03-left.png"><img style="width:709.984375px" src="https://i.imgur.com/HUMvkry.jpeg"/></a></figure><p id="1d1604ef-9b4b-8004-b82f-c5b6250d69c0" class="">Step 7. Search for [Run Shortcut] action</p><figure id="1d1604ef-9b4b-801d-a2d0-e444c55bbdb1" class="image"><a href="BUB7V9ITn8-left.png"><img style="width:709.984375px" src="https://i.imgur.com/IbHA9Jf.jpeg"/></a></figure><p id="1d1604ef-9b4b-8031-a595-d6b268bb5bfc" class="">Step 8. Search and select [Smart Calendar Reminder] in [Run Shortcut] action’s shortcut field.</p><figure id="1d1604ef-9b4b-804c-8be0-d6060e3b5a73" class="image"><a href="b50xsbc2QT-left.png"><img style="width:709.984375px" src="https://i.imgur.com/41WbF2A.png"/></a></figure><p id="1d1604ef-9b4b-805d-96d8-c871e0493bdb" class="block-color-default_background">Step 9. Tap [Done] in the top right corner to complete setup</p><figure id="1d1604ef-9b4b-8024-864a-d9002a94e719" class="image"><a href="LjO11dxjS3-left.png"><img style="width:709.984375px" src="https://i.imgur.com/tmrW6r8.jpeg"/></a></figure><h2 id="1d1604ef-9b4b-8045-9247-e3afd799f547" class="">Automation 2: Hourly Check</h2><p id="1d1604ef-9b4b-809c-900e-e425d52b7a0a" class="">Follow the same steps as Automation 1, with these modifications:</p><ul id="1d1604ef-9b4b-80a8-9819-cfd9961eb078" class="bulleted-list"><li style="list-style-type:disc">In step 3, select all <em><strong><span style="border-bottom:0.05em solid">24 hourly times</span></strong></em></li></ul><ul id="1d1604ef-9b4b-80b3-b766-ed9c851957a5" class="bulleted-list"><li style="list-style-type:disc">In step 6, input number <strong>2</strong> instead of 1</li></ul><h2 id="1d1604ef-9b4b-80ad-a1ea-e247f84f2063" class="">Automation 3: Alarm Trigger</h2><p id="1d1604ef-9b4b-8044-9254-f9d3912d6d6c" class="">Follow the same steps as Automation 1, with these changes:</p><ul id="1d1604ef-9b4b-802e-98b3-c8202e4f8765" class="bulleted-list"><li style="list-style-type:disc">In step 2, tap [<strong>Alarm</strong>] instead of [Time of Day]</li></ul><ul id="1d1604ef-9b4b-80a5-9ccc-d6a2906a3429" class="bulleted-list"><li style="list-style-type:disc">Configure settings as shown:</li></ul><figure id="1d1604ef-9b4b-8014-b883-f88df7a348e1" class="image"><a href="fIF3p3ttC0-left.png"><img style="width:709.984375px" src="https://i.imgur.com/MTyZ3km.png"/></a></figure><ul id="1d1604ef-9b4b-80dc-a6f8-edc73fc17118" class="bulleted-list"><li style="list-style-type:disc">In step 6, input number <strong>3</strong> instead of 1</li></ul><h2 id="1d1604ef-9b4b-8025-9db9-e83367a64cdb" class="">Automation 4: Alarm Stop</h2><p id="1d1604ef-9b4b-805f-afe2-f2de398e695a" class="">Follow the same steps as Automation 1, with these changes:</p><ul id="10aa2fe6-80f0-4850-93c0-4fe14b146190" class="bulleted-list"><li style="list-style-type:disc">In step 2, tap [<strong>Alarm</strong>] instead of [Time of Day]</li></ul><ul id="1d1604ef-9b4b-80aa-baad-e6dd7acf4ad9" class="bulleted-list"><li style="list-style-type:disc">Configure settings as shown:</li></ul><figure id="1d1604ef-9b4b-8068-a490-e601bfafcfe7" class="image"><a href="E24uC2vV2j-left.png"><img style="width:709.984375px" src="https://i.imgur.com/2LbJK9D.png"/></a></figure><ul id="1d1604ef-9b4b-804f-bcba-f64ec9bd67f1" class="bulleted-list"><li style="list-style-type:disc">In step 6, input number <strong>4</strong> instead of 1</li></ul><figure class="block-color-teal_background callout" style="white-space:pre-wrap;display:flex" id="1d1604ef-9b4b-8031-8b44-ddb00fab6dee"><div style="width:100%">🎉 Congratulations! Once you&#x27;ve completed these automations, your Smart Calendar Reminder is ready to revolutionize your schedule management!</div></figure></div></article><span class="sans" style="font-size:14px;padding-top:2em"></span></body></html>

〔40〕 Set Name of 〔39 Text〕 to Welcome.html　» 41 42

〔41〕 Show Web View at 〔40 Renamed Item〕

〔42〕 Make PDF from 〔40 Renamed Item〕　»

〔43〕 Save File 〔42 PDF〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔WelcomeSubPath〕

〔44〕 End If　▵38

〔45〕 Dictionary 　➔ menus　»
{  "mainMenu": {
      "Setup": {
         "title": "Setup",
         "sub": "Set Personal Preferences",
         "icon": "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"
      },
      "Change": {
         "title": "Change",
         "sub": "Change Personal Preferences",
         "icon": "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"
      },
      "View": {
         "title": "View",
         "sub": "View Personal Preferences or Automations Setup Inctructions",
         "icon": "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"
      }
   }
}

〔46〕 Get Dictionary from 〔45 menus.mainMenu〕　»

〔47〕 Repeat with Each in 〔46 Dictionary〕

〔48〕 Get Dictionary All Values in 〔Repeat Item as Dictionary〕 　➔ Options　»
• DictionaryKey: 〔Repeat Item as Dictionary’s Keys〕.title

〔49〕 Repeat[2] with Each in 〔48 Options as Dictionary〕

〔50〕 Text
BEGIN:VCARD
VERSION:3.0
N;CHARSET=utf-8:〔Repeat Item 2 as Dictionary.title〕;
ORG:〔Repeat Item 2 as Dictionary.sub〕;
PHOTO;ENCODING=b:〔Repeat Item 2 as Dictionary.icon〕;
END:VCARD

〔51〕 End Repeat[2] with Each

〔52〕 End Repeat with Each　»

〔53〕 Text　»
〔52 Repeat Results〕

〔54〕 Set Name of 〔53 Text〕 to mainMenu.vcf　»

〔55〕 Get Contacts from 〔54 Renamed Item〕　»

〔56〕 Choose from List 〔55 Contacts〕　» 57 107 113
• ChooseFromListActionPrompt: ☀️Welcome to Smart Calendar Reminder☀️

〔57〕 If 〔56 Selected Item’s Name〕 is Setup

〔58〕 Get File at Path 〔AboutMeSubPath〕 from Folder　»
• FileErrorIfNotFound: false

〔59〕 If 〔58 File’s File Size〕 does not have any value

〔60〕 Comment
All the information is stored in iCloud. The shortcut isn’t collecting anything.

〔61〕 Text　»
Choose Travel Time Calculation Method

1️⃣ Notes 🗓️ / Current 📍\u000D
Uses the address in the Calendar event Notes if available (routing via Notes if you're not already there), otherwise calculates directly from your current location to the event.\u000D
\u000D
2️⃣ Notes 🗓️ / Home 🏡\u000D
Uses the Notes address if available (same as 1️⃣), but if Notes are empty, routes via your home address if you're not already there, or directly from home if you are.\u000D
\u000D

〔62〕 Choose from Menu
• MenuPrompt: 〔61 Text〕
• MenuItems: [1️⃣ Notes 🗓️ / Current 📍,
2️⃣ Notes 🗓️ / Home 🏡]

〔63〕 Menu Item 1️⃣ Notes 🗓️ / Current 📍

〔64〕 Dictionary　»
{  "state": "\"\"",
   "street": "\"\"",
   "city": "\"\"",
   "country": "\"\"",
   "postcode": "\"\""
}

〔65〕 Set Variable HomeAddress to 〔64 Dictionary〕

〔66〕 Menu Item 2️⃣ Notes 🗓️ / Home 🏡

〔67〕 Text　»
Please provide your home address for accurate travel time calculations via Apple Maps.

〔68〕 Text　»
<!DOCTYPE html>
<html>
<head>
    <title>Address Collector</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Modern CSS styling */
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .form-container {
            max-width: 500px;
            margin: 20px auto;
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #34495e;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            margin: 0; /* Equal left/right margins */
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
            box-sizing: border-box; /* Ensures padding doesn't affect width */
        }

        input:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.2);
        }

        button {
            background: #3498db;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #2980b9;
        }

        /* New success message styling */
        .success-message {
            display: none;
            background: #e8f5e9;
            color: #2e7d32;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            text-align: center;
        }

        .success-message.show {
            display: block;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>〔67 Text〕</h2>
        <form id="addressForm">
            <div class="form-group">
                <label>Street Address</label>
                <input type="text" id="street" placeholder="" required>
            </div>

            <div class="form-group">
                <label>City</label>
                <input type="text" id="city" placeholder="" required>
            </div>

            <div class="form-group">
                <label>State/Province</label>
                <input type="text" id="state" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Country/Region</label>
                <input type="text" id="country" placeholder="" required>
            </div>

            <div class="form-group">
                <label>Postal Code</label>
                <input type="text" id="postcode" placeholder="" required>
            </div>

            <button type="button" onclick="sendToShortcut()">Submit Address</button>
        </form>

        <!-- Success message container -->
        <div class="success-message" id="successMessage">
            <p>Data collected successfully!</p>
        </div>
    </div>

<script>
function sendToShortcut() {
  const addressData = {
    street: document.getElementById('street').value,
    city: document.getElementById('city').value,
    state: document.getElementById('state').value,
    country: document.getElementById('country').value,
    postcode: document.getElementById('postcode').value
  };
\u{space}\u{space}
  // Copy data to clipboard
  navigator.clipboard.writeText(JSON.stringify(addressData));
\u{space}\u{space}
  // Show success message and hide form
  document.getElementById('addressForm').style.display = 'none';
  document.getElementById('successMessage').classList.add('show');
}
</script>
</body>
</html>

〔69〕 Set Name of 〔68 Text〕 to Address.html　»

〔70〕 Show Web View at 〔69 Renamed Item〕

〔71〕 Get Clipboard　»

〔72〕 Get Dictionary from 〔71 Clipboard〕　»

〔73〕 Set Variable HomeAddress to 〔72 Dictionary〕

〔74〕 End Menu　▵66

〔75〕 List　» 77
[Driving,
Walking,
Transit,
Biking]

〔76〕 Text　»
Select Travel Method (It will apply to all the events)

〔77〕 Choose from List 〔75 List〕 　➔ Travel Method Selected　»
• ChooseFromListActionPrompt: 〔76 Text〕

〔78〕 Set Variable TravelMethod to 〔77 Travel Method Selected〕

〔79〕 Text　»
Besides travel time, how many Extra Minutes Needed (e.g., '15 mins buffer')

〔80〕 Ask for Number Input 　➔ Extra Time Needed　»
• AskActionPrompt: 〔79 Text〕
• AskActionAllowsNegativeNumbers: false
• AskActionAllowsDecimalNumbers: false

〔81〕 Set Variable ExtraTime to 〔80 Extra Time Needed〕

〔82〕 Text　»
Set Time Granularity to search up Calendar Events

Default: 1 hour -> 1 day -> 1 week -> 1 month

Customize based on your own needs.

〔83〕 Choose from Menu
• MenuPrompt: 〔82 Text〕
• MenuItems: [Default,
Customize]

〔84〕 Menu Item Default

〔85〕 List　» 86 87 88 89
[60,
1440,
10080,
43200]

〔86〕 Get First Item from List 〔85 List〕　» 90

〔87〕 Get Item At Index 2 from List 〔85 List〕　» 90

〔88〕 Get Item At Index 3 from List 〔85 List〕　» 90

〔89〕 Get Last Item from List 〔85 List〕　»

〔90〕 Text　»
[〔86 Item from List〕,〔87 Item from List〕,〔88 Item from List〕,〔89 Item from List〕]

〔91〕 Set Variable Granularity to 〔90 Text〕

〔92〕 Menu Item Customize　▵84

〔93〕 Text　»
<!DOCTYPE html>
<html>
<head>
    <title>Time Granularity Collector</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Reuse same styling as address form */
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .form-container {
            max-width: 500px;
            margin: 20px auto;
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #34495e;
            font-weight: 500;
        }

        button {
            background: #3498db;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s ease;
        }

        button:hover {
            background: #2980b9;
        }

        .success-message {
            display: none;
            background: #e8f5e9;
            color: #2e7d32;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            text-align: center;
        }

        .success-message.show {
            display: block;
        }

        /* Number input specific styling */
        .number-input {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .number-input button {
            width: 40px;
            height: 40px;
            padding: 0;
            border-radius: 50%;
            background: #f0f0f0;
            color: #3498db;
            font-size: 20px;
            line-height: 40px;
        }

        .number-input button:hover {
            background: #e0e0e0;
        }

        .number-input input {
            width: 80px;
            padding: 8px;
            text-align: center;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Time Granularity Settings</h2>
        <form id="timeForm">
            <!-- Repeat this pattern for each time unit -->
            <div class="form-group">
                <label>Years</label>
                <div class="number-input">
                    <button type="button" onclick="adjustValue('years', -1)">−</button>
                    <input type="number" id="years" value="0" min="0">
                    <button type="button" onclick="adjustValue('years', 1)">+</button>
                </div>
            </div>

            <div class="form-group">
                <label>Months</label>
                <div class="number-input">
                    <button type="button" onclick="adjustValue('months', -1)">−</button>
                    <input type="number" id="months" value="0" min="0">
                    <button type="button" onclick="adjustValue('months', 1)">+</button>
                </div>
            </div>

            <div class="form-group">
                <label>Weeks</label>
                <div class="number-input">
                    <button type="button" onclick="adjustValue('weeks', -1)">−</button>
                    <input type="number" id="weeks" value="0" min="0">
                    <button type="button" onclick="adjustValue('weeks', 1)">+</button>
                </div>
            </div>

            <div class="form-group">
                <label>Days</label>
                <div class="number-input">
                    <button type="button" onclick="adjustValue('days', -1)">−</button>
                    <input type="number" id="days" value="0" min="0">
                    <button type="button" onclick="adjustValue('days', 1)">+</button>
                </div>
            </div>

            <div class="form-group">
                <label>Hours</label>
                <div class="number-input">
                    <button type="button" onclick="adjustValue('hours', -1)">−</button>
                    <input type="number" id="hours" value="0" min="0">
                    <button type="button" onclick="adjustValue('hours', 1)">+</button>
                </div>
            </div>

            <div class="form-group">
                <label>Minutes</label>
                <div class="number-input">
                    <button type="button" onclick="adjustValue('minutes', -1)">−</button>
                    <input type="number" id="minutes" value="0" min="0">
                    <button type="button" onclick="adjustValue('minutes', 1)">+</button>
                </div>
            </div>

            <button type="button" onclick="convertToMinutes()">Generate Time Array</button>
        </form>

        <div class="success-message" id="successMessage">
            <p>Time array copied to clipboard!</p>
        </div>
    </div>

<script>
function adjustValue(field, change) {
    const input = document.getElementById(field);
    let value = parseInt(input.value) + change;
    input.value = value < 0 ? 0 : value;
}

function convertToMinutes() {
    // Conversion rates to minutes
    const conversions = {
        years: 365 * 24 * 60,
        months: 30 * 24 * 60,
        weeks: 7 * 24 * 60,
        days: 24 * 60,
        hours: 60,
        minutes: 1
    };

    // Convert all values to minutes
    const minutesArray = Object.keys(conversions).map(field => {
        const value = parseInt(document.getElementById(field).value);
        return value * conversions[field];
    });

    // Filter out zero values and sort
    const finalArray = minutesArray.filter(m => m > 0).sort((a, b) => a - b);

    // Copy to clipboard
    navigator.clipboard.writeText(JSON.stringify(finalArray));

    // Show success message
    document.getElementById('timeForm').style.display = 'none';
    document.getElementById('successMessage').classList.add('show');
}
</script>
</body>
</html>

〔94〕 Set Name of 〔93 Text〕 to Granularity.html　»

〔95〕 Show Web View at 〔94 Renamed Item〕

〔96〕 Get Clipboard　»

〔97〕 Set Variable Granularity to 〔96 Clipboard〕

〔98〕 End Menu　▵92

〔99〕 Dictionary　»
{  "HomeAddress": "〔HomeAddress as Dictionary〕",
   "TravelMethod": "〔TravelMethod〕",
   "ExtraTime": "〔ExtraTime〕",
   "Granularity": "〔Granularity〕"
}

〔100〕 Text　»
〔99 Dictionary〕

〔101〕 Save File 〔100 Text〕
• Folder: {  "fileLocation": {
      "crossDeviceItemID": "docs.icloud.com:iCloud.is.workflow.my.workflows/documents/e51c720424ec90d3260ccd6f241343baea15b7f3",
      "fileProviderDomainID": "com.apple.CloudDocs.iCloudDriveFileProvider/46CA22EA-49CD-4A1D-9512-F48B36AA64B5",
      "appContainerBundleIdentifier": "com.apple.shortcuts",
      "relativeSubpath": "",
      "WFFileLocationType": "Shortcuts"
   },
   "filename": "Documents",
   "displayName": "Shortcuts"
}
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔AboutMeSubPath〕

〔102〕 Otherwise　▵59

〔103〕 Show Alert You have set up. If you want to modify, please tap [Change] instead.
• AlertActionCancelButtonShown: false

〔104〕 Run Shortcut Smart Calendar Reminder
• Workflow: {  "workflowIdentifier": "5A2BC55E-C195-4C6C-93E9-725F782CDD1B",
   "isSelf": true,
   "workflowName": "Smart Calendar Reminder"
}

〔105〕 End If

〔106〕 End If　▵57

〔107〕 If 〔56 Selected Item’s Name〕 is Change

〔108〕 Get File at Path 〔AboutMeSubPath〕 from Folder　»

〔109〕 Delete Files 〔108 File〕
• DeleteImmediatelyDelete: true

〔110〕 Show Alert Your preferences are deleted. Please choose [Setup] from main menu to set up again.
• AlertActionCancelButtonShown: false

〔111〕 Run Shortcut Smart Calendar Reminder
• Workflow: {  "workflowIdentifier": "5A2BC55E-C195-4C6C-93E9-725F782CDD1B",
   "isSelf": true,
   "workflowName": "Smart Calendar Reminder"
}

〔112〕 End If

〔113〕 If 〔56 Selected Item’s Name〕 is View

〔114〕 Choose from Menu
• MenuPrompt: Which one?
• MenuItems: [Automations Setup Instructions,
Personal Preferences]

〔115〕 Menu Item Automations Setup Instructions

〔116〕 Get File at Path 〔WelcomeSubPath〕 from Folder　»

〔117〕 Open File 〔116 File〕
• OpenInAskWhenRun: false

〔118〕 Menu Item Personal Preferences

〔119〕 Get File at Path 〔AboutMeSubPath〕 from Folder　»

〔120〕 Open File 〔119 File〕
• OpenInAskWhenRun: false

〔121〕 End Menu

〔122〕 End If　▵113

〔123〕 Otherwise　▵12

〔124〕 If 〔Shortcut Input as Number〕 is 1

〔125〕 Comment
*Revolutionizing event management by integrating calendar data with intelligent automation:

Voice announcements for upcoming events

Dynamic alarm calculation (travel + prep time)

Calendar-driven scheduling system
Eliminates manual reminders and ensures perfect timing synchronization*

〔126〕 Get File at Path 〔AboutMeSubPath〕 from Folder　»
• FileErrorIfNotFound: false

〔127〕 Get Dictionary from 〔126 File〕　» 128 131 132 135

〔128〕 Get Dictionary from 〔127 Dictionary.HomeAddress〕　»

〔129〕 Text　»
〔128 Dictionary.street〕 〔128 Dictionary.city〕 〔128 Dictionary.state〕 〔128 Dictionary.postcode〕 〔128 Dictionary.country〕\u{space}

〔130〕 Set Variable HomeAddress to 〔129 Text〕

〔131〕 Set Variable TravelMethod to 〔127 Dictionary.TravelMethod〕

〔132〕 Get Dictionary Value for ExtraTime in 〔127 Dictionary〕　»

〔133〕 Get Numbers from 〔132 Dictionary Value〕　»

〔134〕 Set Variable ExtraTime to 〔133 Numbers〕

〔135〕 Get Dictionary Value for Granularity in 〔127 Dictionary〕　»

〔136〕 Repeat with Each in 〔135 Dictionary Value〕

〔137〕 Set Variable GranularityRepeatItem to 〔Repeat Item〕

〔138〕 Get Numbers from 〔GranularityRepeatItem〕　» 139 142 145 484

〔139〕 Show Result
〔138 Numbers〕

〔140〕 If 〔Repeat Index〕 is 1

〔141〕 Date Current Date　»

〔142〕 Adjust Add Date 〔141 Date〕　»
• Duration: 〔138 Numbers〕 min

〔143〕 Turn Focus On
• AssertionType: Time
• FocusModes: {  "Identifier": "com.apple.donotdisturb.mode.bookmarkfill",
   "DisplayString": "Timer"
}
• Time: 〔142 Adjusted Date〕

〔144〕 End If

〔145〕 Find Calendar Events All Calendar Events where　» 146 147 487 488
• ContentItemSortProperty: Start Date
• ContentItemSortOrder: Oldest First
• ContentItemFilter: • All the following are true
Start Date is in the next 〔138 Numbers〕 minutes
Is Not All Day
Canceled is {"Bool":false}

〔146〕 If 〔145 Calendar Events〕 has any value

〔147〕 Repeat[2] with Each in 〔145 Calendar Events〕

〔148〕 Set Variable CanlendarRepeatItem to 〔Repeat Item 2〕

〔149〕 If 〔CanlendarRepeatItem’s Location〕 has any value

〔150〕 Get Current Location　» 162 168 254
• Accuracy: Best

〔151〕 Comment
*To specify event-specific departure locations:

1. Create calendar event notes with JSON structure:
{
“Street”: “your departure street”,
“City”: “your departure city”,
“State”: “your departure state”,
“Country”: “your departure country”,
“Postcode”: “your departure postcode”
}
2. System prioritizes these over default locations*

〔152〕 If All are true　〔CanlendarRepeatItem’s Notes〕 has any value　〔CanlendarRepeatItem’s Notes〕 begins with {　〔CanlendarRepeatItem’s Notes〕 ends with }

〔153〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY

〔154〕 Get Dictionary from 〔CanlendarRepeatItem’s Notes〕 　➔ Notes Address Dictionary　» 155 156 157 158 159

〔155〕 Set Variable Calendar_Notes_Street to 〔154 Notes Address Dictionary.Street〕

〔156〕 Set Variable Calendar_Notes_City to 〔154 Notes Address Dictionary.City〕

〔157〕 Set Variable Calendar_Notes_State to 〔154 Notes Address Dictionary.State〕

〔158〕 Set Variable Calendar_Notes_Region to 〔154 Notes Address Dictionary.Country〕

〔159〕 Set Variable Calendar_Notes_ZIP_Code to 〔154 Notes Address Dictionary.Postcode〕

〔160〕 Text　»
〔Calendar_Notes_Street〕 〔Calendar_Notes_City〕 〔Calendar_Notes_State〕 〔Calendar_Notes_ZIP_Code〕 〔Calendar_Notes_Region〕

〔161〕 Set Variable NotesAddressString to 〔160 Text〕

〔162〕 If All are true　〔150 Current Location’s Street〕 is 〔Calendar_Notes_Street〕　〔150 Current Location’s City〕 is 〔Calendar_Notes_City〕　〔150 Current Location’s State〕 is 〔Calendar_Notes_State〕　〔150 Current Location’s Country〕 is 〔Calendar_Notes_Region〕　〔150 Current Location’s ZIP Code〕 is 〔Calendar_Notes_ZIP_Code〕

〔163〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS THE SAME WITH CURRENT LOCATION

〔164〕 Number 0　»

〔165〕 Set Variable CurrentToDeparture to 〔164 Number〕

〔166〕 Otherwise

〔167〕 Comment
CALENDAR EVENT NOTES IS NOT BLANK AND IT’S A DICTIONARY -> CALENDAR EVENT ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔168〕 Get 〔TravelMethod〕 Time　»
• GetDirectionsCustomLocation: 〔150 Current Location〕
• Destination: 〔NotesAddressString〕

〔169〕 Set Variable TravelTimeString to 〔168 Travel Time〕

〔170〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔171〕 Set Variable MatchString to 〔170 Matches〕

〔172〕 Count Items in 〔MatchString〕　»

〔173〕 If 〔172 Count〕 is 1

〔174〕 Get First Item from List 〔MatchString〕　»

〔175〕 Set Variable TravelDays to 〔174 Item from List〕

〔176〕 Otherwise

〔177〕 Number 0　»

〔178〕 Set Variable TravelDays to 〔177 Number〕

〔179〕 End If

〔180〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔181〕 Set Variable MatchString to 〔180 Matches〕

〔182〕 Count Items in 〔MatchString〕　»

〔183〕 If 〔182 Count〕 is 1

〔184〕 Get First Item from List 〔MatchString〕　»

〔185〕 Set Variable TravelHours to 〔184 Item from List〕

〔186〕 Otherwise

〔187〕 Number 0　»

〔188〕 Set Variable TravelHours to 〔187 Number〕

〔189〕 End If

〔190〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔191〕 Set Variable MatchString to 〔190 Matches〕

〔192〕 Count Items in 〔MatchString〕　»

〔193〕 If 〔192 Count〕 is 1

〔194〕 Get First Item from List 〔MatchString〕　»

〔195〕 Set Variable TravelMinutes to 〔194 Item from List〕

〔196〕 Otherwise

〔197〕 Number 0　»

〔198〕 Set Variable TravelMinutes to 〔197 Number〕

〔199〕 End If

〔200〕 Calculate 〔TravelDays〕 × 1440　» 202

〔201〕 Calculate 〔TravelHours〕 × 60　»

〔202〕 Calculate 〔201 Calculation Result〕 + 〔200 Calculation Result〕　»

〔203〕 Calculate 〔202 Calculation Result〕 + 〔TravelMinutes〕　»

〔204〕 Set Variable CurrentToDeparture to 〔203 Calculation Result〕

〔205〕 End If　▵166

〔206〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔NotesAddressString〕
• Destination: 〔CanlendarRepeatItem’s Location〕

〔207〕 Set Variable TravelTimeString to 〔206 DepartureToDestination〕

〔208〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔209〕 Set Variable MatchString to 〔208 Matches〕

〔210〕 Count Items in 〔MatchString〕　»

〔211〕 If 〔210 Count〕 is 1

〔212〕 Get First Item from List 〔MatchString〕　»

〔213〕 Set Variable TravelDays to 〔212 Item from List〕

〔214〕 Otherwise

〔215〕 Number 0　»

〔216〕 Set Variable TravelDays to 〔215 Number〕

〔217〕 End If

〔218〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔219〕 Set Variable MatchString to 〔218 Matches〕

〔220〕 Count Items in 〔MatchString〕　»

〔221〕 If 〔220 Count〕 is 1

〔222〕 Get First Item from List 〔MatchString〕　»

〔223〕 Set Variable TravelHours to 〔222 Item from List〕

〔224〕 Otherwise

〔225〕 Number 0　»

〔226〕 Set Variable TravelHours to 〔225 Number〕

〔227〕 End If

〔228〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔229〕 Set Variable MatchString to 〔228 Matches〕

〔230〕 Count Items in 〔MatchString〕　»

〔231〕 If 〔230 Count〕 is 1

〔232〕 Get First Item from List 〔MatchString〕　»

〔233〕 Set Variable TravelMinutes to 〔232 Item from List〕

〔234〕 Otherwise

〔235〕 Number 0　»

〔236〕 Set Variable TravelMinutes to 〔235 Number〕

〔237〕 End If

〔238〕 Calculate 〔TravelDays〕 × 1440　» 240

〔239〕 Calculate 〔TravelHours〕 × 60　»

〔240〕 Calculate 〔239 Calculation Result〕 + 〔238 Calculation Result〕　»

〔241〕 Calculate 〔240 Calculation Result〕 + 〔TravelMinutes〕　»

〔242〕 Calculate 〔241 Calculation Result〕 + 〔CurrentToDeparture〕　»

〔243〕 Set Variable TravelTime to 〔242 Calculation Result〕

〔244〕 Otherwise　▵152

〔245〕 Comment
CALENDER EVENT NOTES IS BLANK

〔246〕 Get Dictionary from 〔HomeAddress〕 　➔ Home Address Dictionary　» 247 248 249 250 251

〔247〕 Get Dictionary Value for street in 〔246 Home Address Dictionary〕 　➔ home_Street　» 252 254

〔248〕 Get Dictionary Value for city in 〔246 Home Address Dictionary〕 　➔ home_City　» 252 254

〔249〕 Get Dictionary Value for state in 〔246 Home Address Dictionary〕 　➔ home_State　» 252 254

〔250〕 Get Dictionary Value for country in 〔246 Home Address Dictionary〕 　➔ home_Country　» 252 254

〔251〕 Get Dictionary Value for postcode in 〔246 Home Address Dictionary〕 　➔ home_Postcode　» 252 254

〔252〕 If All are true　〔247 home_Street〕 has any value　〔248 home_City〕 has any value　〔249 home_State〕 has any value　〔250 home_Country〕 has any value　〔251 home_Postcode〕 has any value

〔253〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED

〔254〕 If All are true　〔150 Current Location’s Street〕 is 〔247 home_Street〕　〔150 Current Location’s City〕 is 〔248 home_City〕　〔150 Current Location’s State〕 is 〔249 home_State〕　〔150 Current Location’s Country〕 is 〔250 home_Country〕　〔150 Current Location’s ZIP Code〕 is 〔251 home_Postcode〕

〔255〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS THE SAME WITH CURRENT LOCATION

〔256〕 Number 0　»

〔257〕 Set Variable CurrentToDeparture to 〔256 Number〕

〔258〕 Otherwise

〔259〕 Comment
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS MAINTAINED -> HOME ADDRESS IS NOT THE SAME WITH CURRENT LOCATION

〔260〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔HomeAddress〕

〔261〕 Set Variable TravelTimeString to 〔260 Travel Time〕

〔262〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔263〕 Set Variable MatchString to 〔262 Matches〕

〔264〕 Count Items in 〔MatchString〕　»

〔265〕 If 〔264 Count〕 is 1

〔266〕 Get First Item from List 〔MatchString〕　»

〔267〕 Set Variable TravelDays to 〔266 Item from List〕

〔268〕 Otherwise

〔269〕 Number 0　»

〔270〕 Set Variable TravelDays to 〔269 Number〕

〔271〕 End If

〔272〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔273〕 Set Variable MatchString to 〔272 Matches〕

〔274〕 Count Items in 〔MatchString〕　»

〔275〕 If 〔274 Count〕 is 1

〔276〕 Get First Item from List 〔MatchString〕　»

〔277〕 Set Variable TravelHours to 〔276 Item from List〕

〔278〕 Otherwise

〔279〕 Number 0　»

〔280〕 Set Variable TravelHours to 〔279 Number〕

〔281〕 End If

〔282〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔283〕 Set Variable MatchString to 〔282 Matches〕

〔284〕 Count Items in 〔MatchString〕　»

〔285〕 If 〔284 Count〕 is 1

〔286〕 Get First Item from List 〔MatchString〕　»

〔287〕 Set Variable TravelMinutes to 〔286 Item from List〕

〔288〕 Otherwise

〔289〕 Number 0　»

〔290〕 Set Variable TravelMinutes to 〔289 Number〕

〔291〕 End If

〔292〕 Calculate 〔TravelDays〕 × 1440　» 294

〔293〕 Calculate 〔TravelHours〕 × 60　»

〔294〕 Calculate 〔293 Calculation Result〕 + 〔292 Calculation Result〕　»

〔295〕 Calculate 〔294 Calculation Result〕 + 〔TravelMinutes〕　»

〔296〕 Set Variable CurrentToDeparture to 〔295 Calculation Result〕

〔297〕 End If　▵258

〔298〕 Get 〔TravelMethod〕 Time 　➔ DepartureToDestination　»
• GetDirectionsCustomLocation: 〔HomeAddress〕
• Destination: 〔CanlendarRepeatItem’s Location〕

〔299〕 Set Variable TravelTimeString to 〔298 DepartureToDestination〕

〔300〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔301〕 Set Variable MatchString to 〔300 Matches〕

〔302〕 Count Items in 〔MatchString〕　»

〔303〕 If 〔302 Count〕 is 1

〔304〕 Get First Item from List 〔MatchString〕　»

〔305〕 Set Variable TravelDays to 〔304 Item from List〕

〔306〕 Otherwise

〔307〕 Number 0　»

〔308〕 Set Variable TravelDays to 〔307 Number〕

〔309〕 End If

〔310〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔311〕 Set Variable MatchString to 〔310 Matches〕

〔312〕 Count Items in 〔MatchString〕　»

〔313〕 If 〔312 Count〕 is 1

〔314〕 Get First Item from List 〔MatchString〕　»

〔315〕 Set Variable TravelHours to 〔314 Item from List〕

〔316〕 Otherwise

〔317〕 Number 0　»

〔318〕 Set Variable TravelHours to 〔317 Number〕

〔319〕 End If

〔320〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔321〕 Set Variable MatchString to 〔320 Matches〕

〔322〕 Count Items in 〔MatchString〕　»

〔323〕 If 〔322 Count〕 is 1

〔324〕 Get First Item from List 〔MatchString〕　»

〔325〕 Set Variable TravelMinutes to 〔324 Item from List〕

〔326〕 Otherwise

〔327〕 Number 0　»

〔328〕 Set Variable TravelMinutes to 〔327 Number〕

〔329〕 End If

〔330〕 Calculate 〔TravelDays〕 × 1440　» 332

〔331〕 Calculate 〔TravelHours〕 × 60　»

〔332〕 Calculate 〔331 Calculation Result〕 + 〔330 Calculation Result〕　»

〔333〕 Calculate 〔332 Calculation Result〕 + 〔TravelMinutes〕　»

〔334〕 Calculate 〔333 Calculation Result〕 + 〔CurrentToDeparture〕　»

〔335〕 Set Variable TravelTime to 〔334 Calculation Result〕

〔336〕 Otherwise　▵252

〔337〕 Text
CALENDER EVENT NOTES IS BLANK -> HOME ADDRESS WAS NOT MAINTAINED

〔338〕 Get 〔TravelMethod〕 Time　»
• Destination: 〔CanlendarRepeatItem’s Location〕

〔339〕 Set Variable TravelTimeString to 〔338 Travel Time〕

〔340〕 Match Text (\d+)\s*day(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔341〕 Set Variable MatchString to 〔340 Matches〕

〔342〕 Count Items in 〔MatchString〕　»

〔343〕 If 〔342 Count〕 is 1

〔344〕 Get First Item from List 〔MatchString〕　»

〔345〕 Set Variable TravelDays to 〔344 Item from List〕

〔346〕 Otherwise

〔347〕 Number 0　»

〔348〕 Set Variable TravelDays to 〔347 Number〕

〔349〕 End If

〔350〕 Match Text (\d+)\s*hour(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔351〕 Set Variable MatchString to 〔350 Matches〕

〔352〕 Count Items in 〔MatchString〕　»

〔353〕 If 〔352 Count〕 is 1

〔354〕 Get First Item from List 〔MatchString〕　»

〔355〕 Set Variable TravelHours to 〔354 Item from List〕

〔356〕 Otherwise

〔357〕 Number 0　»

〔358〕 Set Variable TravelHours to 〔357 Number〕

〔359〕 End If

〔360〕 Match Text (\d+)\s*minute(?:s)? in 〔TravelTimeString〕　»
• MatchTextCaseSensitive: false

〔361〕 Set Variable MatchString to 〔360 Matches〕

〔362〕 Count Items in 〔MatchString〕　»

〔363〕 If 〔362 Count〕 is 1

〔364〕 Get First Item from List 〔MatchString〕　»

〔365〕 Set Variable TravelMinutes to 〔364 Item from List〕

〔366〕 Otherwise

〔367〕 Number 0　»

〔368〕 Set Variable TravelMinutes to 〔367 Number〕

〔369〕 End If

〔370〕 Calculate 〔TravelDays〕 × 1440　» 372

〔371〕 Calculate 〔TravelHours〕 × 60　»

〔372〕 Calculate 〔371 Calculation Result〕 + 〔370 Calculation Result〕　»

〔373〕 Calculate 〔372 Calculation Result〕 + 〔TravelMinutes〕　»

〔374〕 Set Variable TravelTime to 〔373 Calculation Result〕

〔375〕 End If　▵336

〔376〕 End If　▵244

〔377〕 Otherwise　▵149

〔378〕 Number 0　»

〔379〕 Set Variable TravelTime to 〔378 Number〕

〔380〕 End If

〔381〕 Calculate 〔TravelTime〕 + 〔ExtraTime〕　»

〔382〕 Adjust Subtract Date 〔CanlendarRepeatItem’s Start Date〕 　➔ Supposed Alarm Time　» 383 386 389 392 399 414 416 417 434 439 442
• Duration: 〔381 Calculation Result〕 min

〔383〕 Dictionary 　➔ Alarm Label Dictionary　» 414 419 434
{  "Event": "〔CanlendarRepeatItem〕",
   "From": "〔CanlendarRepeatItem’s Start Date〕",
   "To": "〔CanlendarRepeatItem’s End Date〕",
   "Location": "〔CanlendarRepeatItem’s Location〕",
   "AlarmTime": "〔382 Supposed Alarm Time〕"
}

〔384〕 Date Current Date 　➔ Current Date　» 385 386 416

〔385〕 Adjust Add Date 〔384 Current Date{"Date Style":"Custom","WFDateFormat":"dd MMM yyyy","WFISO8601IncludeTime":false}〕 　➔ 1 day after　» 399 417
• Duration: "1" days

〔386〕 If 〔382 Supposed Alarm Time〕 is 〔384 Current Date〕

〔387〕 Comment
supposed alarm time is exactly current time

〔388〕 If 〔CanlendarRepeatItem’s Location〕 has any value

〔389〕 Text　»
Event 〔CanlendarRepeatItem〕 from 〔CanlendarRepeatItem’s Start Date〕 to 〔CanlendarRepeatItem’s End Date〕 at 〔CanlendarRepeatItem’s Location〕 which  was supposed to get ready at 〔382 Supposed Alarm Time〕. Please check.

〔390〕 Set Variable Text to 〔389 Text〕

〔391〕 Otherwise

〔392〕 Text　»
Event 〔CanlendarRepeatItem〕 from 〔CanlendarRepeatItem’s Start Date〕 to 〔CanlendarRepeatItem’s End Date〕 which  was supposed to get ready at 〔382 Supposed Alarm Time〕. Please check.

〔393〕 Set Variable Text to 〔392 Text〕

〔394〕 End If

〔395〕 Show Alert 〔Text〕

〔396〕 Show Notification 〔Text〕

〔397〕 Speak Text
• Text: 〔Text〕

〔398〕 Otherwise　▵386

〔399〕 If 〔382 Supposed Alarm Time〕 is 〔385 1 day after〕

〔400〕 Find Alarm All Alarm　» 401 402

〔401〕 If 〔400 Alarms〕 has any value

〔402〕 Repeat[3] with Each in 〔400 Alarms〕

〔403〕 Set Variable AlarmRepeatItem to 〔Repeat Item 3〕

〔404〕 Get Dictionary from 〔AlarmRepeatItem’s label〕 　➔ AlarmLabelDictionary　» 405 406 407

〔405〕 Get Text from 〔404 AlarmLabelDictionary.Event〕　» 408

〔406〕 Get Dates from 〔404 AlarmLabelDictionary.From〕 　➔ FromDate　» 408

〔407〕 Get Dates from 〔404 AlarmLabelDictionary.To〕 　➔ ToDate　»

〔408〕 If All are true　〔405 Text〕 is 〔CanlendarRepeatItem〕　〔406 FromDate{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕 is 〔CanlendarRepeatItem’s Start Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕　〔407 ToDate{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕 is • ConditionalActionString
〔CanlendarRepeatItem’s End Date{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH:mm"}〕• Date
〔Repeat Item’s End Date{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕

〔409〕 Delete Alarms
• entities: 〔AlarmRepeatItem〕

〔410〕 End If

〔411〕 End Repeat[3] with Each　▵402

〔412〕 End If　▵401

〔413〕 Comment
since this will be triggered at 12:00 am each day, when the supposed alarm time is 12:00 am in the next day, you can set alarm now

〔414〕 Add Alarm for 〔382 Supposed Alarm Time〕 called 〔383 Alarm Label Dictionary〕

〔415〕 Otherwise　▵399

〔416〕 If 〔382 Supposed Alarm Time〕 > 〔384 Current Date〕

〔417〕 If 〔382 Supposed Alarm Time〕 > 〔385 1 day after〕

〔418〕 Comment
when the time is other than 12:00 am of then next day, you cannot set alarm yet. If set, it will be today. For example, triggering time 2025-4-8 12:00 am, the supposed alarm time is 2025-4-9 08:00 am, if you set an alarm at 08:00 at 2025-4-8 12:00 am, it will alarm at 2025-4-8 08:00 am instead. So we need to record the supposed alarm time and trigger next day.

〔419〕 Set Variable Event to 〔383 Alarm Label Dictionary〕

〔420〕 Otherwise

〔421〕 Find Alarm All Alarm　» 422 423
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFActionParameterFilterTemplates": [],
      "WFContentPredicateBoundedDate": false
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔422〕 If 〔421 Alarms〕 has any value

〔423〕 Repeat[3] with Each in 〔421 Alarms〕

〔424〕 Set Variable AlarmRepeatItem to 〔Repeat Item 3〕

〔425〕 Get Dictionary from 〔AlarmRepeatItem’s label〕 　➔ AlarmLabelDictionary　» 426 427 428

〔426〕 Get Text from 〔425 AlarmLabelDictionary.Event〕　» 429

〔427〕 Get Dates from 〔425 AlarmLabelDictionary.From〕 　➔ FromDate　» 429

〔428〕 Get Dates from 〔425 AlarmLabelDictionary.To〕 　➔ ToDate　»

〔429〕 If All are true　〔426 Text〕 is 〔CanlendarRepeatItem〕　〔427 FromDate{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕 is 〔CanlendarRepeatItem’s Start Date〕　〔428 ToDate{"Date Style":"Custom","WFDateFormat":"HH:mm","WFISO8601IncludeTime":false}〕 is 〔CanlendarRepeatItem’s End Date〕

〔430〕 Delete Alarms
• entities: 〔AlarmRepeatItem〕

〔431〕 End If

〔432〕 End Repeat[3] with Each　▵423

〔433〕 End If　▵422

〔434〕 Add Alarm for 〔382 Supposed Alarm Time〕 called 〔383 Alarm Label Dictionary〕

〔435〕 End If　▵420

〔436〕 Otherwise　▵416

〔437〕 Comment
the supposed alarm time passed

〔438〕 If 〔CanlendarRepeatItem’s Location〕 has any value

〔439〕 Text　»
Event 〔CanlendarRepeatItem〕 from 〔CanlendarRepeatItem’s Start Date〕 to 〔CanlendarRepeatItem’s End Date〕 at 〔CanlendarRepeatItem’s Location〕 which  was supposed to get ready at 〔382 Supposed Alarm Time〕. Please check.

〔440〕 Set Variable Text to 〔439 Text〕

〔441〕 Otherwise

〔442〕 Text　»
Event 〔CanlendarRepeatItem〕 from 〔CanlendarRepeatItem’s Start Date〕 to 〔CanlendarRepeatItem’s End Date〕 which  was supposed to get ready at 〔382 Supposed Alarm Time〕. Please check.

〔443〕 Set Variable Text to 〔442 Text〕

〔444〕 End If

〔445〕 Show Alert 〔Text〕

〔446〕 Show Notification 〔Text〕

〔447〕 Speak Text
• Text: 〔Text〕

〔448〕 End If　▵436

〔449〕 End If　▵415

〔450〕 End If　▵398

〔451〕 If 〔Event as Dictionary〕 has any value

〔452〕 Get Dictionary from 〔Event〕　» 453 454 455 456 470

〔453〕 Get Text from 〔452 Dictionary.Event〕　» 470

〔454〕 Get Text from 〔452 Dictionary.Location〕　» 470

〔455〕 Get Dates from 〔452 Dictionary.From〕　» 470

〔456〕 Get Dates from 〔452 Dictionary.To〕　» 470

〔457〕 Text　»

〔458〕 Set Variable TextList to 〔457 Text〕

〔459〕 Add 〔Event〕 to Variable TextList

〔460〕 Get File at Path 〔FutureAlarmsSubPath〕 from Folder　» 461 462
• FileErrorIfNotFound: false
• File: 〔TextList〕

〔461〕 If 〔460 File’s File Size〕 has any value

〔462〕 Split Text 〔460 File〕 by New Lines　»

〔463〕 Repeat[3] with Each in 〔462 Split Text〕

〔464〕 Set Variable FutureRepeatItem to 〔Repeat Item 3〕

〔465〕 Get Dictionary from 〔FutureRepeatItem〕　» 466 467 468 469

〔466〕 Get Text from 〔465 Dictionary.Event〕　» 470

〔467〕 Get Text from 〔465 Dictionary.Location〕　» 470

〔468〕 Get Dates from 〔465 Dictionary.From〕　» 470

〔469〕 Get Dates from 〔465 Dictionary.To〕　»

〔470〕 If Any are true　〔466 Text〕 is not 〔453 Text〕　〔468 Dates〕 is not • ConditionalActionString
〔452 Dictionary.From〕• Date
〔455 Dates〕　〔469 Dates〕 is not • ConditionalActionString
〔452 Dictionary.To〕• Date
〔456 Dates〕　〔467 Text〕 is not 〔454 Text〕

〔471〕 Add 〔FutureRepeatItem〕 to Variable TextList

〔472〕 End If

〔473〕 End Repeat[3] with Each　▵463

〔474〕 Combine Text 〔TextList〕 with New Lines　»

〔475〕 Save File 〔474 Combined Text〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔FutureAlarmsSubPath〕

〔476〕 Otherwise　▵461

〔477〕 Text　»

〔Event〕

〔478〕 Save File 〔477 Text〕
• AskWhereToSave: false
• FileDestinationPath: 〔FutureAlarmsSubPath〕

〔479〕 End If

〔480〕 End If　▵451

〔481〕 End Repeat[2] with Each　▵147

〔482〕 End If　▵146

〔483〕 End Repeat with Each　▵136

〔484〕 If 〔138 Numbers〕 < 1440

〔485〕 Number 3　»

〔486〕 Repeat 〔485 Number〕 Times

〔487〕 Count Items in 〔145 Calendar Events〕　» 492 500

〔488〕 Repeat[2] with Each in 〔145 Calendar Events〕

〔489〕 Format Date 〔Repeat Item 2’s Start Date〕　» 493 496 501 504
• DateFormatStyle: None

〔490〕 Format Date 〔Repeat Item 2’s End Date〕　» 493 496 501 504
• DateFormatStyle: None

〔491〕 If 〔Repeat Item 2’s Location〕 has any value

〔492〕 If 〔487 Count〕 > 1

〔493〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔489 Formatted Date〕 to 〔490 Formatted Date〕 at 〔Repeat Item 2’s Location〕

〔494〕 Set Variable Text to 〔493 Text〕

〔495〕 Otherwise

〔496〕 Text　»
Event  〔Repeat Item 2〕 from 〔489 Formatted Date〕 to 〔490 Formatted Date〕 at 〔Repeat Item 2’s Location〕

〔497〕 Set Variable Text to 〔496 Text〕

〔498〕 End If

〔499〕 Otherwise　▵491

〔500〕 If 〔487 Count〕 > 1

〔501〕 Text　»
Event 〔Repeat Index 2〕 〔Repeat Item 2〕 from 〔489 Formatted Date〕 to 〔490 Formatted Date〕

〔502〕 Set Variable Text to 〔501 Text〕

〔503〕 Otherwise

〔504〕 Text　»
Event  〔Repeat Item 2〕 from 〔489 Formatted Date〕 to 〔490 Formatted Date〕

〔505〕 Set Variable Text to 〔504 Text〕

〔506〕 End If

〔507〕 End If　▵499

〔508〕 Speak Text
• Text: 〔Text〕

〔509〕 Wait 1 seconds

〔510〕 End Repeat[2] with Each　▵488

〔511〕 End Repeat Times　▵486

〔512〕 End If　▵484

〔513〕 Get File at Path 〔FutureAlarmsSubPath〕 from Folder　» 514 515
• FileErrorIfNotFound: false

〔514〕 If 〔513 File’s File Size〕 has any value

〔515〕 Split Text 〔513 File〕 by New Lines　»

〔516〕 Repeat with Each in 〔515 Split Text〕

〔517〕 Get Dictionary from 〔Repeat Item〕　» 518 519 520 521 522 535 538

〔518〕 If 〔517 Dictionary〕 has any value

〔519〕 Get Text from 〔517 Dictionary.Event〕　» 530

〔520〕 Get Dates from 〔517 Dictionary.From〕　» 531

〔521〕 Get Dates from 〔517 Dictionary.To〕　» 531

〔522〕 Get Dates from 〔517 Dictionary.AlarmTime〕　» 523 535 538

〔523〕 If 〔522 Dates〕 is today

〔524〕 Find Alarm All Alarm　» 525 526
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔525〕 If 〔524 Alarms〕 has any value

〔526〕 Repeat[2] with Each in 〔524 Alarms〕

〔527〕 Get Dictionary from 〔Repeat Item 2’s label〕 　➔ Alarm_Label_Dictionary　» 528 529 530

〔528〕 Get Dates from 〔527 Alarm_Label_Dictionary.From〕 　➔ From_Date　» 531

〔529〕 Get Dates from 〔527 Alarm_Label_Dictionary.To〕 　➔ To_Date　» 531

〔530〕 If 〔519 Text〕 is 〔527 Alarm_Label_Dictionary.Event〕

〔531〕 If All are true　〔520 Dates〕 is 〔528 From_Date〕　〔521 Dates〕 is 〔529 To_Date〕

〔532〕 Nothing

〔533〕 Otherwise

〔534〕 Delete Alarms
• entities: 〔Repeat Item 2〕

〔535〕 Add Alarm for 〔522 Dates〕 called 〔517 Dictionary〕

〔536〕 End If

〔537〕 Otherwise　▵530

〔538〕 Add Alarm for 〔522 Dates〕 called 〔517 Dictionary〕

〔539〕 End If

〔540〕 End Repeat[2] with Each　▵526

〔541〕 End If　▵525

〔542〕 End If　▵523

〔543〕 End If　▵518

〔544〕 End Repeat with Each　▵516

〔545〕 End If　▵514

〔546〕 End If　▵124

〔547〕 If 〔Shortcut Input as Number〕 is 3

〔548〕 Comment
Alarm Activation Handler
Triggered by alarm events - manages notification flow

〔549〕 Dictionary　»
{  "stop": "no" }

〔550〕 Text　»
〔549 Dictionary〕

〔551〕 Save File 〔550 Text〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔StopFlagSubPath〕

〔552〕 Date Current Date　» 568

〔553〕 Find Alarm All Alarm　» 554 563
• ContentItemFilter: {  "Value": {
      "WFActionParameterFilterPrefix": 1,
      "WFContentPredicateBoundedDate": false,
      "WFActionParameterFilterTemplates": []
   },
   "WFSerializationType": "WFContentPredicateTableTemplate"
}

〔554〕 If 〔553 Alarms〕 has any value

〔555〕 Number 10000　»

〔556〕 Repeat 〔555 Number〕 Times

〔557〕 Get File at Path Smart Calendar Reminder/stopflag.txt from Folder　»
• FileErrorIfNotFound: false

〔558〕 Get Dictionary from 〔557 File〕　»

〔559〕 Get Dictionary Value for stop in 〔558 Dictionary〕　»

〔560〕 If 〔559 Dictionary Value’s Name〕 is yes

〔561〕 Stop This Shortcut

〔562〕 End If

〔563〕 Repeat[2] with Each in 〔553 Alarms〕

〔564〕 Get Dictionary from 〔Repeat Item 2’s label〕 　➔ alarm_label_dictionary　» 565 566 567 571 575 578

〔565〕 Get Dates from 〔564 alarm_label_dictionary.From〕 　➔ From　» 569

〔566〕 Get Dates from 〔564 alarm_label_dictionary.To〕 　➔ To　» 570

〔567〕 Get Dates from 〔564 alarm_label_dictionary.AlarmTime〕 　➔ AlarmTime　»

〔568〕 If All are true　〔567 AlarmTime{"Date Style":"Custom","WFISO8601IncludeTime":false,"WFDateFormat":"HH"}〕 is 〔552 Date{"Date Style":"Custom","WFDateFormat":"HH","WFISO8601IncludeTime":false}〕　〔567 AlarmTime{"Date Style":"Custom","WFDateFormat":"mm","WFISO8601IncludeTime":false}〕 is 〔552 Date{"Date Style":"Custom","WFDateFormat":"mm","WFISO8601IncludeTime":false}〕

〔569〕 Format Date 〔565 From’s Time〕　» 575 578

〔570〕 Format Date 〔566 To’s Time〕　» 575 578

〔571〕 Get Dictionary Value for Location in 〔564 alarm_label_dictionary〕　»

〔572〕 Text　»
〔571 Dictionary Value〕

〔573〕 Count Characters in 〔572 Text〕　»

〔574〕 If 〔573 Count〕 > • ConditionalActionString
""• NumberValue
0

〔575〕 Text　»
Prepare for 〔564 alarm_label_dictionary.Event〕 from 〔569 Formatted Date〕 to 〔570 Formatted Date〕 at 〔564 alarm_label_dictionary.Location〕

〔576〕 Set Variable Text to 〔575 Text〕

〔577〕 Otherwise

〔578〕 Text　»
Prepare for 〔564 alarm_label_dictionary.Event〕 from 〔569 Formatted Date〕 to 〔570 Formatted Date〕

〔579〕 Set Variable Text to 〔578 Text〕

〔580〕 End If

〔581〕 Speak Text
• Text: 〔Text〕

〔582〕 End If　▵568

〔583〕 End Repeat[2] with Each　▵563

〔584〕 End Repeat Times　▵556

〔585〕 End If　▵554

〔586〕 End If　▵547

〔587〕 If 〔Shortcut Input as Number〕 is 4

〔588〕 Comment
input case 4:
Notification Interrupt System
Stop protocol for voice announcements when any alarm is stopped.

〔589〕 Dictionary　»
{  "stop": "yes" }

〔590〕 Text　»
〔589 Dictionary〕

〔591〕 Save File 〔590 Text〕
• AskWhereToSave: false
• SaveFileOverwrite: true
• FileDestinationPath: 〔StopFlagSubPath〕

〔592〕 End If

〔593〕 End If　▵123